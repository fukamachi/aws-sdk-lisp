;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/comprehend/api
  (:use)
  (:nicknames #:aws/comprehend)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/comprehend/api)
(common-lisp:progn
 (common-lisp:define-condition comprehend-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'comprehend-error))
(common-lisp:progn
 (common-lisp:defclass comprehend-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "comprehend" :api-version
                        "2017-11-27" :host-prefix "comprehend" :signing-name
                        "comprehend" :global-host common-lisp:nil
                        :target-prefix "Comprehend_20171127" :json-version
                        "1.1"))
 (common-lisp:export 'comprehend-request))
(common-lisp:defvar *error-map*
  '(("BatchSizeLimitExceededException" . batch-size-limit-exceeded-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidFilterException" . invalid-filter-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("JobNotFoundException" . job-not-found-exception)
    ("KmsKeyValidationException" . kms-key-validation-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ResourceUnavailableException" . resource-unavailable-exception)
    ("TextSizeLimitExceededException" . text-size-limit-exceeded-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("TooManyTagKeysException" . too-many-tag-keys-exception)
    ("TooManyTagsException" . too-many-tags-exception)
    ("UnsupportedLanguageException" . unsupported-language-exception)))
(common-lisp:deftype any-length-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-names-list ()
   '(trivial-types:proper-list attribute-names-list-item))
 (common-lisp:defun make-attribute-names-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attribute-names-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-names-list-item () 'common-lisp:string)
(common-lisp:deftype augmented-manifests-document-type-format ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass augmented-manifests-list-item common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-augmented-manifests-list-item-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (split :initarg :split :initform common-lisp:nil :type
                         (common-lisp:or split common-lisp:null) :accessor
                         struct-shape-augmented-manifests-list-item-split
                         :shape "Split" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-names :initarg :attribute-names :initform
                         (common-lisp:error ":attribute-names is required")
                         :type
                         (common-lisp:or attribute-names-list common-lisp:null)
                         :accessor
                         struct-shape-augmented-manifests-list-item-attribute-names
                         :shape "AttributeNamesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (annotation-data-s3uri :initarg :annotation-data-s3uri
                         :initform common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-augmented-manifests-list-item-annotation-data-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-documents-s3uri :initarg
                         :source-documents-s3uri :initform common-lisp:nil
                         :type (common-lisp:or s3uri common-lisp:null)
                         :accessor
                         struct-shape-augmented-manifests-list-item-source-documents-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-type :initarg :document-type :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          augmented-manifests-document-type-format
                          common-lisp:null)
                         :accessor
                         struct-shape-augmented-manifests-list-item-document-type
                         :shape "AugmentedManifestsDocumentTypeFormat"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-augmented-manifests-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'augmented-manifests-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'augmented-manifests-list-item
                    'make-augmented-manifests-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'split))
      (common-lisp:list
       (common-lisp:cons "Split"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'annotation-data-s3uri))
      (common-lisp:list
       (common-lisp:cons "AnnotationDataS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-documents-s3uri))
      (common-lisp:list
       (common-lisp:cons "SourceDocumentsS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          augmented-manifests-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-dominant-language-item-result
                       common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-dominant-language-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (languages :initarg :languages :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-dominant-languages
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-dominant-language-item-result-languages
                         :shape "ListOfDominantLanguages" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-dominant-language-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-dominant-language-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-item-result
                    'make-batch-detect-dominant-language-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'languages))
      (common-lisp:list
       (common-lisp:cons "Languages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-dominant-language-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-dominant-language-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-dominant-language-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-dominant-language-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-request
                    'make-batch-detect-dominant-language-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-dominant-language-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or
                          list-of-detect-dominant-language-result
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-dominant-language-response-result-list
                         :shape "ListOfDetectDominantLanguageResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-dominant-language-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-dominant-language-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-dominant-language-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-dominant-language-response
                    'make-batch-detect-dominant-language-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-dominant-language-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-entities-item-result common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-entities-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entities :initarg :entities :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-entities common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-entities-item-result-entities
                         :shape "ListOfEntities" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-entities-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-entities-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-item-result
                    'make-batch-detect-entities-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-entities-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-entities-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-entities-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-entities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-entities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-request
                    'make-batch-detect-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-entities-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or list-of-detect-entities-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-entities-response-result-list
                         :shape "ListOfDetectEntitiesResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-entities-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-entities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-entities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-entities-response
                    'make-batch-detect-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-key-phrases-item-result common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-key-phrases-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key-phrases :initarg :key-phrases :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-key-phrases common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-key-phrases-item-result-key-phrases
                         :shape "ListOfKeyPhrases" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-key-phrases-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-key-phrases-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-item-result
                    'make-batch-detect-key-phrases-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-phrases))
      (common-lisp:list
       (common-lisp:cons "KeyPhrases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-key-phrases-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-key-phrases-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-key-phrases-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-key-phrases-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-key-phrases-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-request
                    'make-batch-detect-key-phrases-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-key-phrases-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or list-of-detect-key-phrases-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-key-phrases-response-result-list
                         :shape "ListOfDetectKeyPhrasesResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-key-phrases-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-key-phrases-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-key-phrases-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-key-phrases-response
                    'make-batch-detect-key-phrases-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-key-phrases-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-sentiment-item-result common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-sentiment-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sentiment :initarg :sentiment :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-type common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-item-result-sentiment
                         :shape "SentimentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sentiment-score :initarg :sentiment-score :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-score common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-item-result-sentiment-score
                         :shape "SentimentScore" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-sentiment-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-sentiment-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-item-result
                    'make-batch-detect-sentiment-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-sentiment-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-sentiment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-sentiment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-request
                    'make-batch-detect-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-sentiment-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or list-of-detect-sentiment-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-response-result-list
                         :shape "ListOfDetectSentimentResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-sentiment-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-sentiment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-sentiment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-sentiment-response
                    'make-batch-detect-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-syntax-item-result common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-syntax-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (syntax-tokens :initarg :syntax-tokens :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-syntax-tokens
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-syntax-item-result-syntax-tokens
                         :shape "ListOfSyntaxTokens" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-syntax-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-syntax-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-item-result
                    'make-batch-detect-syntax-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax-tokens))
      (common-lisp:list
       (common-lisp:cons "SyntaxTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-syntax-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-syntax-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or syntax-language-code common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-syntax-request-language-code
                         :shape "SyntaxLanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-syntax-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-detect-syntax-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-request
                    'make-batch-detect-syntax-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-syntax-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or list-of-detect-syntax-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-syntax-response-result-list
                         :shape "ListOfDetectSyntaxResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-syntax-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-syntax-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-detect-syntax-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-syntax-response
                    'make-batch-detect-syntax-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-syntax-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-targeted-sentiment-item-result
                       common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-detect-targeted-sentiment-item-result-index
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entities :initarg :entities :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-targeted-sentiment-entities
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-targeted-sentiment-item-result-entities
                         :shape "ListOfTargetedSentimentEntities" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-targeted-sentiment-item-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-targeted-sentiment-item-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-item-result
                    'make-batch-detect-targeted-sentiment-item-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-item-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-targeted-sentiment-request common-lisp:nil
                       ((text-list :initarg :text-list :initform
                         (common-lisp:error ":text-list is required") :type
                         (common-lisp:or customer-input-string-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-targeted-sentiment-request-text-list
                         :shape "CustomerInputStringList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-targeted-sentiment-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-targeted-sentiment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-targeted-sentiment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-request
                    'make-batch-detect-targeted-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-list))
      (common-lisp:list
       (common-lisp:cons "TextList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-detect-targeted-sentiment-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         (common-lisp:error ":result-list is required") :type
                         (common-lisp:or
                          list-of-detect-targeted-sentiment-result
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-targeted-sentiment-response-result-list
                         :shape "ListOfDetectTargetedSentimentResult" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error-list :initarg :error-list :initform
                         (common-lisp:error ":error-list is required") :type
                         (common-lisp:or batch-item-error-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-detect-targeted-sentiment-response-error-list
                         :shape "BatchItemErrorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-detect-targeted-sentiment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-detect-targeted-sentiment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-detect-targeted-sentiment-response
                    'make-batch-detect-targeted-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-list))
      (common-lisp:list
       (common-lisp:cons "ErrorList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-detect-targeted-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-item-error common-lisp:nil
                       ((index :initarg :index :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-item-error-index :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-item-error-error-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-item-error-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-item-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-item-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-item-error 'make-batch-item-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-item-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-item-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'index))
      (common-lisp:list
       (common-lisp:cons "Index"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-item-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-item-error-list ()
   '(trivial-types:proper-list batch-item-error))
 (common-lisp:defun make-batch-item-error-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-item-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition batch-size-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       batch-size-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'batch-size-limit-exceeded-exception
                    'batch-size-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass block common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-block-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (block-type :initarg :block-type :initform
                         common-lisp:nil :type
                         (common-lisp:or block-type common-lisp:null) :accessor
                         struct-shape-block-block-type :shape "BlockType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-block-text :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-block-page :shape "Integer" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (geometry :initarg :geometry :initform common-lisp:nil
                         :type (common-lisp:or geometry common-lisp:null)
                         :accessor struct-shape-block-geometry :shape
                         "Geometry" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (relationships :initarg :relationships :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-relationships
                                         common-lisp:null)
                         :accessor struct-shape-block-relationships :shape
                         "ListOfRelationships" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-block
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'block
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'block 'make-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-type))
      (common-lisp:list
       (common-lisp:cons "BlockType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'geometry))
      (common-lisp:list
       (common-lisp:cons "Geometry"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationships))
      (common-lisp:list
       (common-lisp:cons "Relationships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass block-reference common-lisp:nil
                       ((block-id :initarg :block-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-block-reference-block-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-block-reference-begin-offset :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-block-reference-end-offset :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (child-blocks :initarg :child-blocks :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-child-blocks common-lisp:null)
                         :accessor struct-shape-block-reference-child-blocks
                         :shape "ListOfChildBlocks" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-block-reference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'block-reference
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'block-reference 'make-block-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input block-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input block-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-id))
      (common-lisp:list
       (common-lisp:cons "BlockId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-blocks))
      (common-lisp:list
       (common-lisp:cons "ChildBlocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input block-reference))
   common-lisp:nil))
(common-lisp:deftype block-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass bounding-box common-lisp:nil
                       ((height :initarg :height :initform common-lisp:nil
                         :type (common-lisp:or float common-lisp:null)
                         :accessor struct-shape-bounding-box-height :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (left :initarg :left :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-bounding-box-left :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (top :initarg :top :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-bounding-box-top :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (width :initarg :width :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-bounding-box-width :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bounding-box
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'bounding-box
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'bounding-box 'make-bounding-box))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input bounding-box))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input bounding-box))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height))
      (common-lisp:list
       (common-lisp:cons "Height"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'left))
      (common-lisp:list
       (common-lisp:cons "Left"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'top))
      (common-lisp:list
       (common-lisp:cons "Top"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width))
      (common-lisp:list
       (common-lisp:cons "Width"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input bounding-box))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass child-block common-lisp:nil
                       ((child-block-id :initarg :child-block-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-child-block-child-block-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-child-block-begin-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-child-block-end-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-child-block
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'child-block
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'child-block 'make-child-block))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input child-block))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input child-block))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'child-block-id))
      (common-lisp:list
       (common-lisp:cons "ChildBlockId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input child-block))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classifier-evaluation-metrics common-lisp:nil
                       ((accuracy :initarg :accuracy :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-classifier-evaluation-metrics-accuracy
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (precision :initarg :precision :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-classifier-evaluation-metrics-precision
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recall :initarg :recall :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-classifier-evaluation-metrics-recall
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (f1score :initarg :f1score :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-classifier-evaluation-metrics-f1score
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (micro-precision :initarg :micro-precision :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-classifier-evaluation-metrics-micro-precision
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (micro-recall :initarg :micro-recall :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-classifier-evaluation-metrics-micro-recall
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (micro-f1score :initarg :micro-f1score :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-classifier-evaluation-metrics-micro-f1score
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hamming-loss :initarg :hamming-loss :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-classifier-evaluation-metrics-hamming-loss
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classifier-evaluation-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'classifier-evaluation-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classifier-evaluation-metrics
                    'make-classifier-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accuracy))
      (common-lisp:list
       (common-lisp:cons "Accuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-precision))
      (common-lisp:list
       (common-lisp:cons "MicroPrecision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-recall))
      (common-lisp:list
       (common-lisp:cons "MicroRecall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'micro-f1score))
      (common-lisp:list
       (common-lisp:cons "MicroF1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hamming-loss))
      (common-lisp:list
       (common-lisp:cons "HammingLoss"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classifier-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classifier-metadata common-lisp:nil
                       ((number-of-labels :initarg :number-of-labels :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-classifier-metadata-number-of-labels
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-trained-documents :initarg
                         :number-of-trained-documents :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-classifier-metadata-number-of-trained-documents
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-test-documents :initarg
                         :number-of-test-documents :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-classifier-metadata-number-of-test-documents
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-metrics :initarg :evaluation-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or classifier-evaluation-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-classifier-metadata-evaluation-metrics
                         :shape "ClassifierEvaluationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classifier-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classifier-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classifier-metadata 'make-classifier-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input classifier-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input classifier-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-labels))
      (common-lisp:list
       (common-lisp:cons "NumberOfLabels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-trained-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainedDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-test-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTestDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input classifier-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classify-document-request common-lisp:nil
                       ((text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-classify-document-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or document-classifier-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-classify-document-request-endpoint-arn
                         :shape "DocumentClassifierEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (bytes :initarg :bytes :initform common-lisp:nil :type
                         (common-lisp:or semi-structured-document-blob
                                         common-lisp:null)
                         :accessor struct-shape-classify-document-request-bytes
                         :shape "SemiStructuredDocumentBlob" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (document-reader-config :initarg
                         :document-reader-config :initform common-lisp:nil
                         :type
                         (common-lisp:or document-reader-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-classify-document-request-document-reader-config
                         :shape "DocumentReaderConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classify-document-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classify-document-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classify-document-request
                    'make-classify-document-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes))
      (common-lisp:list
       (common-lisp:cons "Bytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass classify-document-response common-lisp:nil
                       ((classes :initarg :classes :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-classes common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-classes :shape
                         "ListOfClasses" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (labels :initarg :labels :initform common-lisp:nil
                         :type (common-lisp:or list-of-labels common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-labels :shape
                         "ListOfLabels" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-metadata :initarg :document-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or document-metadata common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-document-metadata
                         :shape "DocumentMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-type :initarg :document-type :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-document-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-document-type
                         :shape "ListOfDocumentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type (common-lisp:or list-of-errors common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-errors :shape
                         "ListOfErrors" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-warnings common-lisp:null)
                         :accessor
                         struct-shape-classify-document-response-warnings
                         :shape "ListOfWarnings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-classify-document-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'classify-document-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'classify-document-response
                    'make-classify-document-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'classes))
      (common-lisp:list
       (common-lisp:cons "Classes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-metadata))
      (common-lisp:list
       (common-lisp:cons "DocumentMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classify-document-response))
   common-lisp:nil))
(common-lisp:deftype client-request-token-string () 'common-lisp:string)
(common-lisp:deftype comprehend-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-arn-name () 'common-lisp:string)
(common-lisp:deftype comprehend-dataset-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-endpoint-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-endpoint-name () 'common-lisp:string)
(common-lisp:deftype comprehend-flywheel-arn () 'common-lisp:string)
(common-lisp:deftype comprehend-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:defclass contains-pii-entities-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-contains-pii-entities-request-text :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-contains-pii-entities-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-contains-pii-entities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'contains-pii-entities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'contains-pii-entities-request
                    'make-contains-pii-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass contains-pii-entities-response common-lisp:nil
                       ((labels :initarg :labels :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-entity-labels
                                         common-lisp:null)
                         :accessor
                         struct-shape-contains-pii-entities-response-labels
                         :shape "ListOfEntityLabels" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-contains-pii-entities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'contains-pii-entities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'contains-pii-entities-response
                    'make-contains-pii-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contains-pii-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-dataset-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dataset-name :initarg :dataset-name :initform
                         (common-lisp:error ":dataset-name is required") :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-dataset-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dataset-type :initarg :dataset-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-type common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-dataset-type
                         :shape "DatasetType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or dataset-input-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-input-data-config
                         :shape "DatasetInputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-dataset-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-dataset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-dataset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-dataset-request 'make-create-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-name))
      (common-lisp:list
       (common-lisp:cons "DatasetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-dataset-response common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-dataset-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-dataset-response-dataset-arn
                         :shape "ComprehendDatasetArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-dataset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-dataset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-dataset-response 'make-create-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-document-classifier-request common-lisp:nil
                       ((document-classifier-name :initarg
                         :document-classifier-name :initform
                         (common-lisp:error
                          ":document-classifier-name is required")
                         :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-document-classifier-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version-name :initarg :version-name :initform
                         common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-document-classifier-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or document-classifier-input-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-input-data-config
                         :shape "DocumentClassifierInputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or document-classifier-output-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-output-data-config
                         :shape "DocumentClassifierOutputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-create-document-classifier-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-create-document-classifier-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or document-classifier-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-request-mode
                         :shape "DocumentClassifierMode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-create-document-classifier-request-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-policy :initarg :model-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or policy common-lisp:null) :accessor
                         struct-shape-create-document-classifier-request-model-policy
                         :shape "Policy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-document-classifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-document-classifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-document-classifier-request
                    'make-create-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-policy))
      (common-lisp:list
       (common-lisp:cons "ModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-document-classifier-response common-lisp:nil
                       ((document-classifier-arn :initarg
                         :document-classifier-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-document-classifier-response-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-document-classifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-document-classifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-document-classifier-response
                    'make-create-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-endpoint-request common-lisp:nil
                       ((endpoint-name :initarg :endpoint-name :initform
                         (common-lisp:error ":endpoint-name is required") :type
                         (common-lisp:or comprehend-endpoint-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-endpoint-name
                         :shape "ComprehendEndpointName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (model-arn :initarg :model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-model-arn :shape
                         "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (desired-inference-units :initarg
                         :desired-inference-units :initform
                         (common-lisp:error
                          ":desired-inference-units is required")
                         :type
                         (common-lisp:or inference-units-integer
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-desired-inference-units
                         :shape "InferenceUnitsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-endpoint-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-request 'make-create-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-name))
      (common-lisp:list
       (common-lisp:cons "EndpointName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-endpoint-response common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-endpoint-arn
                         :shape "ComprehendEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (model-arn :initarg :model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-model-arn :shape
                         "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-response 'make-create-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-entity-recognizer-request common-lisp:nil
                       ((recognizer-name :initarg :recognizer-name :initform
                         (common-lisp:error ":recognizer-name is required")
                         :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-recognizer-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version-name :initarg :version-name :initform
                         common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-entity-recognizer-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or entity-recognizer-input-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-input-data-config
                         :shape "EntityRecognizerInputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-create-entity-recognizer-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-create-entity-recognizer-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-create-entity-recognizer-request-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-policy :initarg :model-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or policy common-lisp:null) :accessor
                         struct-shape-create-entity-recognizer-request-model-policy
                         :shape "Policy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-entity-recognizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-entity-recognizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-entity-recognizer-request
                    'make-create-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-policy))
      (common-lisp:list
       (common-lisp:cons "ModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-entity-recognizer-response common-lisp:nil
                       ((entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-entity-recognizer-response-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-entity-recognizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-entity-recognizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-entity-recognizer-response
                    'make-create-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-flywheel-request common-lisp:nil
                       ((flywheel-name :initarg :flywheel-name :initform
                         (common-lisp:error ":flywheel-name is required") :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-flywheel-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (active-model-arn :initarg :active-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-active-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-config :initarg :task-config :initform
                         common-lisp:nil :type
                         (common-lisp:or task-config common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-task-config
                         :shape "TaskConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-type :initarg :model-type :initform
                         common-lisp:nil :type
                         (common-lisp:or model-type common-lisp:null) :accessor
                         struct-shape-create-flywheel-request-model-type :shape
                         "ModelType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-lake-s3uri :initarg :data-lake-s3uri :initform
                         (common-lisp:error ":data-lake-s3uri is required")
                         :type (common-lisp:or flywheel-s3uri common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-data-lake-s3uri
                         :shape "FlywheelS3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-security-config :initarg :data-security-config
                         :initform common-lisp:nil :type
                         (common-lisp:or data-security-config common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-data-security-config
                         :shape "DataSecurityConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-flywheel-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-flywheel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-flywheel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-flywheel-request 'make-create-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-name))
      (common-lisp:list
       (common-lisp:cons "FlywheelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-config))
      (common-lisp:list
       (common-lisp:cons "TaskConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-flywheel-response common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-response-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (active-model-arn :initarg :active-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-flywheel-response-active-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-flywheel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-flywheel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-flywheel-response 'make-create-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-flywheel-response))
   common-lisp:nil))
(common-lisp:deftype customer-input-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype customer-input-string-list ()
   '(trivial-types:proper-list customer-input-string))
 (common-lisp:defun make-customer-input-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list customer-input-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass data-security-config common-lisp:nil
                       ((model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-data-security-config-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-data-security-config-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-lake-kms-key-id :initarg :data-lake-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-data-security-config-data-lake-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-data-security-config-vpc-config :shape
                         "VpcConfig" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-security-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data-security-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'data-security-config 'make-data-security-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-security-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-security-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-lake-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "DataLakeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-security-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-augmented-manifests-list ()
   '(trivial-types:proper-list dataset-augmented-manifests-list-item))
 (common-lisp:defun make-dataset-augmented-manifests-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dataset-augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dataset-augmented-manifests-list-item common-lisp:nil
                       ((attribute-names :initarg :attribute-names :initform
                         (common-lisp:error ":attribute-names is required")
                         :type
                         (common-lisp:or attribute-names-list common-lisp:null)
                         :accessor
                         struct-shape-dataset-augmented-manifests-list-item-attribute-names
                         :shape "AttributeNamesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-augmented-manifests-list-item-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (annotation-data-s3uri :initarg :annotation-data-s3uri
                         :initform common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-augmented-manifests-list-item-annotation-data-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-documents-s3uri :initarg
                         :source-documents-s3uri :initform common-lisp:nil
                         :type (common-lisp:or s3uri common-lisp:null)
                         :accessor
                         struct-shape-dataset-augmented-manifests-list-item-source-documents-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-type :initarg :document-type :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          augmented-manifests-document-type-format
                          common-lisp:null)
                         :accessor
                         struct-shape-dataset-augmented-manifests-list-item-document-type
                         :shape "AugmentedManifestsDocumentTypeFormat"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-augmented-manifests-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-augmented-manifests-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-augmented-manifests-list-item
                    'make-dataset-augmented-manifests-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'annotation-data-s3uri))
      (common-lisp:list
       (common-lisp:cons "AnnotationDataS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-documents-s3uri))
      (common-lisp:list
       (common-lisp:cons "SourceDocumentsS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-augmented-manifests-list-item))
   common-lisp:nil))
(common-lisp:deftype dataset-data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass dataset-document-classifier-input-data-config
                       common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-document-classifier-input-data-config-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (label-delimiter :initarg :label-delimiter :initform
                         common-lisp:nil :type
                         (common-lisp:or label-delimiter common-lisp:null)
                         :accessor
                         struct-shape-dataset-document-classifier-input-data-config-label-delimiter
                         :shape "LabelDelimiter" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-document-classifier-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-document-classifier-input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-document-classifier-input-data-config
                    'make-dataset-document-classifier-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label-delimiter))
      (common-lisp:list
       (common-lisp:cons "LabelDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-document-classifier-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-entity-recognizer-annotations common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-entity-recognizer-annotations-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-entity-recognizer-annotations
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-entity-recognizer-annotations
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-annotations
                    'make-dataset-entity-recognizer-annotations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-annotations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-entity-recognizer-documents common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-entity-recognizer-documents-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-format :initarg :input-format :initform
                         common-lisp:nil :type
                         (common-lisp:or input-format common-lisp:null)
                         :accessor
                         struct-shape-dataset-entity-recognizer-documents-input-format
                         :shape "InputFormat" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-entity-recognizer-documents
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-entity-recognizer-documents
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-documents
                    'make-dataset-entity-recognizer-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-documents))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-entity-recognizer-entity-list common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-entity-recognizer-entity-list-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-entity-recognizer-entity-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-entity-recognizer-entity-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-entity-list
                    'make-dataset-entity-recognizer-entity-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-entity-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-entity-recognizer-input-data-config
                       common-lisp:nil
                       ((annotations :initarg :annotations :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-entity-recognizer-annotations
                                         common-lisp:null)
                         :accessor
                         struct-shape-dataset-entity-recognizer-input-data-config-annotations
                         :shape "DatasetEntityRecognizerAnnotations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (documents :initarg :documents :initform
                         (common-lisp:error ":documents is required") :type
                         (common-lisp:or dataset-entity-recognizer-documents
                                         common-lisp:null)
                         :accessor
                         struct-shape-dataset-entity-recognizer-input-data-config-documents
                         :shape "DatasetEntityRecognizerDocuments" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (entity-list :initarg :entity-list :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-entity-recognizer-entity-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-dataset-entity-recognizer-input-data-config-entity-list
                         :shape "DatasetEntityRecognizerEntityList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-entity-recognizer-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dataset-entity-recognizer-input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-entity-recognizer-input-data-config
                    'make-dataset-entity-recognizer-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'annotations))
      (common-lisp:list
       (common-lisp:cons "Annotations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-list))
      (common-lisp:list
       (common-lisp:cons "EntityList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-entity-recognizer-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-filter common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or dataset-status common-lisp:null)
                         :accessor struct-shape-dataset-filter-status :shape
                         "DatasetStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dataset-type :initarg :dataset-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-type common-lisp:null)
                         :accessor struct-shape-dataset-filter-dataset-type
                         :shape "DatasetType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-after :initarg :creation-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dataset-filter-creation-time-after :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time-before :initarg :creation-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dataset-filter-creation-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dataset-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dataset-filter 'make-dataset-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-input-data-config common-lisp:nil
                       ((augmented-manifests :initarg :augmented-manifests
                         :initform common-lisp:nil :type
                         (common-lisp:or dataset-augmented-manifests-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-dataset-input-data-config-augmented-manifests
                         :shape "DatasetAugmentedManifestsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (data-format :initarg :data-format :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-data-format common-lisp:null)
                         :accessor
                         struct-shape-dataset-input-data-config-data-format
                         :shape "DatasetDataFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-classifier-input-data-config :initarg
                         :document-classifier-input-data-config :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          dataset-document-classifier-input-data-config
                          common-lisp:null)
                         :accessor
                         struct-shape-dataset-input-data-config-document-classifier-input-data-config
                         :shape "DatasetDocumentClassifierInputDataConfig"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (entity-recognizer-input-data-config :initarg
                         :entity-recognizer-input-data-config :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          dataset-entity-recognizer-input-data-config
                          common-lisp:null)
                         :accessor
                         struct-shape-dataset-input-data-config-entity-recognizer-input-data-config
                         :shape "DatasetEntityRecognizerInputDataConfig"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dataset-input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-input-data-config
                    'make-dataset-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-input-data-config))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierInputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-input-data-config))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerInputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dataset-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-properties common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-dataset-arn
                                         common-lisp:null)
                         :accessor struct-shape-dataset-properties-dataset-arn
                         :shape "ComprehendDatasetArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dataset-name :initarg :dataset-name :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor struct-shape-dataset-properties-dataset-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dataset-type :initarg :dataset-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dataset-type common-lisp:null)
                         :accessor struct-shape-dataset-properties-dataset-type
                         :shape "DatasetType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dataset-s3uri :initarg :dataset-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-dataset-properties-dataset-s3uri :shape
                         "S3Uri" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-dataset-properties-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or dataset-status common-lisp:null)
                         :accessor struct-shape-dataset-properties-status
                         :shape "DatasetStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor struct-shape-dataset-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-documents :initarg :number-of-documents
                         :initform common-lisp:nil :type
                         (common-lisp:or number-of-documents common-lisp:null)
                         :accessor
                         struct-shape-dataset-properties-number-of-documents
                         :shape "NumberOfDocuments" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dataset-properties-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-dataset-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dataset-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-properties 'make-dataset-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-name))
      (common-lisp:list
       (common-lisp:cons "DatasetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-type))
      (common-lisp:list
       (common-lisp:cons "DatasetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-s3uri))
      (common-lisp:list
       (common-lisp:cons "DatasetS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-properties-list ()
   '(trivial-types:proper-list dataset-properties))
 (common-lisp:defun make-dataset-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dataset-status () 'common-lisp:string)
(common-lisp:deftype dataset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-document-classifier-request common-lisp:nil
                       ((document-classifier-arn :initarg
                         :document-classifier-arn :initform
                         (common-lisp:error
                          ":document-classifier-arn is required")
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-document-classifier-request-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-document-classifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-document-classifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-document-classifier-request
                    'make-delete-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-document-classifier-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-document-classifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-document-classifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-document-classifier-response
                    'make-delete-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-request common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or comprehend-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-endpoint-request-endpoint-arn
                         :shape "ComprehendEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-request 'make-delete-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-response 'make-delete-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-entity-recognizer-request common-lisp:nil
                       ((entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform
                         (common-lisp:error
                          ":entity-recognizer-arn is required")
                         :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-entity-recognizer-request-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-entity-recognizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-entity-recognizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-entity-recognizer-request
                    'make-delete-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-entity-recognizer-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-entity-recognizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-entity-recognizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-entity-recognizer-response
                    'make-delete-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-flywheel-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-flywheel-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-flywheel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-flywheel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-flywheel-request 'make-delete-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-flywheel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-flywheel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-flywheel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-flywheel-response 'make-delete-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-flywheel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-resource-policy-request-resource-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-revision-id :initarg :policy-revision-id
                         :initform common-lisp:nil :type
                         (common-lisp:or policy-revision-id common-lisp:null)
                         :accessor
                         struct-shape-delete-resource-policy-request-policy-revision-id
                         :shape "PolicyRevisionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-resource-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-request
                    'make-delete-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-policy-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-resource-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-resource-policy-response
                    'make-delete-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dataset-request common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         (common-lisp:error ":dataset-arn is required") :type
                         (common-lisp:or comprehend-dataset-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-dataset-request-dataset-arn
                         :shape "ComprehendDatasetArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dataset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-dataset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-request 'make-describe-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "DatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dataset-response common-lisp:nil
                       ((dataset-properties :initarg :dataset-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or dataset-properties common-lisp:null)
                         :accessor
                         struct-shape-describe-dataset-response-dataset-properties
                         :shape "DatasetProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dataset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-dataset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-response
                    'make-describe-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-properties))
      (common-lisp:list
       (common-lisp:cons "DatasetProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-document-classification-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-document-classification-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-document-classification-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-document-classification-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-document-classification-job-request
                    'make-describe-document-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-document-classification-job-response
                       common-lisp:nil
                       ((document-classification-job-properties :initarg
                         :document-classification-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classification-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-document-classification-job-response-document-classification-job-properties
                         :shape "DocumentClassificationJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-document-classification-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-document-classification-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-document-classification-job-response
                    'make-describe-document-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-job-properties))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-document-classifier-request common-lisp:nil
                       ((document-classifier-arn :initarg
                         :document-classifier-arn :initform
                         (common-lisp:error
                          ":document-classifier-arn is required")
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-document-classifier-request-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-document-classifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-document-classifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-document-classifier-request
                    'make-describe-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-document-classifier-response common-lisp:nil
                       ((document-classifier-properties :initarg
                         :document-classifier-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-document-classifier-response-document-classifier-properties
                         :shape "DocumentClassifierProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-document-classifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-document-classifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-document-classifier-response
                    'make-describe-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-properties))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dominant-language-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-dominant-language-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dominant-language-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-dominant-language-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dominant-language-detection-job-request
                    'make-describe-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-dominant-language-detection-job-response
                       common-lisp:nil
                       ((dominant-language-detection-job-properties :initarg
                         :dominant-language-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          dominant-language-detection-job-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-dominant-language-detection-job-response-dominant-language-detection-job-properties
                         :shape "DominantLanguageDetectionJobProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-dominant-language-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-dominant-language-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-dominant-language-detection-job-response
                    'make-describe-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dominant-language-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "DominantLanguageDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-endpoint-request common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or comprehend-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-request-endpoint-arn
                         :shape "ComprehendEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-request
                    'make-describe-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-endpoint-response common-lisp:nil
                       ((endpoint-properties :initarg :endpoint-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or endpoint-properties common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-endpoint-properties
                         :shape "EndpointProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-response
                    'make-describe-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-properties))
      (common-lisp:list
       (common-lisp:cons "EndpointProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entities-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-entities-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entities-detection-job-request
                    'make-describe-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entities-detection-job-response common-lisp:nil
                       ((entities-detection-job-properties :initarg
                         :entities-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or entities-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entities-detection-job-response-entities-detection-job-properties
                         :shape "EntitiesDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entities-detection-job-response
                    'make-describe-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entities-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "EntitiesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-recognizer-request common-lisp:nil
                       ((entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform
                         (common-lisp:error
                          ":entity-recognizer-arn is required")
                         :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-recognizer-request-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-recognizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-recognizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-recognizer-request
                    'make-describe-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-recognizer-response common-lisp:nil
                       ((entity-recognizer-properties :initarg
                         :entity-recognizer-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-recognizer-response-entity-recognizer-properties
                         :shape "EntityRecognizerProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-recognizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-recognizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-recognizer-response
                    'make-describe-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-properties))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-events-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-events-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-detection-job-request
                    'make-describe-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-detection-job-response common-lisp:nil
                       ((events-detection-job-properties :initarg
                         :events-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or events-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-events-detection-job-response-events-detection-job-properties
                         :shape "EventsDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-events-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-detection-job-response
                    'make-describe-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "EventsDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-flywheel-iteration-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-flywheel-iteration-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (flywheel-iteration-id :initarg :flywheel-iteration-id
                         :initform
                         (common-lisp:error
                          ":flywheel-iteration-id is required")
                         :type
                         (common-lisp:or flywheel-iteration-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-flywheel-iteration-request-flywheel-iteration-id
                         :shape "FlywheelIterationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-flywheel-iteration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-flywheel-iteration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-iteration-request
                    'make-describe-flywheel-iteration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-flywheel-iteration-response common-lisp:nil
                       ((flywheel-iteration-properties :initarg
                         :flywheel-iteration-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or flywheel-iteration-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-flywheel-iteration-response-flywheel-iteration-properties
                         :shape "FlywheelIterationProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-flywheel-iteration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-flywheel-iteration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-iteration-response
                    'make-describe-flywheel-iteration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-iteration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-flywheel-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-flywheel-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-flywheel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-flywheel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-request
                    'make-describe-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-flywheel-response common-lisp:nil
                       ((flywheel-properties :initarg :flywheel-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-properties common-lisp:null)
                         :accessor
                         struct-shape-describe-flywheel-response-flywheel-properties
                         :shape "FlywheelProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-flywheel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-flywheel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-flywheel-response
                    'make-describe-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-flywheel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-key-phrases-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-key-phrases-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-key-phrases-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-key-phrases-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-key-phrases-detection-job-request
                    'make-describe-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-key-phrases-detection-job-response
                       common-lisp:nil
                       ((key-phrases-detection-job-properties :initarg
                         :key-phrases-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or key-phrases-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-key-phrases-detection-job-response-key-phrases-detection-job-properties
                         :shape "KeyPhrasesDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-key-phrases-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-key-phrases-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-key-phrases-detection-job-response
                    'make-describe-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-phrases-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "KeyPhrasesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-pii-entities-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-pii-entities-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-pii-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-pii-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-pii-entities-detection-job-request
                    'make-describe-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-pii-entities-detection-job-response
                       common-lisp:nil
                       ((pii-entities-detection-job-properties :initarg
                         :pii-entities-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or pii-entities-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-pii-entities-detection-job-response-pii-entities-detection-job-properties
                         :shape "PiiEntitiesDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-pii-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-pii-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-pii-entities-detection-job-response
                    'make-describe-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pii-entities-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "PiiEntitiesDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-resource-policy-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-resource-policy-request-resource-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-resource-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-request
                    'make-describe-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-resource-policy-response common-lisp:nil
                       ((resource-policy :initarg :resource-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or policy common-lisp:null) :accessor
                         struct-shape-describe-resource-policy-response-resource-policy
                         :shape "Policy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-resource-policy-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-resource-policy-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-revision-id :initarg :policy-revision-id
                         :initform common-lisp:nil :type
                         (common-lisp:or policy-revision-id common-lisp:null)
                         :accessor
                         struct-shape-describe-resource-policy-response-policy-revision-id
                         :shape "PolicyRevisionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-resource-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-resource-policy-response
                    'make-describe-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-policy))
      (common-lisp:list
       (common-lisp:cons "ResourcePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-sentiment-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-sentiment-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-sentiment-detection-job-request
                    'make-describe-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-sentiment-detection-job-response
                       common-lisp:nil
                       ((sentiment-detection-job-properties :initarg
                         :sentiment-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-sentiment-detection-job-response-sentiment-detection-job-properties
                         :shape "SentimentDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-sentiment-detection-job-response
                    'make-describe-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sentiment-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "SentimentDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-targeted-sentiment-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-targeted-sentiment-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-targeted-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-targeted-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-targeted-sentiment-detection-job-request
                    'make-describe-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-targeted-sentiment-detection-job-response
                       common-lisp:nil
                       ((targeted-sentiment-detection-job-properties :initarg
                         :targeted-sentiment-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          targeted-sentiment-detection-job-properties
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-targeted-sentiment-detection-job-response-targeted-sentiment-detection-job-properties
                         :shape "TargetedSentimentDetectionJobProperties"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-targeted-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-targeted-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-targeted-sentiment-detection-job-response
                    'make-describe-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'targeted-sentiment-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "TargetedSentimentDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-topics-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-describe-topics-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-topics-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-topics-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-topics-detection-job-request
                    'make-describe-topics-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-topics-detection-job-response common-lisp:nil
                       ((topics-detection-job-properties :initarg
                         :topics-detection-job-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or topics-detection-job-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-topics-detection-job-response-topics-detection-job-properties
                         :shape "TopicsDetectionJobProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-topics-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-topics-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-topics-detection-job-response
                    'make-describe-topics-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topics-detection-job-properties))
      (common-lisp:list
       (common-lisp:cons "TopicsDetectionJobProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-topics-detection-job-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass detect-dominant-language-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-dominant-language-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-dominant-language-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detect-dominant-language-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-dominant-language-request
                    'make-detect-dominant-language-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-dominant-language-response common-lisp:nil
                       ((languages :initarg :languages :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-dominant-languages
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-dominant-language-response-languages
                         :shape "ListOfDominantLanguages" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-dominant-language-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detect-dominant-language-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-dominant-language-response
                    'make-detect-dominant-language-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'languages))
      (common-lisp:list
       (common-lisp:cons "Languages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-dominant-language-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-entities-request common-lisp:nil
                       ((text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-detect-entities-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-arn :initarg :endpoint-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-request-endpoint-arn
                         :shape "EntityRecognizerEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (bytes :initarg :bytes :initform common-lisp:nil :type
                         (common-lisp:or semi-structured-document-blob
                                         common-lisp:null)
                         :accessor struct-shape-detect-entities-request-bytes
                         :shape "SemiStructuredDocumentBlob" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (document-reader-config :initarg
                         :document-reader-config :initform common-lisp:nil
                         :type
                         (common-lisp:or document-reader-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-request-document-reader-config
                         :shape "DocumentReaderConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-entities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-entities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-entities-request 'make-detect-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes))
      (common-lisp:list
       (common-lisp:cons "Bytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-entities-response common-lisp:nil
                       ((entities :initarg :entities :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-entities common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-response-entities :shape
                         "ListOfEntities" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-metadata :initarg :document-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or document-metadata common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-response-document-metadata
                         :shape "DocumentMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-type :initarg :document-type :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-document-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-entities-response-document-type
                         :shape "ListOfDocumentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocks :initarg :blocks :initform common-lisp:nil
                         :type (common-lisp:or list-of-blocks common-lisp:null)
                         :accessor struct-shape-detect-entities-response-blocks
                         :shape "ListOfBlocks" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type (common-lisp:or list-of-errors common-lisp:null)
                         :accessor struct-shape-detect-entities-response-errors
                         :shape "ListOfErrors" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-entities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-entities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-entities-response 'make-detect-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-metadata))
      (common-lisp:list
       (common-lisp:cons "DocumentMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocks))
      (common-lisp:list
       (common-lisp:cons "Blocks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-key-phrases-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-detect-key-phrases-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-key-phrases-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-key-phrases-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-key-phrases-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-key-phrases-request
                    'make-detect-key-phrases-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-key-phrases-response common-lisp:nil
                       ((key-phrases :initarg :key-phrases :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-key-phrases common-lisp:null)
                         :accessor
                         struct-shape-detect-key-phrases-response-key-phrases
                         :shape "ListOfKeyPhrases" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-key-phrases-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-key-phrases-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-key-phrases-response
                    'make-detect-key-phrases-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-phrases))
      (common-lisp:list
       (common-lisp:cons "KeyPhrases"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-key-phrases-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-pii-entities-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-detect-pii-entities-request-text :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-pii-entities-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-pii-entities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-pii-entities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-pii-entities-request
                    'make-detect-pii-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-pii-entities-response common-lisp:nil
                       ((entities :initarg :entities :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-pii-entities common-lisp:null)
                         :accessor
                         struct-shape-detect-pii-entities-response-entities
                         :shape "ListOfPiiEntities" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-pii-entities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-pii-entities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-pii-entities-response
                    'make-detect-pii-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-pii-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-sentiment-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-detect-sentiment-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-sentiment-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-sentiment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-sentiment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-sentiment-request 'make-detect-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-sentiment-response common-lisp:nil
                       ((sentiment :initarg :sentiment :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-type common-lisp:null)
                         :accessor
                         struct-shape-detect-sentiment-response-sentiment
                         :shape "SentimentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sentiment-score :initarg :sentiment-score :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-score common-lisp:null)
                         :accessor
                         struct-shape-detect-sentiment-response-sentiment-score
                         :shape "SentimentScore" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-sentiment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-sentiment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-sentiment-response
                    'make-detect-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-syntax-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-detect-syntax-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or syntax-language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-syntax-request-language-code
                         :shape "SyntaxLanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-syntax-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-syntax-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-syntax-request 'make-detect-syntax-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-syntax-response common-lisp:nil
                       ((syntax-tokens :initarg :syntax-tokens :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-syntax-tokens
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-syntax-response-syntax-tokens
                         :shape "ListOfSyntaxTokens" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-syntax-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-syntax-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-syntax-response 'make-detect-syntax-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'syntax-tokens))
      (common-lisp:list
       (common-lisp:cons "SyntaxTokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-syntax-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-targeted-sentiment-request common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-targeted-sentiment-request-text
                         :shape "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-targeted-sentiment-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-targeted-sentiment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detect-targeted-sentiment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-targeted-sentiment-request
                    'make-detect-targeted-sentiment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-targeted-sentiment-response common-lisp:nil
                       ((entities :initarg :entities :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-targeted-sentiment-entities
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-targeted-sentiment-response-entities
                         :shape "ListOfTargetedSentimentEntities" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-targeted-sentiment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detect-targeted-sentiment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-targeted-sentiment-response
                    'make-detect-targeted-sentiment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "Entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-targeted-sentiment-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-toxic-content-request common-lisp:nil
                       ((text-segments :initarg :text-segments :initform
                         (common-lisp:error ":text-segments is required") :type
                         (common-lisp:or list-of-text-segments
                                         common-lisp:null)
                         :accessor
                         struct-shape-detect-toxic-content-request-text-segments
                         :shape "ListOfTextSegments" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-detect-toxic-content-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-toxic-content-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detect-toxic-content-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-toxic-content-request
                    'make-detect-toxic-content-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-segments))
      (common-lisp:list
       (common-lisp:cons "TextSegments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detect-toxic-content-response common-lisp:nil
                       ((result-list :initarg :result-list :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-toxic-labels common-lisp:null)
                         :accessor
                         struct-shape-detect-toxic-content-response-result-list
                         :shape "ListOfToxicLabels" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detect-toxic-content-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detect-toxic-content-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detect-toxic-content-response
                    'make-detect-toxic-content-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-list))
      (common-lisp:list
       (common-lisp:cons "ResultList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detect-toxic-content-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-class common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-document-class-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-document-class-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-document-class-page :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-class
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-class
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'document-class 'make-document-class))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-class))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-class))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-class))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-classification-config common-lisp:nil
                       ((mode :initarg :mode :initform
                         (common-lisp:error ":mode is required") :type
                         (common-lisp:or document-classifier-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classification-config-mode
                         :shape "DocumentClassifierMode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (labels :initarg :labels :initform common-lisp:nil
                         :type (common-lisp:or labels-list common-lisp:null)
                         :accessor
                         struct-shape-document-classification-config-labels
                         :shape "LabelsList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classification-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classification-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classification-config
                    'make-document-classification-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-classification-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-document-classification-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classification-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classification-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classification-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classification-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classification-job-filter
                    'make-document-classification-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-classification-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-document-classification-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classification-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-classifier-arn :initarg
                         :document-classifier-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-document-classification-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-document-classification-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classification-job-properties-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classification-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classification-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classification-job-properties
                    'make-document-classification-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classification-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype document-classification-job-properties-list ()
   '(trivial-types:proper-list document-classification-job-properties))
 (common-lisp:defun make-document-classification-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classification-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-classifier-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype document-classifier-augmented-manifests-list ()
   '(trivial-types:proper-list augmented-manifests-list-item))
 (common-lisp:defun make-document-classifier-augmented-manifests-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype document-classifier-data-format () 'common-lisp:string)
(common-lisp:deftype document-classifier-document-type-format ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass document-classifier-documents common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-document-classifier-documents-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-s3uri :initarg :test-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-document-classifier-documents-test-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-documents
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classifier-documents
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-documents
                    'make-document-classifier-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-documents))
   common-lisp:nil))
(common-lisp:deftype document-classifier-endpoint-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass document-classifier-filter common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or model-status common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-filter-status :shape
                         "ModelStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (document-classifier-name :initarg
                         :document-classifier-name :initform common-lisp:nil
                         :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-filter-document-classifier-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classifier-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classifier-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-classifier-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-filter
                    'make-document-classifier-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-classifier-input-data-config common-lisp:nil
                       ((data-format :initarg :data-format :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-data-format
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-data-format
                         :shape "DocumentClassifierDataFormat" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3uri :initarg :s3uri :initform common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-document-classifier-input-data-config-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-s3uri :initarg :test-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-document-classifier-input-data-config-test-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (label-delimiter :initarg :label-delimiter :initform
                         common-lisp:nil :type
                         (common-lisp:or label-delimiter common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-label-delimiter
                         :shape "LabelDelimiter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (augmented-manifests :initarg :augmented-manifests
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          document-classifier-augmented-manifests-list
                          common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-augmented-manifests
                         :shape "DocumentClassifierAugmentedManifestsList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (document-type :initarg :document-type :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          document-classifier-document-type-format
                          common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-document-type
                         :shape "DocumentClassifierDocumentTypeFormat"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (documents :initarg :documents :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-documents
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-documents
                         :shape "DocumentClassifierDocuments" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (document-reader-config :initarg
                         :document-reader-config :initform common-lisp:nil
                         :type
                         (common-lisp:or document-reader-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-input-data-config-document-reader-config
                         :shape "DocumentReaderConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classifier-input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-input-data-config
                    'make-document-classifier-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label-delimiter))
      (common-lisp:list
       (common-lisp:cons "LabelDelimiter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-type))
      (common-lisp:list
       (common-lisp:cons "DocumentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-input-data-config))
   common-lisp:nil))
(common-lisp:deftype document-classifier-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass document-classifier-output-data-config common-lisp:nil
                       ((s3uri :initarg :s3uri :initform common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-document-classifier-output-data-config-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-document-classifier-output-data-config-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-stats-s3prefix :initarg
                         :flywheel-stats-s3prefix :initform common-lisp:nil
                         :type (common-lisp:or s3uri common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-output-data-config-flywheel-stats-s3prefix
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-output-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classifier-output-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-output-data-config
                    'make-document-classifier-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-stats-s3prefix))
      (common-lisp:list
       (common-lisp:cons "FlywheelStatsS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-classifier-properties common-lisp:nil
                       ((document-classifier-arn :initarg
                         :document-classifier-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or model-status common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-status
                         :shape "ModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-start-time :initarg :training-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-training-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-end-time :initarg :training-end-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-training-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or document-classifier-input-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-input-data-config
                         :shape "DocumentClassifierInputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or document-classifier-output-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-output-data-config
                         :shape "DocumentClassifierOutputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (classifier-metadata :initarg :classifier-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or classifier-metadata common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-classifier-metadata
                         :shape "ClassifierMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or document-classifier-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-mode
                         :shape "DocumentClassifierMode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-document-classifier-properties-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version-name :initarg :version-name :initform
                         common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-model-arn :initarg :source-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-source-model-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-properties-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'document-classifier-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-properties
                    'make-document-classifier-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-start-time))
      (common-lisp:list
       (common-lisp:cons "TrainingStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-end-time))
      (common-lisp:list
       (common-lisp:cons "TrainingEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'classifier-metadata))
      (common-lisp:list
       (common-lisp:cons "ClassifierMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype document-classifier-properties-list ()
   '(trivial-types:proper-list document-classifier-properties))
 (common-lisp:defun make-document-classifier-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classifier-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype document-classifier-summaries-list ()
   '(trivial-types:proper-list document-classifier-summary))
 (common-lisp:defun make-document-classifier-summaries-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-classifier-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass document-classifier-summary common-lisp:nil
                       ((document-classifier-name :initarg
                         :document-classifier-name :initform common-lisp:nil
                         :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-summary-document-classifier-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-versions :initarg :number-of-versions
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-document-classifier-summary-number-of-versions
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-created-at :initarg
                         :latest-version-created-at :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-summary-latest-version-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-name :initarg :latest-version-name
                         :initform common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-summary-latest-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-status :initarg :latest-version-status
                         :initform common-lisp:nil :type
                         (common-lisp:or model-status common-lisp:null)
                         :accessor
                         struct-shape-document-classifier-summary-latest-version-status
                         :shape "ModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-classifier-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-classifier-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-classifier-summary
                    'make-document-classifier-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-name))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-versions))
      (common-lisp:list
       (common-lisp:cons "NumberOfVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-created-at))
      (common-lisp:list
       (common-lisp:cons "LatestVersionCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-name))
      (common-lisp:list
       (common-lisp:cons "LatestVersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-status))
      (common-lisp:list
       (common-lisp:cons "LatestVersionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-classifier-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-label common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-document-label-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-document-label-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-document-label-page :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-label
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-label
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'document-label 'make-document-label))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-label))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-label))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-label))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass document-metadata common-lisp:nil
                       ((pages :initarg :pages :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-document-metadata-pages :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (extracted-characters :initarg :extracted-characters
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-extracted-characters
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-metadata-extracted-characters
                         :shape "ListOfExtractedCharacters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-metadata 'make-document-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input document-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input document-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pages))
      (common-lisp:list
       (common-lisp:cons "Pages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'extracted-characters))
      (common-lisp:list
       (common-lisp:cons "ExtractedCharacters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input document-metadata))
   common-lisp:nil))
(common-lisp:deftype document-read-action () 'common-lisp:string)
(common-lisp:deftype document-read-feature-types () 'common-lisp:string)
(common-lisp:deftype document-read-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass document-reader-config common-lisp:nil
                       ((document-read-action :initarg :document-read-action
                         :initform
                         (common-lisp:error
                          ":document-read-action is required")
                         :type
                         (common-lisp:or document-read-action common-lisp:null)
                         :accessor
                         struct-shape-document-reader-config-document-read-action
                         :shape "DocumentReadAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-read-mode :initarg :document-read-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or document-read-mode common-lisp:null)
                         :accessor
                         struct-shape-document-reader-config-document-read-mode
                         :shape "DocumentReadMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (feature-types :initarg :feature-types :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-document-read-feature-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-document-reader-config-feature-types
                         :shape "ListOfDocumentReadFeatureTypes" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-reader-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-reader-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-reader-config 'make-document-reader-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-read-action))
      (common-lisp:list
       (common-lisp:cons "DocumentReadAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'document-read-mode))
      (common-lisp:list
       (common-lisp:cons "DocumentReadMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'feature-types))
      (common-lisp:list
       (common-lisp:cons "FeatureTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-reader-config))
   common-lisp:nil))
(common-lisp:deftype document-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass document-type-list-item common-lisp:nil
                       ((page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-document-type-list-item-page :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or document-type common-lisp:null)
                         :accessor struct-shape-document-type-list-item-type
                         :shape "DocumentType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-document-type-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'document-type-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'document-type-list-item 'make-document-type-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          document-type-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dominant-language common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-dominant-language-language-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-dominant-language-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dominant-language
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dominant-language
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dominant-language 'make-dominant-language))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dominant-language))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dominant-language))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dominant-language))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dominant-language-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dominant-language-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dominant-language-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dominant-language-detection-job-filter
                    'make-dominant-language-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dominant-language-detection-job-properties
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-dominant-language-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-dominant-language-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dominant-language-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'dominant-language-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dominant-language-detection-job-properties
                    'make-dominant-language-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          dominant-language-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dominant-language-detection-job-properties-list ()
   '(trivial-types:proper-list dominant-language-detection-job-properties))
 (common-lisp:defun make-dominant-language-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            dominant-language-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass endpoint-filter common-lisp:nil
                       ((model-arn :initarg :model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor struct-shape-endpoint-filter-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-status common-lisp:null)
                         :accessor struct-shape-endpoint-filter-status :shape
                         "EndpointStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-before :initarg :creation-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-filter-creation-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-after :initarg :creation-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-filter-creation-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'endpoint-filter 'make-endpoint-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-properties common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-endpoint-arn :shape
                         "ComprehendEndpointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-status common-lisp:null)
                         :accessor struct-shape-endpoint-properties-status
                         :shape "EndpointStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor struct-shape-endpoint-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-arn :initarg :model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor struct-shape-endpoint-properties-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (desired-model-arn :initarg :desired-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-desired-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (desired-inference-units :initarg
                         :desired-inference-units :initform common-lisp:nil
                         :type
                         (common-lisp:or inference-units-integer
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-desired-inference-units
                         :shape "InferenceUnitsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-inference-units :initarg
                         :current-inference-units :initform common-lisp:nil
                         :type
                         (common-lisp:or inference-units-integer
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-current-inference-units
                         :shape "InferenceUnitsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-properties-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-properties-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (desired-data-access-role-arn :initarg
                         :desired-data-access-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-desired-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-properties-flywheel-arn :shape
                         "ComprehendFlywheelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-properties 'make-endpoint-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-inference-units))
      (common-lisp:list
       (common-lisp:cons "CurrentInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredDataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype endpoint-properties-list ()
   '(trivial-types:proper-list endpoint-properties))
 (common-lisp:defun make-endpoint-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass entities-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-entities-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entities-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entities-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entities-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entities-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entities-detection-job-filter
                    'make-entities-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entities-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-entities-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entities-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-entities-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-entities-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-entities-detection-job-properties-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entities-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entities-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entities-detection-job-properties
                    'make-entities-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entities-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entities-detection-job-properties-list ()
   '(trivial-types:proper-list entities-detection-job-properties))
 (common-lisp:defun make-entities-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entities-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass entity common-lisp:nil
                       ((score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-entity-score :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or entity-type common-lisp:null)
                         :accessor struct-shape-entity-type :shape "EntityType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-entity-text :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-entity-begin-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-entity-end-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (block-references :initarg :block-references :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-block-references
                                         common-lisp:null)
                         :accessor struct-shape-entity-block-references :shape
                         "ListOfBlockReferences" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'entity 'make-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-references))
      (common-lisp:list
       (common-lisp:cons "BlockReferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-label common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pii-entity-type common-lisp:null)
                         :accessor struct-shape-entity-label-name :shape
                         "PiiEntityType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-entity-label-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-label
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-label
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'entity-label 'make-entity-label))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity-label))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity-label))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity-label))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognition-config common-lisp:nil
                       ((entity-types :initarg :entity-types :initform
                         (common-lisp:error ":entity-types is required") :type
                         (common-lisp:or entity-types-list common-lisp:null)
                         :accessor
                         struct-shape-entity-recognition-config-entity-types
                         :shape "EntityTypesList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognition-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognition-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognition-config
                    'make-entity-recognition-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognition-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-annotations common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-entity-recognizer-annotations-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-s3uri :initarg :test-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-entity-recognizer-annotations-test-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-annotations
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-annotations
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-annotations
                    'make-entity-recognizer-annotations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-annotations))
   common-lisp:nil))
(common-lisp:deftype entity-recognizer-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-augmented-manifests-list ()
   '(trivial-types:proper-list augmented-manifests-list-item))
 (common-lisp:defun make-entity-recognizer-augmented-manifests-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            augmented-manifests-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype entity-recognizer-data-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-documents common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-entity-recognizer-documents-s3uri :shape
                         "S3Uri" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (test-s3uri :initarg :test-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-entity-recognizer-documents-test-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-format :initarg :input-format :initform
                         common-lisp:nil :type
                         (common-lisp:or input-format common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-documents-input-format
                         :shape "InputFormat" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-documents
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognizer-documents
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-documents
                    'make-entity-recognizer-documents))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-s3uri))
      (common-lisp:list
       (common-lisp:cons "TestS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-documents))
   common-lisp:nil))
(common-lisp:deftype entity-recognizer-endpoint-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-entity-list common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-entity-recognizer-entity-list-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-entity-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-entity-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-entity-list
                    'make-entity-recognizer-entity-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-entity-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-evaluation-metrics common-lisp:nil
                       ((precision :initarg :precision :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-entity-recognizer-evaluation-metrics-precision
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recall :initarg :recall :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-evaluation-metrics-recall
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (f1score :initarg :f1score :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-evaluation-metrics-f1score
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-evaluation-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-evaluation-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-evaluation-metrics
                    'make-entity-recognizer-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-filter common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or model-status common-lisp:null)
                         :accessor struct-shape-entity-recognizer-filter-status
                         :shape "ModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recognizer-name :initarg :recognizer-name :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-filter-recognizer-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entity-recognizer-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entity-recognizer-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognizer-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-filter 'make-entity-recognizer-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-input-data-config common-lisp:nil
                       ((data-format :initarg :data-format :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-data-format
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-data-format
                         :shape "EntityRecognizerDataFormat" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (entity-types :initarg :entity-types :initform
                         (common-lisp:error ":entity-types is required") :type
                         (common-lisp:or entity-types-list common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-entity-types
                         :shape "EntityTypesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (documents :initarg :documents :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-documents
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-documents
                         :shape "EntityRecognizerDocuments" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (annotations :initarg :annotations :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-annotations
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-annotations
                         :shape "EntityRecognizerAnnotations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (entity-list :initarg :entity-list :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-entity-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-entity-list
                         :shape "EntityRecognizerEntityList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (augmented-manifests :initarg :augmented-manifests
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          entity-recognizer-augmented-manifests-list
                          common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-input-data-config-augmented-manifests
                         :shape "EntityRecognizerAugmentedManifestsList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-input-data-config
                    'make-entity-recognizer-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-format))
      (common-lisp:list
       (common-lisp:cons "DataFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'documents))
      (common-lisp:list
       (common-lisp:cons "Documents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'annotations))
      (common-lisp:list
       (common-lisp:cons "Annotations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-list))
      (common-lisp:list
       (common-lisp:cons "EntityList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'augmented-manifests))
      (common-lisp:list
       (common-lisp:cons "AugmentedManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-input-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-metadata common-lisp:nil
                       ((number-of-trained-documents :initarg
                         :number-of-trained-documents :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-number-of-trained-documents
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-test-documents :initarg
                         :number-of-test-documents :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-number-of-test-documents
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-metrics :initarg :evaluation-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-evaluation-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-evaluation-metrics
                         :shape "EntityRecognizerEvaluationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (entity-types :initarg :entity-types :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          entity-recognizer-metadata-entity-types-list
                          common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-entity-types
                         :shape "EntityRecognizerMetadataEntityTypesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-metadata
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognizer-metadata
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-metadata
                    'make-entity-recognizer-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-trained-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainedDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-test-documents))
      (common-lisp:list
       (common-lisp:cons "NumberOfTestDocuments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-types))
      (common-lisp:list
       (common-lisp:cons "EntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-metadata-entity-types-list ()
   '(trivial-types:proper-list
     entity-recognizer-metadata-entity-types-list-item))
 (common-lisp:defun make-entity-recognizer-metadata-entity-types-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-metadata-entity-types-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-metadata-entity-types-list-item
                       common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-entity-types-list-item-type
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-metrics :initarg :evaluation-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-types-evaluation-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-entity-types-list-item-evaluation-metrics
                         :shape "EntityTypesEvaluationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (number-of-train-mentions :initarg
                         :number-of-train-mentions :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-metadata-entity-types-list-item-number-of-train-mentions
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-metadata-entity-types-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-metadata-entity-types-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-metadata-entity-types-list-item
                    'make-entity-recognizer-metadata-entity-types-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-train-mentions))
      (common-lisp:list
       (common-lisp:cons "NumberOfTrainMentions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-metadata-entity-types-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-output-data-config common-lisp:nil
                       ((flywheel-stats-s3prefix :initarg
                         :flywheel-stats-s3prefix :initform common-lisp:nil
                         :type (common-lisp:or s3uri common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-output-data-config-flywheel-stats-s3prefix
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-output-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-recognizer-output-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-output-data-config
                    'make-entity-recognizer-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-stats-s3prefix))
      (common-lisp:list
       (common-lisp:cons "FlywheelStatsS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-properties common-lisp:nil
                       ((entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or model-status common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-status
                         :shape "ModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-start-time :initarg :training-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-training-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-end-time :initarg :training-end-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-training-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-input-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-input-data-config
                         :shape "EntityRecognizerInputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recognizer-metadata :initarg :recognizer-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-metadata
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-recognizer-metadata
                         :shape "EntityRecognizerMetadata" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-entity-recognizer-properties-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version-name :initarg :version-name :initform
                         common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-model-arn :initarg :source-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-source-model-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-output-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-properties-output-data-config
                         :shape "EntityRecognizerOutputDataConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognizer-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-properties
                    'make-entity-recognizer-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-start-time))
      (common-lisp:list
       (common-lisp:cons "TrainingStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-end-time))
      (common-lisp:list
       (common-lisp:cons "TrainingEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-metadata))
      (common-lisp:list
       (common-lisp:cons "RecognizerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-properties-list ()
   '(trivial-types:proper-list entity-recognizer-properties))
 (common-lisp:defun make-entity-recognizer-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype entity-recognizer-summaries-list ()
   '(trivial-types:proper-list entity-recognizer-summary))
 (common-lisp:defun make-entity-recognizer-summaries-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            entity-recognizer-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass entity-recognizer-summary common-lisp:nil
                       ((recognizer-name :initarg :recognizer-name :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-summary-recognizer-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-versions :initarg :number-of-versions
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-entity-recognizer-summary-number-of-versions
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-created-at :initarg
                         :latest-version-created-at :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-summary-latest-version-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-name :initarg :latest-version-name
                         :initform common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-summary-latest-version-name
                         :shape "VersionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-version-status :initarg :latest-version-status
                         :initform common-lisp:nil :type
                         (common-lisp:or model-status common-lisp:null)
                         :accessor
                         struct-shape-entity-recognizer-summary-latest-version-status
                         :shape "ModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-recognizer-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-recognizer-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-recognizer-summary
                    'make-entity-recognizer-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recognizer-name))
      (common-lisp:list
       (common-lisp:cons "RecognizerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-versions))
      (common-lisp:list
       (common-lisp:cons "NumberOfVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-created-at))
      (common-lisp:list
       (common-lisp:cons "LatestVersionCreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version-name))
      (common-lisp:list
       (common-lisp:cons "LatestVersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-version-status))
      (common-lisp:list
       (common-lisp:cons "LatestVersionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-recognizer-summary))
   common-lisp:nil))
(common-lisp:deftype entity-type () 'common-lisp:string)
(common-lisp:deftype entity-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass entity-types-evaluation-metrics common-lisp:nil
                       ((precision :initarg :precision :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-entity-types-evaluation-metrics-precision
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recall :initarg :recall :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-entity-types-evaluation-metrics-recall
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (f1score :initarg :f1score :initform common-lisp:nil
                         :type (common-lisp:or double common-lisp:null)
                         :accessor
                         struct-shape-entity-types-evaluation-metrics-f1score
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-types-evaluation-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'entity-types-evaluation-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-types-evaluation-metrics
                    'make-entity-types-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'precision))
      (common-lisp:list
       (common-lisp:cons "Precision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recall))
      (common-lisp:list
       (common-lisp:cons "Recall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'f1score))
      (common-lisp:list
       (common-lisp:cons "F1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-types-list ()
   '(trivial-types:proper-list entity-types-list-item))
 (common-lisp:defun make-entity-types-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-types-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass entity-types-list-item common-lisp:nil
                       ((type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or entity-type-name common-lisp:null)
                         :accessor struct-shape-entity-types-list-item-type
                         :shape "EntityTypeName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-types-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-types-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-types-list-item 'make-entity-types-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-types-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass errors-list-item common-lisp:nil
                       ((page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-errors-list-item-page :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or page-based-error-code
                                         common-lisp:null)
                         :accessor struct-shape-errors-list-item-error-code
                         :shape "PageBasedErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-errors-list-item-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-errors-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'errors-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'errors-list-item 'make-errors-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input errors-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input errors-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input errors-list-item))
   common-lisp:nil))
(common-lisp:deftype event-type-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass events-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-events-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-events-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-events-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'events-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'events-detection-job-filter
                    'make-events-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass events-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-events-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-events-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-event-types :initarg :target-event-types
                         :initform common-lisp:nil :type
                         (common-lisp:or target-event-types common-lisp:null)
                         :accessor
                         struct-shape-events-detection-job-properties-target-event-types
                         :shape "TargetEventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'events-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'events-detection-job-properties
                    'make-events-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-event-types))
      (common-lisp:list
       (common-lisp:cons "TargetEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          events-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype events-detection-job-properties-list ()
   '(trivial-types:proper-list events-detection-job-properties))
 (common-lisp:defun make-events-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            events-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass extracted-characters-list-item common-lisp:nil
                       ((page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-extracted-characters-list-item-page
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-extracted-characters-list-item-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-extracted-characters-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'extracted-characters-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'extracted-characters-list-item
                    'make-extracted-characters-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "Count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          extracted-characters-list-item))
   common-lisp:nil))
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defclass flywheel-filter common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-status common-lisp:null)
                         :accessor struct-shape-flywheel-filter-status :shape
                         "FlywheelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-after :initarg :creation-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-filter-creation-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-before :initarg :creation-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-filter-creation-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'flywheel-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'flywheel-filter 'make-flywheel-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass flywheel-iteration-filter common-lisp:nil
                       ((creation-time-after :initarg :creation-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-iteration-filter-creation-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time-before :initarg :creation-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-iteration-filter-creation-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-iteration-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'flywheel-iteration-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flywheel-iteration-filter
                    'make-flywheel-iteration-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time-after))
      (common-lisp:list
       (common-lisp:cons "CreationTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'creation-time-before))
      (common-lisp:list
       (common-lisp:cons "CreationTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-filter))
   common-lisp:nil))
(common-lisp:deftype flywheel-iteration-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass flywheel-iteration-properties common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (flywheel-iteration-id :initarg :flywheel-iteration-id
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-iteration-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-flywheel-iteration-id
                         :shape "FlywheelIterationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-iteration-properties-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-iteration-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-status
                         :shape "FlywheelIterationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluated-model-arn :initarg :evaluated-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-evaluated-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluated-model-metrics :initarg
                         :evaluated-model-metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-model-evaluation-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-evaluated-model-metrics
                         :shape "FlywheelModelEvaluationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trained-model-arn :initarg :trained-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-trained-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (trained-model-metrics :initarg :trained-model-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-model-evaluation-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-iteration-properties-trained-model-metrics
                         :shape "FlywheelModelEvaluationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (evaluation-manifest-s3prefix :initarg
                         :evaluation-manifest-s3prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-flywheel-iteration-properties-evaluation-manifest-s3prefix
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-iteration-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'flywheel-iteration-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flywheel-iteration-properties
                    'make-flywheel-iteration-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluated-model-arn))
      (common-lisp:list
       (common-lisp:cons "EvaluatedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluated-model-metrics))
      (common-lisp:list
       (common-lisp:cons "EvaluatedModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trained-model-arn))
      (common-lisp:list
       (common-lisp:cons "TrainedModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'trained-model-metrics))
      (common-lisp:list
       (common-lisp:cons "TrainedModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-manifest-s3prefix))
      (common-lisp:list
       (common-lisp:cons "EvaluationManifestS3Prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-iteration-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype flywheel-iteration-properties-list ()
   '(trivial-types:proper-list flywheel-iteration-properties))
 (common-lisp:defun make-flywheel-iteration-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            flywheel-iteration-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype flywheel-iteration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass flywheel-model-evaluation-metrics common-lisp:nil
                       ((average-f1score :initarg :average-f1score :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-flywheel-model-evaluation-metrics-average-f1score
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-precision :initarg :average-precision
                         :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-flywheel-model-evaluation-metrics-average-precision
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-recall :initarg :average-recall :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-flywheel-model-evaluation-metrics-average-recall
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-accuracy :initarg :average-accuracy :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-flywheel-model-evaluation-metrics-average-accuracy
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-model-evaluation-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'flywheel-model-evaluation-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flywheel-model-evaluation-metrics
                    'make-flywheel-model-evaluation-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-f1score))
      (common-lisp:list
       (common-lisp:cons "AverageF1Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-precision))
      (common-lisp:list
       (common-lisp:cons "AveragePrecision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-recall))
      (common-lisp:list
       (common-lisp:cons "AverageRecall"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'average-accuracy))
      (common-lisp:list
       (common-lisp:cons "AverageAccuracy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flywheel-model-evaluation-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass flywheel-properties common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-properties-flywheel-arn :shape
                         "ComprehendFlywheelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (active-model-arn :initarg :active-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-flywheel-properties-active-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-flywheel-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-config :initarg :task-config :initform
                         common-lisp:nil :type
                         (common-lisp:or task-config common-lisp:null)
                         :accessor struct-shape-flywheel-properties-task-config
                         :shape "TaskConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-lake-s3uri :initarg :data-lake-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-flywheel-properties-data-lake-s3uri
                         :shape "S3Uri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-security-config :initarg :data-security-config
                         :initform common-lisp:nil :type
                         (common-lisp:or data-security-config common-lisp:null)
                         :accessor
                         struct-shape-flywheel-properties-data-security-config
                         :shape "DataSecurityConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-status common-lisp:null)
                         :accessor struct-shape-flywheel-properties-status
                         :shape "FlywheelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-type :initarg :model-type :initform
                         common-lisp:nil :type
                         (common-lisp:or model-type common-lisp:null) :accessor
                         struct-shape-flywheel-properties-model-type :shape
                         "ModelType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor struct-shape-flywheel-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-properties-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-properties-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-flywheel-iteration :initarg
                         :latest-flywheel-iteration :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-iteration-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-properties-latest-flywheel-iteration
                         :shape "FlywheelIterationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'flywheel-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flywheel-properties 'make-flywheel-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-config))
      (common-lisp:list
       (common-lisp:cons "TaskConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-flywheel-iteration))
      (common-lisp:list
       (common-lisp:cons "LatestFlywheelIteration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-properties))
   common-lisp:nil))
(common-lisp:deftype flywheel-s3uri () 'common-lisp:string)
(common-lisp:deftype flywheel-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass flywheel-summary common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor struct-shape-flywheel-summary-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (active-model-arn :initarg :active-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-flywheel-summary-active-model-arn :shape
                         "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-lake-s3uri :initarg :data-lake-s3uri :initform
                         common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-flywheel-summary-data-lake-s3uri :shape
                         "S3Uri" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-status common-lisp:null)
                         :accessor struct-shape-flywheel-summary-status :shape
                         "FlywheelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-type :initarg :model-type :initform
                         common-lisp:nil :type
                         (common-lisp:or model-type common-lisp:null) :accessor
                         struct-shape-flywheel-summary-model-type :shape
                         "ModelType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor struct-shape-flywheel-summary-message :shape
                         "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-summary-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-flywheel-summary-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latest-flywheel-iteration :initarg
                         :latest-flywheel-iteration :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-iteration-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-flywheel-summary-latest-flywheel-iteration
                         :shape "FlywheelIterationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flywheel-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'flywheel-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flywheel-summary 'make-flywheel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input flywheel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input flywheel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-lake-s3uri))
      (common-lisp:list
       (common-lisp:cons "DataLakeS3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-type))
      (common-lisp:list
       (common-lisp:cons "ModelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'latest-flywheel-iteration))
      (common-lisp:list
       (common-lisp:cons "LatestFlywheelIteration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input flywheel-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype flywheel-summary-list ()
   '(trivial-types:proper-list flywheel-summary))
 (common-lisp:defun make-flywheel-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list flywheel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass geometry common-lisp:nil
                       ((bounding-box :initarg :bounding-box :initform
                         common-lisp:nil :type
                         (common-lisp:or bounding-box common-lisp:null)
                         :accessor struct-shape-geometry-bounding-box :shape
                         "BoundingBox" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (polygon :initarg :polygon :initform common-lisp:nil
                         :type (common-lisp:or polygon common-lisp:null)
                         :accessor struct-shape-geometry-polygon :shape
                         "Polygon" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-geometry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'geometry
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'geometry 'make-geometry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input geometry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input geometry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bounding-box))
      (common-lisp:list
       (common-lisp:cons "BoundingBox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'polygon))
      (common-lisp:list
       (common-lisp:cons "Polygon"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input geometry))
   common-lisp:nil))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass import-model-request common-lisp:nil
                       ((source-model-arn :initarg :source-model-arn :initform
                         (common-lisp:error ":source-model-arn is required")
                         :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-import-model-request-source-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-name :initarg :model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-arn-name common-lisp:null)
                         :accessor struct-shape-import-model-request-model-name
                         :shape "ComprehendArnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version-name :initarg :version-name :initform
                         common-lisp:nil :type
                         (common-lisp:or version-name common-lisp:null)
                         :accessor
                         struct-shape-import-model-request-version-name :shape
                         "VersionName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-import-model-request-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-import-model-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-import-model-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-model-request 'make-import-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-model-arn))
      (common-lisp:list
       (common-lisp:cons "SourceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version-name))
      (common-lisp:list
       (common-lisp:cons "VersionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-model-response common-lisp:nil
                       ((model-arn :initarg :model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor struct-shape-import-model-response-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-model-response 'make-import-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-arn))
      (common-lisp:list
       (common-lisp:cons "ModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-model-response))
   common-lisp:nil))
(common-lisp:deftype inference-units-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass input-data-config common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-input-data-config-s3uri :shape "S3Uri"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-format :initarg :input-format :initform
                         common-lisp:nil :type
                         (common-lisp:or input-format common-lisp:null)
                         :accessor struct-shape-input-data-config-input-format
                         :shape "InputFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-reader-config :initarg
                         :document-reader-config :initform common-lisp:nil
                         :type
                         (common-lisp:or document-reader-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-input-data-config-document-reader-config
                         :shape "DocumentReaderConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'input-data-config 'make-input-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-format))
      (common-lisp:list
       (common-lisp:cons "InputFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-reader-config))
      (common-lisp:list
       (common-lisp:cons "DocumentReaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-data-config))
   common-lisp:nil))
(common-lisp:deftype input-format () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-filter-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-filter-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-filter-exception
                    'invalid-filter-exception-message)))
(common-lisp:progn
 (common-lisp:defclass invalid-request-detail common-lisp:nil
                       ((reason :initarg :reason :initform common-lisp:nil
                         :type
                         (common-lisp:or invalid-request-detail-reason
                                         common-lisp:null)
                         :accessor struct-shape-invalid-request-detail-reason
                         :shape "InvalidRequestDetailReason" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invalid-request-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invalid-request-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invalid-request-detail 'make-invalid-request-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invalid-request-detail))
   common-lisp:nil))
(common-lisp:deftype invalid-request-detail-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       invalid-request-exception-reason)
      (detail :initarg :detail :initform common-lisp:nil :reader
       invalid-request-exception-detail)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message
                    'invalid-request-exception-reason
                    'invalid-request-exception-detail)))
(common-lisp:deftype invalid-request-reason () 'common-lisp:string)
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:deftype job-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition job-not-found-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       job-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'job-not-found-exception 'job-not-found-exception-message)))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass key-phrase common-lisp:nil
                       ((score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-key-phrase-score :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-key-phrase-text :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-key-phrase-begin-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-key-phrase-end-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-key-phrase
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'key-phrase
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'key-phrase 'make-key-phrase))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input key-phrase))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input key-phrase))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input key-phrase))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass key-phrases-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-key-phrases-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'key-phrases-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'key-phrases-detection-job-filter
                    'make-key-phrases-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass key-phrases-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-key-phrases-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-key-phrases-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-key-phrases-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'key-phrases-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'key-phrases-detection-job-properties
                    'make-key-phrases-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          key-phrases-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype key-phrases-detection-job-properties-list ()
   '(trivial-types:proper-list key-phrases-detection-job-properties))
 (common-lisp:defun make-key-phrases-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            key-phrases-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition kms-key-validation-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       kms-key-validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'kms-key-validation-exception
                    'kms-key-validation-exception-message)))
(common-lisp:deftype label-delimiter () 'common-lisp:string)
(common-lisp:deftype label-list-item () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype labels-list ()
   '(trivial-types:proper-list label-list-item))
 (common-lisp:defun make-labels-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list label-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-datasets-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-datasets-request-flywheel-arn :shape
                         "ComprehendFlywheelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter :initarg :filter :initform common-lisp:nil
                         :type (common-lisp:or dataset-filter common-lisp:null)
                         :accessor struct-shape-list-datasets-request-filter
                         :shape "DatasetFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-datasets-request-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-datasets-request-max-results :shape
                         "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-datasets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-datasets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-datasets-request 'make-list-datasets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-datasets-response common-lisp:nil
                       ((dataset-properties-list :initarg
                         :dataset-properties-list :initform common-lisp:nil
                         :type
                         (common-lisp:or dataset-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-datasets-response-dataset-properties-list
                         :shape "DatasetPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-datasets-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-datasets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-datasets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-datasets-response 'make-list-datasets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dataset-properties-list))
      (common-lisp:list
       (common-lisp:cons "DatasetPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-datasets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classification-jobs-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classification-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-document-classification-jobs-request-filter
                         :shape "DocumentClassificationJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classification-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-document-classification-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classification-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classification-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classification-jobs-request
                    'make-list-document-classification-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classification-jobs-response
                       common-lisp:nil
                       ((document-classification-job-properties-list :initarg
                         :document-classification-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          document-classification-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-document-classification-jobs-response-document-classification-job-properties-list
                         :shape "DocumentClassificationJobPropertiesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classification-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classification-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classification-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classification-jobs-response
                    'make-list-document-classification-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classification-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classifier-summaries-request
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classifier-summaries-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-document-classifier-summaries-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classifier-summaries-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classifier-summaries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classifier-summaries-request
                    'make-list-document-classifier-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classifier-summaries-response
                       common-lisp:nil
                       ((document-classifier-summaries-list :initarg
                         :document-classifier-summaries-list :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-summaries-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-document-classifier-summaries-response-document-classifier-summaries-list
                         :shape "DocumentClassifierSummariesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classifier-summaries-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classifier-summaries-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classifier-summaries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classifier-summaries-response
                    'make-list-document-classifier-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-summaries-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierSummariesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifier-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classifiers-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-document-classifiers-request-filter
                         :shape "DocumentClassifierFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classifiers-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-document-classifiers-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classifiers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classifiers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classifiers-request
                    'make-list-document-classifiers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-document-classifiers-response common-lisp:nil
                       ((document-classifier-properties-list :initarg
                         :document-classifier-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classifier-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-document-classifiers-response-document-classifier-properties-list
                         :shape "DocumentClassifierPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-document-classifiers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-document-classifiers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-document-classifiers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-document-classifiers-response
                    'make-list-document-classifiers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-properties-list))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-document-classifiers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-dominant-language-detection-jobs-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or dominant-language-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-dominant-language-detection-jobs-request-filter
                         :shape "DominantLanguageDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-dominant-language-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-dominant-language-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-dominant-language-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dominant-language-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-dominant-language-detection-jobs-request
                    'make-list-dominant-language-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-dominant-language-detection-jobs-response
                       common-lisp:nil
                       ((dominant-language-detection-job-properties-list
                         :initarg
                         :dominant-language-detection-job-properties-list
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          dominant-language-detection-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-dominant-language-detection-jobs-response-dominant-language-detection-job-properties-list
                         :shape "DominantLanguageDetectionJobPropertiesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-dominant-language-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-dominant-language-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dominant-language-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-dominant-language-detection-jobs-response
                    'make-list-dominant-language-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dominant-language-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "DominantLanguageDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dominant-language-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-endpoints-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-filter common-lisp:null)
                         :accessor struct-shape-list-endpoints-request-filter
                         :shape "EndpointFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-endpoints-request-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-request-max-results :shape
                         "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-request 'make-list-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-endpoints-response common-lisp:nil
                       ((endpoint-properties-list :initarg
                         :endpoint-properties-list :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-response-endpoint-properties-list
                         :shape "EndpointPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-endpoints-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-response 'make-list-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-properties-list))
      (common-lisp:list
       (common-lisp:cons "EndpointPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entities-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or entities-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-entities-detection-jobs-request-filter
                         :shape "EntitiesDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entities-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-entities-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entities-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entities-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entities-detection-jobs-request
                    'make-list-entities-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entities-detection-jobs-response common-lisp:nil
                       ((entities-detection-job-properties-list :initarg
                         :entities-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or entities-detection-job-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-entities-detection-jobs-response-entities-detection-job-properties-list
                         :shape "EntitiesDetectionJobPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entities-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entities-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entities-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entities-detection-jobs-response
                    'make-list-entities-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entities-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "EntitiesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entities-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entity-recognizer-summaries-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entity-recognizer-summaries-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-entity-recognizer-summaries-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entity-recognizer-summaries-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entity-recognizer-summaries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizer-summaries-request
                    'make-list-entity-recognizer-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entity-recognizer-summaries-response
                       common-lisp:nil
                       ((entity-recognizer-summaries-list :initarg
                         :entity-recognizer-summaries-list :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-summaries-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-entity-recognizer-summaries-response-entity-recognizer-summaries-list
                         :shape "EntityRecognizerSummariesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entity-recognizer-summaries-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entity-recognizer-summaries-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entity-recognizer-summaries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizer-summaries-response
                    'make-list-entity-recognizer-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-summaries-list))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerSummariesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizer-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entity-recognizers-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or entity-recognizer-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-entity-recognizers-request-filter
                         :shape "EntityRecognizerFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entity-recognizers-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-entity-recognizers-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entity-recognizers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entity-recognizers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizers-request
                    'make-list-entity-recognizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-entity-recognizers-response common-lisp:nil
                       ((entity-recognizer-properties-list :initarg
                         :entity-recognizer-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-recognizer-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-entity-recognizers-response-entity-recognizer-properties-list
                         :shape "EntityRecognizerPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-entity-recognizers-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-entity-recognizers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-entity-recognizers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-entity-recognizers-response
                    'make-list-entity-recognizers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-properties-list))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-entity-recognizers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-events-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or events-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-events-detection-jobs-request-filter
                         :shape "EventsDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-events-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-events-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-events-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-events-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-events-detection-jobs-request
                    'make-list-events-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-events-detection-jobs-response common-lisp:nil
                       ((events-detection-job-properties-list :initarg
                         :events-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or events-detection-job-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-events-detection-jobs-response-events-detection-job-properties-list
                         :shape "EventsDetectionJobPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-events-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-events-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-events-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-events-detection-jobs-response
                    'make-list-events-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "EventsDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-events-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-flywheel-iteration-history-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-flywheel-iteration-history-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-iteration-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-flywheel-iteration-history-request-filter
                         :shape "FlywheelIterationFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-flywheel-iteration-history-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-flywheel-iteration-history-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-flywheel-iteration-history-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-flywheel-iteration-history-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-flywheel-iteration-history-request
                    'make-list-flywheel-iteration-history-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-flywheel-iteration-history-response common-lisp:nil
                       ((flywheel-iteration-properties-list :initarg
                         :flywheel-iteration-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or flywheel-iteration-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-flywheel-iteration-history-response-flywheel-iteration-properties-list
                         :shape "FlywheelIterationPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-flywheel-iteration-history-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-flywheel-iteration-history-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-flywheel-iteration-history-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-flywheel-iteration-history-response
                    'make-list-flywheel-iteration-history-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-properties-list))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheel-iteration-history-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-flywheels-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or flywheel-filter common-lisp:null)
                         :accessor struct-shape-list-flywheels-request-filter
                         :shape "FlywheelFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-flywheels-request-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-flywheels-request-max-results :shape
                         "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-flywheels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-flywheels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-flywheels-request 'make-list-flywheels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-flywheels-response common-lisp:nil
                       ((flywheel-summary-list :initarg :flywheel-summary-list
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-flywheels-response-flywheel-summary-list
                         :shape "FlywheelSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-flywheels-response-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-flywheels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-flywheels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-flywheels-response 'make-list-flywheels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-summary-list))
      (common-lisp:list
       (common-lisp:cons "FlywheelSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-flywheels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-key-phrases-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or key-phrases-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-key-phrases-detection-jobs-request-filter
                         :shape "KeyPhrasesDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-key-phrases-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-key-phrases-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-key-phrases-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-key-phrases-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-key-phrases-detection-jobs-request
                    'make-list-key-phrases-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-key-phrases-detection-jobs-response common-lisp:nil
                       ((key-phrases-detection-job-properties-list :initarg
                         :key-phrases-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          key-phrases-detection-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-key-phrases-detection-jobs-response-key-phrases-detection-job-properties-list
                         :shape "KeyPhrasesDetectionJobPropertiesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-key-phrases-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-key-phrases-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-key-phrases-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-key-phrases-detection-jobs-response
                    'make-list-key-phrases-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-phrases-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "KeyPhrasesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-key-phrases-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-block-references ()
   '(trivial-types:proper-list block-reference))
 (common-lisp:defun make-list-of-block-references
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-blocks () '(trivial-types:proper-list block))
 (common-lisp:defun make-list-of-blocks
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-child-blocks ()
   '(trivial-types:proper-list child-block))
 (common-lisp:defun make-list-of-child-blocks
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list child-block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-classes ()
   '(trivial-types:proper-list document-class))
 (common-lisp:defun make-list-of-classes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-class))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-descriptive-mention-indices ()
   '(trivial-types:proper-list integer))
 (common-lisp:defun make-list-of-descriptive-mention-indices
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-dominant-language-result ()
   '(trivial-types:proper-list batch-detect-dominant-language-item-result))
 (common-lisp:defun make-list-of-detect-dominant-language-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-dominant-language-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-entities-result ()
   '(trivial-types:proper-list batch-detect-entities-item-result))
 (common-lisp:defun make-list-of-detect-entities-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-entities-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-key-phrases-result ()
   '(trivial-types:proper-list batch-detect-key-phrases-item-result))
 (common-lisp:defun make-list-of-detect-key-phrases-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-key-phrases-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-sentiment-result ()
   '(trivial-types:proper-list batch-detect-sentiment-item-result))
 (common-lisp:defun make-list-of-detect-sentiment-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-sentiment-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-syntax-result ()
   '(trivial-types:proper-list batch-detect-syntax-item-result))
 (common-lisp:defun make-list-of-detect-syntax-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-syntax-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-detect-targeted-sentiment-result ()
   '(trivial-types:proper-list batch-detect-targeted-sentiment-item-result))
 (common-lisp:defun make-list-of-detect-targeted-sentiment-result
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-detect-targeted-sentiment-item-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-document-read-feature-types ()
   '(trivial-types:proper-list document-read-feature-types))
 (common-lisp:defun make-list-of-document-read-feature-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            document-read-feature-types))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-document-type ()
   '(trivial-types:proper-list document-type-list-item))
 (common-lisp:defun make-list-of-document-type
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-type-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-dominant-languages ()
   '(trivial-types:proper-list dominant-language))
 (common-lisp:defun make-list-of-dominant-languages
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dominant-language))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-entities () '(trivial-types:proper-list entity))
 (common-lisp:defun make-list-of-entities
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-entity-labels ()
   '(trivial-types:proper-list entity-label))
 (common-lisp:defun make-list-of-entity-labels
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-errors ()
   '(trivial-types:proper-list errors-list-item))
 (common-lisp:defun make-list-of-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list errors-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-extracted-characters ()
   '(trivial-types:proper-list extracted-characters-list-item))
 (common-lisp:defun make-list-of-extracted-characters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            extracted-characters-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-key-phrases ()
   '(trivial-types:proper-list key-phrase))
 (common-lisp:defun make-list-of-key-phrases
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-phrase))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-labels ()
   '(trivial-types:proper-list document-label))
 (common-lisp:defun make-list-of-labels
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list document-label))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-mentions ()
   '(trivial-types:proper-list targeted-sentiment-mention))
 (common-lisp:defun make-list-of-mentions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-mention))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-pii-entities ()
   '(trivial-types:proper-list pii-entity))
 (common-lisp:defun make-list-of-pii-entities
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pii-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-pii-entity-types ()
   '(trivial-types:proper-list pii-entity-type))
 (common-lisp:defun make-list-of-pii-entity-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pii-entity-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-relationships ()
   '(trivial-types:proper-list relationships-list-item))
 (common-lisp:defun make-list-of-relationships
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list relationships-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-syntax-tokens ()
   '(trivial-types:proper-list syntax-token))
 (common-lisp:defun make-list-of-syntax-tokens
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list syntax-token))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-targeted-sentiment-entities ()
   '(trivial-types:proper-list targeted-sentiment-entity))
 (common-lisp:defun make-list-of-targeted-sentiment-entities
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-text-segments ()
   '(trivial-types:proper-list text-segment))
 (common-lisp:defun make-list-of-text-segments
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list text-segment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-toxic-content ()
   '(trivial-types:proper-list toxic-content))
 (common-lisp:defun make-list-of-toxic-content
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list toxic-content))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-toxic-labels ()
   '(trivial-types:proper-list toxic-labels))
 (common-lisp:defun make-list-of-toxic-labels
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list toxic-labels))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-warnings ()
   '(trivial-types:proper-list warnings-list-item))
 (common-lisp:defun make-list-of-warnings
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list warnings-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-pii-entities-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or pii-entities-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pii-entities-detection-jobs-request-filter
                         :shape "PiiEntitiesDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-pii-entities-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-pii-entities-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pii-entities-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pii-entities-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pii-entities-detection-jobs-request
                    'make-list-pii-entities-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pii-entities-detection-jobs-response
                       common-lisp:nil
                       ((pii-entities-detection-job-properties-list :initarg
                         :pii-entities-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          pii-entities-detection-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-pii-entities-detection-jobs-response-pii-entities-detection-job-properties-list
                         :shape "PiiEntitiesDetectionJobPropertiesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-pii-entities-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pii-entities-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pii-entities-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pii-entities-detection-jobs-response
                    'make-list-pii-entities-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pii-entities-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "PiiEntitiesDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pii-entities-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sentiment-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or sentiment-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-sentiment-detection-jobs-request-filter
                         :shape "SentimentDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-sentiment-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-sentiment-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sentiment-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sentiment-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sentiment-detection-jobs-request
                    'make-list-sentiment-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sentiment-detection-jobs-response common-lisp:nil
                       ((sentiment-detection-job-properties-list :initarg
                         :sentiment-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          sentiment-detection-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-sentiment-detection-jobs-response-sentiment-detection-job-properties-list
                         :shape "SentimentDetectionJobPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-sentiment-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sentiment-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-sentiment-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sentiment-detection-jobs-response
                    'make-list-sentiment-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sentiment-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "SentimentDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sentiment-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-resource-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-targeted-sentiment-detection-jobs-request
                       common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          targeted-sentiment-detection-job-filter
                          common-lisp:null)
                         :accessor
                         struct-shape-list-targeted-sentiment-detection-jobs-request-filter
                         :shape "TargetedSentimentDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-targeted-sentiment-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-targeted-sentiment-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-targeted-sentiment-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-targeted-sentiment-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-targeted-sentiment-detection-jobs-request
                    'make-list-targeted-sentiment-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-targeted-sentiment-detection-jobs-response
                       common-lisp:nil
                       ((targeted-sentiment-detection-job-properties-list
                         :initarg
                         :targeted-sentiment-detection-job-properties-list
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          targeted-sentiment-detection-job-properties-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-targeted-sentiment-detection-jobs-response-targeted-sentiment-detection-job-properties-list
                         :shape "TargetedSentimentDetectionJobPropertiesList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-targeted-sentiment-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-targeted-sentiment-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-targeted-sentiment-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-targeted-sentiment-detection-jobs-response
                    'make-list-targeted-sentiment-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'targeted-sentiment-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "TargetedSentimentDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targeted-sentiment-detection-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-topics-detection-jobs-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or topics-detection-job-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-topics-detection-jobs-request-filter
                         :shape "TopicsDetectionJobFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-topics-detection-jobs-request-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-integer common-lisp:null)
                         :accessor
                         struct-shape-list-topics-detection-jobs-request-max-results
                         :shape "MaxResultsInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-topics-detection-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-topics-detection-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-topics-detection-jobs-request
                    'make-list-topics-detection-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-topics-detection-jobs-response common-lisp:nil
                       ((topics-detection-job-properties-list :initarg
                         :topics-detection-job-properties-list :initform
                         common-lisp:nil :type
                         (common-lisp:or topics-detection-job-properties-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-topics-detection-jobs-response-topics-detection-job-properties-list
                         :shape "TopicsDetectionJobPropertiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-topics-detection-jobs-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-topics-detection-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-topics-detection-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-topics-detection-jobs-response
                    'make-list-topics-detection-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'topics-detection-job-properties-list))
      (common-lisp:list
       (common-lisp:cons "TopicsDetectionJobPropertiesList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-topics-detection-jobs-response))
   common-lisp:nil))
(common-lisp:deftype mask-character () 'common-lisp:string)
(common-lisp:deftype max-results-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass mention-sentiment common-lisp:nil
                       ((sentiment :initarg :sentiment :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-type common-lisp:null)
                         :accessor struct-shape-mention-sentiment-sentiment
                         :shape "SentimentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sentiment-score :initarg :sentiment-score :initform
                         common-lisp:nil :type
                         (common-lisp:or sentiment-score common-lisp:null)
                         :accessor
                         struct-shape-mention-sentiment-sentiment-score :shape
                         "SentimentScore" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mention-sentiment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mention-sentiment
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mention-sentiment 'make-mention-sentiment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mention-sentiment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mention-sentiment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment))
      (common-lisp:list
       (common-lisp:cons "Sentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sentiment-score))
      (common-lisp:list
       (common-lisp:cons "SentimentScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mention-sentiment))
   common-lisp:nil))
(common-lisp:deftype model-status () 'common-lisp:string)
(common-lisp:deftype model-type () 'common-lisp:string)
(common-lisp:deftype number-of-documents () 'common-lisp:integer)
(common-lisp:deftype number-of-topics-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass output-data-config common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-output-data-config-s3uri :shape "S3Uri"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-output-data-config-kms-key-id :shape
                         "KmsKeyId" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-output-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'output-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'output-data-config 'make-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input output-data-config))
   common-lisp:nil))
(common-lisp:deftype page-based-error-code () 'common-lisp:string)
(common-lisp:deftype page-based-warning-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass part-of-speech-tag common-lisp:nil
                       ((tag :initarg :tag :initform common-lisp:nil :type
                         (common-lisp:or part-of-speech-tag-type
                                         common-lisp:null)
                         :accessor struct-shape-part-of-speech-tag-tag :shape
                         "PartOfSpeechTagType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-part-of-speech-tag-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-part-of-speech-tag
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'part-of-speech-tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'part-of-speech-tag 'make-part-of-speech-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag))
      (common-lisp:list
       (common-lisp:cons "Tag"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input part-of-speech-tag))
   common-lisp:nil))
(common-lisp:deftype part-of-speech-tag-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pii-entities-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-pii-entities-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-pii-entities-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-pii-entities-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pii-entities-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'pii-entities-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pii-entities-detection-job-filter
                    'make-pii-entities-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass pii-entities-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-pii-entities-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-pii-entities-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or pii-output-data-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-output-data-config
                         :shape "PiiOutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (redaction-config :initarg :redaction-config :initform
                         common-lisp:nil :type
                         (common-lisp:or redaction-config common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-redaction-config
                         :shape "RedactionConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or pii-entities-detection-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-pii-entities-detection-job-properties-mode
                         :shape "PiiEntitiesDetectionMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pii-entities-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'pii-entities-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pii-entities-detection-job-properties
                    'make-pii-entities-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redaction-config))
      (common-lisp:list
       (common-lisp:cons "RedactionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-entities-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pii-entities-detection-job-properties-list ()
   '(trivial-types:proper-list pii-entities-detection-job-properties))
 (common-lisp:defun make-pii-entities-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pii-entities-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pii-entities-detection-mask-mode () 'common-lisp:string)
(common-lisp:deftype pii-entities-detection-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pii-entity common-lisp:nil
                       ((score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-pii-entity-score :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or pii-entity-type common-lisp:null)
                         :accessor struct-shape-pii-entity-type :shape
                         "PiiEntityType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-pii-entity-begin-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-pii-entity-end-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pii-entity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pii-entity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'pii-entity 'make-pii-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pii-entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pii-entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pii-entity))
   common-lisp:nil))
(common-lisp:deftype pii-entity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pii-output-data-config common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-pii-output-data-config-s3uri :shape
                         "S3Uri" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-pii-output-data-config-kms-key-id :shape
                         "KmsKeyId" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pii-output-data-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pii-output-data-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pii-output-data-config 'make-pii-output-data-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "S3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pii-output-data-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass point common-lisp:nil
                       ((x :initarg :x :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-point-x :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (y :initarg :y :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-point-y :shape "Float" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-point
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'point
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'point 'make-point))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input point))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input point))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'x))
      (common-lisp:list
       (common-lisp:cons "X"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'y))
      (common-lisp:list
       (common-lisp:cons "Y"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input point))
   common-lisp:nil))
(common-lisp:deftype policy () 'common-lisp:string)
(common-lisp:deftype policy-revision-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype polygon () '(trivial-types:proper-list point))
 (common-lisp:defun make-polygon
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list point))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-put-resource-policy-request-resource-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-policy :initarg :resource-policy :initform
                         (common-lisp:error ":resource-policy is required")
                         :type (common-lisp:or policy common-lisp:null)
                         :accessor
                         struct-shape-put-resource-policy-request-resource-policy
                         :shape "Policy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-revision-id :initarg :policy-revision-id
                         :initform common-lisp:nil :type
                         (common-lisp:or policy-revision-id common-lisp:null)
                         :accessor
                         struct-shape-put-resource-policy-request-policy-revision-id
                         :shape "PolicyRevisionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-resource-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-request
                    'make-put-resource-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-policy))
      (common-lisp:list
       (common-lisp:cons "ResourcePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-resource-policy-response common-lisp:nil
                       ((policy-revision-id :initarg :policy-revision-id
                         :initform common-lisp:nil :type
                         (common-lisp:or policy-revision-id common-lisp:null)
                         :accessor
                         struct-shape-put-resource-policy-response-policy-revision-id
                         :shape "PolicyRevisionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-resource-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-resource-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-resource-policy-response
                    'make-put-resource-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-revision-id))
      (common-lisp:list
       (common-lisp:cons "PolicyRevisionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-resource-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redaction-config common-lisp:nil
                       ((pii-entity-types :initarg :pii-entity-types :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-pii-entity-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-redaction-config-pii-entity-types :shape
                         "ListOfPiiEntityTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mask-mode :initarg :mask-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or pii-entities-detection-mask-mode
                                         common-lisp:null)
                         :accessor struct-shape-redaction-config-mask-mode
                         :shape "PiiEntitiesDetectionMaskMode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mask-character :initarg :mask-character :initform
                         common-lisp:nil :type
                         (common-lisp:or mask-character common-lisp:null)
                         :accessor struct-shape-redaction-config-mask-character
                         :shape "MaskCharacter" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redaction-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'redaction-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redaction-config 'make-redaction-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input redaction-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input redaction-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pii-entity-types))
      (common-lisp:list
       (common-lisp:cons "PiiEntityTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mask-mode))
      (common-lisp:list
       (common-lisp:cons "MaskMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mask-character))
      (common-lisp:list
       (common-lisp:cons "MaskCharacter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input redaction-config))
   common-lisp:nil))
(common-lisp:deftype relationship-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass relationships-list-item common-lisp:nil
                       ((ids :initarg :ids :initform common-lisp:nil :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-relationships-list-item-ids
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or relationship-type common-lisp:null)
                         :accessor struct-shape-relationships-list-item-type
                         :shape "RelationshipType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-relationships-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'relationships-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'relationships-list-item 'make-relationships-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "Ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          relationships-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'resource-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-unavailable-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-unavailable-exception
                    'resource-unavailable-exception-message)))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-group-ids ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun make-security-group-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype semi-structured-document-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass sentiment-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sentiment-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sentiment-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sentiment-detection-job-filter
                    'make-sentiment-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sentiment-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-sentiment-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-sentiment-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sentiment-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sentiment-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sentiment-detection-job-properties
                    'make-sentiment-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sentiment-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sentiment-detection-job-properties-list ()
   '(trivial-types:proper-list sentiment-detection-job-properties))
 (common-lisp:defun make-sentiment-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sentiment-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sentiment-score common-lisp:nil
                       ((positive :initarg :positive :initform common-lisp:nil
                         :type (common-lisp:or float common-lisp:null)
                         :accessor struct-shape-sentiment-score-positive :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (negative :initarg :negative :initform common-lisp:nil
                         :type (common-lisp:or float common-lisp:null)
                         :accessor struct-shape-sentiment-score-negative :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (neutral :initarg :neutral :initform common-lisp:nil
                         :type (common-lisp:or float common-lisp:null)
                         :accessor struct-shape-sentiment-score-neutral :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mixed :initarg :mixed :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-sentiment-score-mixed :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sentiment-score
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sentiment-score
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sentiment-score 'make-sentiment-score))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sentiment-score))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sentiment-score))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'positive))
      (common-lisp:list
       (common-lisp:cons "Positive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'negative))
      (common-lisp:list
       (common-lisp:cons "Negative"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'neutral))
      (common-lisp:list
       (common-lisp:cons "Neutral"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mixed))
      (common-lisp:list
       (common-lisp:cons "Mixed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sentiment-score))
   common-lisp:nil))
(common-lisp:deftype sentiment-type () 'common-lisp:string)
(common-lisp:deftype split () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-document-classification-job-request
                       common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-classifier-arn :initarg
                         :document-classifier-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-document-classification-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-document-classification-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-document-classification-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-document-classification-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-document-classification-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-document-classification-job-request
                    'make-start-document-classification-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-document-classification-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-document-classification-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-classifier-arn :initarg
                         :document-classifier-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-document-classification-job-response-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-document-classification-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-document-classification-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-document-classification-job-response
                    'make-start-document-classification-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-document-classification-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-dominant-language-detection-job-request
                       common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-dominant-language-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-dominant-language-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-dominant-language-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-dominant-language-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-dominant-language-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-dominant-language-detection-job-request
                    'make-start-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-dominant-language-detection-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-dominant-language-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-dominant-language-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-dominant-language-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-dominant-language-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-dominant-language-detection-job-response
                    'make-start-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-entities-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-entities-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-entities-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-entities-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-entities-detection-job-request
                    'make-start-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-entities-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-entities-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-entities-detection-job-response-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-entities-detection-job-response
                    'make-start-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-events-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (target-event-types :initarg :target-event-types
                         :initform
                         (common-lisp:error ":target-event-types is required")
                         :type
                         (common-lisp:or target-event-types common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-request-target-event-types
                         :shape "TargetEventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-events-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-events-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-events-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-events-detection-job-request
                    'make-start-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-event-types))
      (common-lisp:list
       (common-lisp:cons "TargetEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-events-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-events-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-events-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-events-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-events-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-events-detection-job-response
                    'make-start-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-flywheel-iteration-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-flywheel-iteration-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-flywheel-iteration-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-flywheel-iteration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-flywheel-iteration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-flywheel-iteration-request
                    'make-start-flywheel-iteration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-flywheel-iteration-response common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-flywheel-iteration-response-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (flywheel-iteration-id :initarg :flywheel-iteration-id
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-iteration-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-flywheel-iteration-response-flywheel-iteration-id
                         :shape "FlywheelIterationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-flywheel-iteration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-flywheel-iteration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-flywheel-iteration-response
                    'make-start-flywheel-iteration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'flywheel-iteration-id))
      (common-lisp:list
       (common-lisp:cons "FlywheelIterationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-flywheel-iteration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-key-phrases-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-key-phrases-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-key-phrases-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-key-phrases-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-key-phrases-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-key-phrases-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-key-phrases-detection-job-request
                    'make-start-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-key-phrases-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-key-phrases-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-key-phrases-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-key-phrases-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-key-phrases-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-key-phrases-detection-job-response
                    'make-start-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-pii-entities-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform
                         (common-lisp:error ":mode is required") :type
                         (common-lisp:or pii-entities-detection-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-mode
                         :shape "PiiEntitiesDetectionMode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (redaction-config :initarg :redaction-config :initform
                         common-lisp:nil :type
                         (common-lisp:or redaction-config common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-redaction-config
                         :shape "RedactionConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-pii-entities-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-pii-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-pii-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-pii-entities-detection-job-request
                    'make-start-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redaction-config))
      (common-lisp:list
       (common-lisp:cons "RedactionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-pii-entities-detection-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-pii-entities-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-pii-entities-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-pii-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-pii-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-pii-entities-detection-job-response
                    'make-start-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-sentiment-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-sentiment-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-sentiment-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-sentiment-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-sentiment-detection-job-request
                    'make-start-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-sentiment-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-sentiment-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-sentiment-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-sentiment-detection-job-response
                    'make-start-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-targeted-sentiment-detection-job-request
                       common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-targeted-sentiment-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-targeted-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-targeted-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-targeted-sentiment-detection-job-request
                    'make-start-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-targeted-sentiment-detection-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-targeted-sentiment-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-targeted-sentiment-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-targeted-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-targeted-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-targeted-sentiment-detection-job-response
                    'make-start-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-topics-detection-job-request common-lisp:nil
                       ((input-data-config :initarg :input-data-config
                         :initform
                         (common-lisp:error ":input-data-config is required")
                         :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform
                         (common-lisp:error ":output-data-config is required")
                         :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform
                         (common-lisp:error
                          ":data-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-topics :initarg :number-of-topics :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-topics-integer
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-number-of-topics
                         :shape "NumberOfTopicsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform common-lisp:nil :type
                         (common-lisp:or client-request-token-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-request-client-request-token
                         :shape "ClientRequestTokenString" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-start-topics-detection-job-request-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-start-topics-detection-job-request-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-start-topics-detection-job-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-topics-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-topics-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-topics-detection-job-request
                    'make-start-topics-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-topics))
      (common-lisp:list
       (common-lisp:cons "NumberOfTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-topics-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-start-topics-detection-job-response-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-start-topics-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-topics-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-topics-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-topics-detection-job-response
                    'make-start-topics-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-topics-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-dominant-language-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-dominant-language-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-dominant-language-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-dominant-language-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-dominant-language-detection-job-request
                    'make-stop-dominant-language-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-dominant-language-detection-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-dominant-language-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-dominant-language-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-dominant-language-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-dominant-language-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-dominant-language-detection-job-response
                    'make-stop-dominant-language-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-dominant-language-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-entities-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-entities-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-entities-detection-job-request
                    'make-stop-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-entities-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-entities-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-entities-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-entities-detection-job-response
                    'make-stop-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-events-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-events-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-events-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-events-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-events-detection-job-request
                    'make-stop-events-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-events-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-events-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-events-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-events-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-events-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-events-detection-job-response
                    'make-stop-events-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-events-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-key-phrases-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-key-phrases-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-key-phrases-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-key-phrases-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-key-phrases-detection-job-request
                    'make-stop-key-phrases-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-key-phrases-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-key-phrases-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-key-phrases-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-key-phrases-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-key-phrases-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-key-phrases-detection-job-response
                    'make-stop-key-phrases-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-key-phrases-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-pii-entities-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-pii-entities-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-pii-entities-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-pii-entities-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-pii-entities-detection-job-request
                    'make-stop-pii-entities-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-pii-entities-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-pii-entities-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-pii-entities-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-pii-entities-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-pii-entities-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-pii-entities-detection-job-response
                    'make-stop-pii-entities-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-pii-entities-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-sentiment-detection-job-request common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-sentiment-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-sentiment-detection-job-request
                    'make-stop-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-sentiment-detection-job-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-sentiment-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-sentiment-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-sentiment-detection-job-response
                    'make-stop-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-targeted-sentiment-detection-job-request
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or job-id common-lisp:null) :accessor
                         struct-shape-stop-targeted-sentiment-detection-job-request-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-targeted-sentiment-detection-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-targeted-sentiment-detection-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-targeted-sentiment-detection-job-request
                    'make-stop-targeted-sentiment-detection-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-targeted-sentiment-detection-job-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-stop-targeted-sentiment-detection-job-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-stop-targeted-sentiment-detection-job-response-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-targeted-sentiment-detection-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-targeted-sentiment-detection-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-targeted-sentiment-detection-job-response
                    'make-stop-targeted-sentiment-detection-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-targeted-sentiment-detection-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-training-document-classifier-request
                       common-lisp:nil
                       ((document-classifier-arn :initarg
                         :document-classifier-arn :initform
                         (common-lisp:error
                          ":document-classifier-arn is required")
                         :type
                         (common-lisp:or document-classifier-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-stop-training-document-classifier-request-document-classifier-arn
                         :shape "DocumentClassifierArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-training-document-classifier-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-training-document-classifier-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-training-document-classifier-request
                    'make-stop-training-document-classifier-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classifier-arn))
      (common-lisp:list
       (common-lisp:cons "DocumentClassifierArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-training-document-classifier-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-training-document-classifier-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-training-document-classifier-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-training-document-classifier-response
                    'make-stop-training-document-classifier-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-document-classifier-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-training-entity-recognizer-request common-lisp:nil
                       ((entity-recognizer-arn :initarg :entity-recognizer-arn
                         :initform
                         (common-lisp:error
                          ":entity-recognizer-arn is required")
                         :type
                         (common-lisp:or entity-recognizer-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-stop-training-entity-recognizer-request-entity-recognizer-arn
                         :shape "EntityRecognizerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-training-entity-recognizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-training-entity-recognizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-training-entity-recognizer-request
                    'make-stop-training-entity-recognizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognizer-arn))
      (common-lisp:list
       (common-lisp:cons "EntityRecognizerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-training-entity-recognizer-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-training-entity-recognizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'stop-training-entity-recognizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-training-entity-recognizer-response
                    'make-stop-training-entity-recognizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-training-entity-recognizer-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnets () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun make-subnets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype syntax-language-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass syntax-token common-lisp:nil
                       ((token-id :initarg :token-id :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor struct-shape-syntax-token-token-id :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-syntax-token-text :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-syntax-token-begin-offset :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-syntax-token-end-offset :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (part-of-speech :initarg :part-of-speech :initform
                         common-lisp:nil :type
                         (common-lisp:or part-of-speech-tag common-lisp:null)
                         :accessor struct-shape-syntax-token-part-of-speech
                         :shape "PartOfSpeechTag" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-syntax-token
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'syntax-token
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'syntax-token 'make-syntax-token))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input syntax-token))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input syntax-token))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-id))
      (common-lisp:list
       (common-lisp:cons "TokenId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'part-of-speech))
      (common-lisp:list
       (common-lisp:cons "PartOfSpeech"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input syntax-token))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-event-types ()
   '(trivial-types:proper-list event-type-string))
 (common-lisp:defun make-target-event-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass targeted-sentiment-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-targeted-sentiment-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'targeted-sentiment-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-detection-job-filter
                    'make-targeted-sentiment-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass targeted-sentiment-detection-job-properties
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-targeted-sentiment-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'targeted-sentiment-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-detection-job-properties
                    'make-targeted-sentiment-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype targeted-sentiment-detection-job-properties-list ()
   '(trivial-types:proper-list targeted-sentiment-detection-job-properties))
 (common-lisp:defun make-targeted-sentiment-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            targeted-sentiment-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass targeted-sentiment-entity common-lisp:nil
                       ((descriptive-mention-index :initarg
                         :descriptive-mention-index :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-descriptive-mention-indices
                                         common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-entity-descriptive-mention-index
                         :shape "ListOfDescriptiveMentionIndices" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mentions :initarg :mentions :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-mentions common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-entity-mentions :shape
                         "ListOfMentions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-targeted-sentiment-entity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'targeted-sentiment-entity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-entity
                    'make-targeted-sentiment-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'descriptive-mention-index))
      (common-lisp:list
       (common-lisp:cons "DescriptiveMentionIndex"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mentions))
      (common-lisp:list
       (common-lisp:cons "Mentions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-entity))
   common-lisp:nil))
(common-lisp:deftype targeted-sentiment-entity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass targeted-sentiment-mention common-lisp:nil
                       ((score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-mention-score :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (group-score :initarg :group-score :initform
                         common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-mention-group-score
                         :shape "Float" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-mention-text :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or targeted-sentiment-entity-type
                                         common-lisp:null)
                         :accessor struct-shape-targeted-sentiment-mention-type
                         :shape "TargetedSentimentEntityType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mention-sentiment :initarg :mention-sentiment
                         :initform common-lisp:nil :type
                         (common-lisp:or mention-sentiment common-lisp:null)
                         :accessor
                         struct-shape-targeted-sentiment-mention-mention-sentiment
                         :shape "MentionSentiment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (begin-offset :initarg :begin-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-mention-begin-offset
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-offset :initarg :end-offset :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-targeted-sentiment-mention-end-offset
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-targeted-sentiment-mention
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'targeted-sentiment-mention
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'targeted-sentiment-mention
                    'make-targeted-sentiment-mention))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-score))
      (common-lisp:list
       (common-lisp:cons "GroupScore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mention-sentiment))
      (common-lisp:list
       (common-lisp:cons "MentionSentiment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'begin-offset))
      (common-lisp:list
       (common-lisp:cons "BeginOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-offset))
      (common-lisp:list
       (common-lisp:cons "EndOffset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          targeted-sentiment-mention))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass task-config common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         (common-lisp:error ":language-code is required") :type
                         (common-lisp:or language-code common-lisp:null)
                         :accessor struct-shape-task-config-language-code
                         :shape "LanguageCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (document-classification-config :initarg
                         :document-classification-config :initform
                         common-lisp:nil :type
                         (common-lisp:or document-classification-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-task-config-document-classification-config
                         :shape "DocumentClassificationConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (entity-recognition-config :initarg
                         :entity-recognition-config :initform common-lisp:nil
                         :type
                         (common-lisp:or entity-recognition-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-task-config-entity-recognition-config
                         :shape "EntityRecognitionConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'task-config 'make-task-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-classification-config))
      (common-lisp:list
       (common-lisp:cons "DocumentClassificationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'entity-recognition-config))
      (common-lisp:list
       (common-lisp:cons "EntityRecognitionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass text-segment common-lisp:nil
                       ((text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or customer-input-string
                                         common-lisp:null)
                         :accessor struct-shape-text-segment-text :shape
                         "CustomerInputString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-text-segment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'text-segment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'text-segment 'make-text-segment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input text-segment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input text-segment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input text-segment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition text-size-limit-exceeded-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       text-size-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'text-size-limit-exceeded-exception
                    'text-size-limit-exceeded-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-tag-keys-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tag-keys-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-tag-keys-exception
                    'too-many-tag-keys-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition too-many-tags-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-tags-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'too-many-tags-exception-message)))
(common-lisp:progn
 (common-lisp:defclass topics-detection-job-filter common-lisp:nil
                       ((job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-filter-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-topics-detection-job-filter-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-before :initarg :submit-time-before
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-topics-detection-job-filter-submit-time-before
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time-after :initarg :submit-time-after
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-topics-detection-job-filter-submit-time-after
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-topics-detection-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'topics-detection-job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'topics-detection-job-filter
                    'make-topics-detection-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-before))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeBefore"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time-after))
      (common-lisp:list
       (common-lisp:cons "SubmitTimeAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass topics-detection-job-properties common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-arn :initarg :job-arn :initform common-lisp:nil
                         :type (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-job-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform common-lisp:nil
                         :type (common-lisp:or job-name common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-job-name
                         :shape "JobName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         common-lisp:nil :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-topics-detection-job-properties-job-status
                         :shape "JobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or any-length-string common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-message
                         :shape "AnyLengthString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (submit-time :initarg :submit-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-topics-detection-job-properties-submit-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-data-config :initarg :input-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or input-data-config common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-input-data-config
                         :shape "InputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-data-config :initarg :output-data-config
                         :initform common-lisp:nil :type
                         (common-lisp:or output-data-config common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-output-data-config
                         :shape "OutputDataConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-topics :initarg :number-of-topics :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-topics-detection-job-properties-number-of-topics
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-topics-detection-job-properties-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-topics-detection-job-properties-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-topics-detection-job-properties-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-topics-detection-job-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'topics-detection-job-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'topics-detection-job-properties
                    'make-topics-detection-job-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "JobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-arn))
      (common-lisp:list
       (common-lisp:cons "JobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'submit-time))
      (common-lisp:list
       (common-lisp:cons "SubmitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-data-config))
      (common-lisp:list
       (common-lisp:cons "InputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-data-config))
      (common-lisp:list
       (common-lisp:cons "OutputDataConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-topics))
      (common-lisp:list
       (common-lisp:cons "NumberOfTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          topics-detection-job-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype topics-detection-job-properties-list ()
   '(trivial-types:proper-list topics-detection-job-properties))
 (common-lisp:defun make-topics-detection-job-properties-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            topics-detection-job-properties))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass toxic-content common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or toxic-content-type common-lisp:null)
                         :accessor struct-shape-toxic-content-name :shape
                         "ToxicContentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or float common-lisp:null) :accessor
                         struct-shape-toxic-content-score :shape "Float"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-toxic-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'toxic-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'toxic-content 'make-toxic-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input toxic-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input toxic-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "Score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input toxic-content))
   common-lisp:nil))
(common-lisp:deftype toxic-content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass toxic-labels common-lisp:nil
                       ((labels :initarg :labels :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-toxic-content
                                         common-lisp:null)
                         :accessor struct-shape-toxic-labels-labels :shape
                         "ListOfToxicContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (toxicity :initarg :toxicity :initform common-lisp:nil
                         :type (common-lisp:or float common-lisp:null)
                         :accessor struct-shape-toxic-labels-toxicity :shape
                         "Float" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-toxic-labels
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'toxic-labels
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'toxic-labels 'make-toxic-labels))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input toxic-labels))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input toxic-labels))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'labels))
      (common-lisp:list
       (common-lisp:cons "Labels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'toxicity))
      (common-lisp:list
       (common-lisp:cons "Toxicity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input toxic-labels))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unsupported-language-exception
     (comprehend-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-language-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-language-exception
                    'unsupported-language-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or comprehend-arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "ComprehendArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-security-config common-lisp:nil
                       ((model-kms-key-id :initarg :model-kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-update-data-security-config-model-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-kms-key-id :initarg :volume-kms-key-id
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-update-data-security-config-volume-kms-key-id
                         :shape "KmsKeyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-config :initarg :vpc-config :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-config common-lisp:null) :accessor
                         struct-shape-update-data-security-config-vpc-config
                         :shape "VpcConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-data-security-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-data-security-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-data-security-config
                    'make-update-data-security-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "ModelKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-kms-key-id))
      (common-lisp:list
       (common-lisp:cons "VolumeKmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-config))
      (common-lisp:list
       (common-lisp:cons "VpcConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-security-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-request common-lisp:nil
                       ((endpoint-arn :initarg :endpoint-arn :initform
                         (common-lisp:error ":endpoint-arn is required") :type
                         (common-lisp:or comprehend-endpoint-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-endpoint-arn
                         :shape "ComprehendEndpointArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (desired-model-arn :initarg :desired-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-desired-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (desired-inference-units :initarg
                         :desired-inference-units :initform common-lisp:nil
                         :type
                         (common-lisp:or inference-units-integer
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-desired-inference-units
                         :shape "InferenceUnitsInteger" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (desired-data-access-role-arn :initarg
                         :desired-data-access-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-desired-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (flywheel-arn :initarg :flywheel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-arn))
      (common-lisp:list
       (common-lisp:cons "EndpointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-inference-units))
      (common-lisp:list
       (common-lisp:cons "DesiredInferenceUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'desired-data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredDataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-response common-lisp:nil
                       ((desired-model-arn :initarg :desired-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-desired-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-model-arn))
      (common-lisp:list
       (common-lisp:cons "DesiredModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-flywheel-request common-lisp:nil
                       ((flywheel-arn :initarg :flywheel-arn :initform
                         (common-lisp:error ":flywheel-arn is required") :type
                         (common-lisp:or comprehend-flywheel-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-flywheel-request-flywheel-arn
                         :shape "ComprehendFlywheelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (active-model-arn :initarg :active-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or comprehend-model-arn common-lisp:null)
                         :accessor
                         struct-shape-update-flywheel-request-active-model-arn
                         :shape "ComprehendModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-access-role-arn :initarg :data-access-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-update-flywheel-request-data-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-security-config :initarg :data-security-config
                         :initform common-lisp:nil :type
                         (common-lisp:or update-data-security-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-flywheel-request-data-security-config
                         :shape "UpdateDataSecurityConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-flywheel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-flywheel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-flywheel-request 'make-update-flywheel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-arn))
      (common-lisp:list
       (common-lisp:cons "FlywheelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'active-model-arn))
      (common-lisp:list
       (common-lisp:cons "ActiveModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "DataAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-security-config))
      (common-lisp:list
       (common-lisp:cons "DataSecurityConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-flywheel-response common-lisp:nil
                       ((flywheel-properties :initarg :flywheel-properties
                         :initform common-lisp:nil :type
                         (common-lisp:or flywheel-properties common-lisp:null)
                         :accessor
                         struct-shape-update-flywheel-response-flywheel-properties
                         :shape "FlywheelProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-flywheel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-flywheel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-flywheel-response 'make-update-flywheel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flywheel-properties))
      (common-lisp:list
       (common-lisp:cons "FlywheelProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-flywheel-response))
   common-lisp:nil))
(common-lisp:deftype version-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vpc-config common-lisp:nil
                       ((security-group-ids :initarg :security-group-ids
                         :initform
                         (common-lisp:error ":security-group-ids is required")
                         :type
                         (common-lisp:or security-group-ids common-lisp:null)
                         :accessor struct-shape-vpc-config-security-group-ids
                         :shape "SecurityGroupIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subnets :initarg :subnets :initform
                         (common-lisp:error ":subnets is required") :type
                         (common-lisp:or subnets common-lisp:null) :accessor
                         struct-shape-vpc-config-subnets :shape "Subnets"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vpc-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vpc-config 'make-vpc-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-ids))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnets))
      (common-lisp:list
       (common-lisp:cons "Subnets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass warnings-list-item common-lisp:nil
                       ((page :initarg :page :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-warnings-list-item-page :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (warn-code :initarg :warn-code :initform
                         common-lisp:nil :type
                         (common-lisp:or page-based-warning-code
                                         common-lisp:null)
                         :accessor struct-shape-warnings-list-item-warn-code
                         :shape "PageBasedWarningCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (warn-message :initarg :warn-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-warnings-list-item-warn-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-warnings-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'warnings-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'warnings-list-item 'make-warnings-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input warnings-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input warnings-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'page))
      (common-lisp:list
       (common-lisp:cons "Page"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warn-code))
      (common-lisp:list
       (common-lisp:cons "WarnCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warn-message))
      (common-lisp:list
       (common-lisp:cons "WarnMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input warnings-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun batch-detect-dominant-language
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list)
   (common-lisp:declare (common-lisp:ignorable text-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-detect-dominant-language-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectDominantLanguage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-dominant-language))
(common-lisp:progn
 (common-lisp:defun batch-detect-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectEntities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-entities))
(common-lisp:progn
 (common-lisp:defun batch-detect-key-phrases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-key-phrases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectKeyPhrases"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-key-phrases))
(common-lisp:progn
 (common-lisp:defun batch-detect-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-sentiment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectSentiment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-sentiment))
(common-lisp:progn
 (common-lisp:defun batch-detect-syntax
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-detect-syntax-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectSyntax"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-syntax))
(common-lisp:progn
 (common-lisp:defun batch-detect-targeted-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-list language-code)
   (common-lisp:declare (common-lisp:ignorable text-list language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-detect-targeted-sentiment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDetectTargetedSentiment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-detect-targeted-sentiment))
(common-lisp:progn
 (common-lisp:defun classify-document
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text endpoint-arn bytes
                     document-reader-config)
   (common-lisp:declare
    (common-lisp:ignorable text endpoint-arn bytes document-reader-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-classify-document-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ClassifyDocument"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'classify-document))
(common-lisp:progn
 (common-lisp:defun contains-pii-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-contains-pii-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ContainsPiiEntities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'contains-pii-entities))
(common-lisp:progn
 (common-lisp:defun create-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn dataset-name dataset-type
                     description input-data-config client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn dataset-name dataset-type description
     input-data-config client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDataset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-dataset))
(common-lisp:progn
 (common-lisp:defun create-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-name version-name
                     data-access-role-arn tags input-data-config
                     output-data-config client-request-token language-code
                     volume-kms-key-id vpc-config mode model-kms-key-id
                     model-policy)
   (common-lisp:declare
    (common-lisp:ignorable document-classifier-name version-name
     data-access-role-arn tags input-data-config output-data-config
     client-request-token language-code volume-kms-key-id vpc-config mode
     model-kms-key-id model-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDocumentClassifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-document-classifier))
(common-lisp:progn
 (common-lisp:defun create-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-name model-arn
                     desired-inference-units client-request-token tags
                     data-access-role-arn flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-name model-arn desired-inference-units
     client-request-token tags data-access-role-arn flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-endpoint))
(common-lisp:progn
 (common-lisp:defun create-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recognizer-name version-name
                     data-access-role-arn tags input-data-config
                     client-request-token language-code volume-kms-key-id
                     vpc-config model-kms-key-id model-policy)
   (common-lisp:declare
    (common-lisp:ignorable recognizer-name version-name data-access-role-arn
     tags input-data-config client-request-token language-code
     volume-kms-key-id vpc-config model-kms-key-id model-policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-entity-recognizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateEntityRecognizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun create-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-name active-model-arn
                     data-access-role-arn task-config model-type
                     data-lake-s3uri data-security-config client-request-token
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-name active-model-arn data-access-role-arn
     task-config model-type data-lake-s3uri data-security-config
     client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateFlywheel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-flywheel))
(common-lisp:progn
 (common-lisp:defun delete-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDocumentClassifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-document-classifier))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-entity-recognizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEntityRecognizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun delete-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn)
   (common-lisp:declare (common-lisp:ignorable flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteFlywheel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-flywheel))
(common-lisp:progn
 (common-lisp:defun delete-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn policy-revision-id)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn policy-revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteResourcePolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-resource-policy))
(common-lisp:progn
 (common-lisp:defun describe-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dataset-arn)
   (common-lisp:declare (common-lisp:ignorable dataset-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDataset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-dataset))
(common-lisp:progn
 (common-lisp:defun describe-document-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDocumentClassificationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-document-classification-job))
(common-lisp:progn
 (common-lisp:defun describe-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDocumentClassifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-document-classifier))
(common-lisp:progn
 (common-lisp:defun describe-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDominantLanguageDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn)
   (common-lisp:declare (common-lisp:ignorable endpoint-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-endpoint))
(common-lisp:progn
 (common-lisp:defun describe-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entity-recognizer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEntityRecognizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun describe-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventsDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-events-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn)
   (common-lisp:declare (common-lisp:ignorable flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeFlywheel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-flywheel))
(common-lisp:progn
 (common-lisp:defun describe-flywheel-iteration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn flywheel-iteration-id)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn flywheel-iteration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-flywheel-iteration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeFlywheelIteration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-flywheel-iteration))
(common-lisp:progn
 (common-lisp:defun describe-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeKeyPhrasesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePiiEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeResourcePolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-resource-policy))
(common-lisp:progn
 (common-lisp:defun describe-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTargetedSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun describe-topics-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-topics-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTopicsDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-topics-detection-job))
(common-lisp:progn
 (common-lisp:defun detect-dominant-language
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text)
   (common-lisp:declare (common-lisp:ignorable text))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-dominant-language-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectDominantLanguage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-dominant-language))
(common-lisp:progn
 (common-lisp:defun detect-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code endpoint-arn bytes
                     document-reader-config)
   (common-lisp:declare
    (common-lisp:ignorable text language-code endpoint-arn bytes
     document-reader-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectEntities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-entities))
(common-lisp:progn
 (common-lisp:defun detect-key-phrases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-key-phrases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectKeyPhrases"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-key-phrases))
(common-lisp:progn
 (common-lisp:defun detect-pii-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-pii-entities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectPiiEntities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-pii-entities))
(common-lisp:progn
 (common-lisp:defun detect-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-sentiment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectSentiment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-sentiment))
(common-lisp:progn
 (common-lisp:defun detect-syntax
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-syntax-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectSyntax"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-syntax))
(common-lisp:progn
 (common-lisp:defun detect-targeted-sentiment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text language-code)
   (common-lisp:declare (common-lisp:ignorable text language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detect-targeted-sentiment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectTargetedSentiment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-targeted-sentiment))
(common-lisp:progn
 (common-lisp:defun detect-toxic-content
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key text-segments language-code)
   (common-lisp:declare (common-lisp:ignorable text-segments language-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detect-toxic-content-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetectToxicContent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detect-toxic-content))
(common-lisp:progn
 (common-lisp:defun import-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-model-arn model-name version-name
                     model-kms-key-id data-access-role-arn tags)
   (common-lisp:declare
    (common-lisp:ignorable source-model-arn model-name version-name
     model-kms-key-id data-access-role-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ImportModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-model))
(common-lisp:progn
 (common-lisp:defun list-datasets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-datasets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDatasets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-datasets))
(common-lisp:progn
 (common-lisp:defun list-document-classification-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classification-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDocumentClassificationJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-document-classification-jobs))
(common-lisp:progn
 (common-lisp:defun list-document-classifier-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classifier-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDocumentClassifierSummaries"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-document-classifier-summaries))
(common-lisp:progn
 (common-lisp:defun list-document-classifiers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-document-classifiers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDocumentClassifiers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-document-classifiers))
(common-lisp:progn
 (common-lisp:defun list-dominant-language-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-dominant-language-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDominantLanguageDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-dominant-language-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEndpoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-endpoints))
(common-lisp:progn
 (common-lisp:defun list-entities-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-entities-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEntitiesDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-entities-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-entity-recognizer-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-entity-recognizer-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEntityRecognizerSummaries"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-entity-recognizer-summaries))
(common-lisp:progn
 (common-lisp:defun list-entity-recognizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-entity-recognizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEntityRecognizers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-entity-recognizers))
(common-lisp:progn
 (common-lisp:defun list-events-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-events-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEventsDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-events-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-flywheel-iteration-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-flywheel-iteration-history-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFlywheelIterationHistory"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-flywheel-iteration-history))
(common-lisp:progn
 (common-lisp:defun list-flywheels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-flywheels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFlywheels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-flywheels))
(common-lisp:progn
 (common-lisp:defun list-key-phrases-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-key-phrases-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListKeyPhrasesDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-key-phrases-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-pii-entities-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pii-entities-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPiiEntitiesDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-pii-entities-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-sentiment-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sentiment-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListSentimentDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sentiment-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-targeted-sentiment-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-targeted-sentiment-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTargetedSentimentDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-targeted-sentiment-detection-jobs))
(common-lisp:progn
 (common-lisp:defun list-topics-detection-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-topics-detection-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTopicsDetectionJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-topics-detection-jobs))
(common-lisp:progn
 (common-lisp:defun put-resource-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn resource-policy
                     policy-revision-id)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn resource-policy policy-revision-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-resource-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutResourcePolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-resource-policy))
(common-lisp:progn
 (common-lisp:defun start-document-classification-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name document-classifier-arn
                     input-data-config output-data-config data-access-role-arn
                     client-request-token volume-kms-key-id vpc-config tags
                     flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable job-name document-classifier-arn input-data-config
     output-data-config data-access-role-arn client-request-token
     volume-kms-key-id vpc-config tags flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-document-classification-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartDocumentClassificationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-document-classification-job))
(common-lisp:progn
 (common-lisp:defun start-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name client-request-token
                     volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name client-request-token volume-kms-key-id
     vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartDominantLanguageDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun start-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name entity-recognizer-arn
                     language-code client-request-token volume-kms-key-id
                     vpc-config tags flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name entity-recognizer-arn language-code
     client-request-token volume-kms-key-id vpc-config tags flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun start-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token target-event-types tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     target-event-types tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartEventsDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-events-detection-job))
(common-lisp:progn
 (common-lisp:defun start-flywheel-iteration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-flywheel-iteration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartFlywheelIteration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-flywheel-iteration))
(common-lisp:progn
 (common-lisp:defun start-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartKeyPhrasesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun start-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config mode
                     redaction-config data-access-role-arn job-name
                     language-code client-request-token tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config mode
     redaction-config data-access-role-arn job-name language-code
     client-request-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartPiiEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun start-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun start-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name language-code
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name language-code client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartTargetedSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun start-topics-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-data-config output-data-config
                     data-access-role-arn job-name number-of-topics
                     client-request-token volume-kms-key-id vpc-config tags)
   (common-lisp:declare
    (common-lisp:ignorable input-data-config output-data-config
     data-access-role-arn job-name number-of-topics client-request-token
     volume-kms-key-id vpc-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-topics-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartTopicsDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-topics-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-dominant-language-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-dominant-language-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopDominantLanguageDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-dominant-language-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-events-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-events-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopEventsDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-events-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-key-phrases-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-key-phrases-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopKeyPhrasesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-key-phrases-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-pii-entities-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-pii-entities-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopPiiEntitiesDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-pii-entities-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-targeted-sentiment-detection-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id)
   (common-lisp:declare (common-lisp:ignorable job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-targeted-sentiment-detection-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopTargetedSentimentDetectionJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-targeted-sentiment-detection-job))
(common-lisp:progn
 (common-lisp:defun stop-training-document-classifier
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key document-classifier-arn)
   (common-lisp:declare (common-lisp:ignorable document-classifier-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-training-document-classifier-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopTrainingDocumentClassifier"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-training-document-classifier))
(common-lisp:progn
 (common-lisp:defun stop-training-entity-recognizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entity-recognizer-arn)
   (common-lisp:declare (common-lisp:ignorable entity-recognizer-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-stop-training-entity-recognizer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopTrainingEntityRecognizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-training-entity-recognizer))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-arn desired-model-arn
                     desired-inference-units desired-data-access-role-arn
                     flywheel-arn)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-arn desired-model-arn
     desired-inference-units desired-data-access-role-arn flywheel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-endpoint))
(common-lisp:progn
 (common-lisp:defun update-flywheel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key flywheel-arn active-model-arn
                     data-access-role-arn data-security-config)
   (common-lisp:declare
    (common-lisp:ignorable flywheel-arn active-model-arn data-access-role-arn
     data-security-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-flywheel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'comprehend-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateFlywheel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-flywheel))
