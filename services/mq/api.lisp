;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/mq/api (:use)
                             (:nicknames #:aws/mq)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mq/api)
(common-lisp:progn
 (common-lisp:define-condition mq-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mq-error))
(common-lisp:progn
 (common-lisp:defclass mq-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "mq" :api-version
                        "2017-11-27" :host-prefix "mq" :signing-name "mq"
                        :global-host common-lisp:nil))
 (common-lisp:export 'mq-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:progn
 (common-lisp:defclass action-required common-lisp:nil
                       ((action-required-code :initarg :action-required-code
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-action-required-action-required-code
                         :shape "__string" :location common-lisp:nil
                         :location-name "actionRequiredCode")
                        (action-required-info :initarg :action-required-info
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-action-required-action-required-info
                         :shape "__string" :location common-lisp:nil
                         :location-name "actionRequiredInfo"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action-required
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action-required
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'action-required 'make-action-required))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-required))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-required))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-required-code))
      (common-lisp:list
       (common-lisp:cons "ActionRequiredCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'action-required-info))
      (common-lisp:list
       (common-lisp:cons "ActionRequiredInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-required))
   common-lisp:nil))
(common-lisp:deftype authentication-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass availability-zone common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-availability-zone-name :shape "__string"
                         :location common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-availability-zone
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'availability-zone
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'availability-zone 'make-availability-zone))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input availability-zone))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input availability-zone))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader bad-request-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception
                    'bad-request-exception-error-attribute
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass broker-engine-type common-lisp:nil
                       ((engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor struct-shape-broker-engine-type-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-versions :initarg :engine-versions :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfEngineVersion|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-engine-type-engine-versions :shape
                         "__listOfEngineVersion" :location common-lisp:nil
                         :location-name "engineVersions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-engine-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'broker-engine-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'broker-engine-type 'make-broker-engine-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-engine-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-engine-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-versions))
      (common-lisp:list
       (common-lisp:cons "EngineVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-engine-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass broker-engine-type-output common-lisp:nil
                       ((broker-engine-types :initarg :broker-engine-types
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerEngineType|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-engine-type-output-broker-engine-types
                         :shape "__listOfBrokerEngineType" :location
                         common-lisp:nil :location-name "brokerEngineTypes")
                        (max-results :initarg :max-results :initform
                         (common-lisp:error ":max-results is required") :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-engine-type-output-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-engine-type-output-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-engine-type-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'broker-engine-type-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'broker-engine-type-output
                    'make-broker-engine-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-engine-types))
      (common-lisp:list
       (common-lisp:cons "BrokerEngineTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-engine-type-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass broker-instance common-lisp:nil
                       ((console-url :initarg :console-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-instance-console-url :shape
                         "__string" :location common-lisp:nil :location-name
                         "consoleURL")
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-broker-instance-endpoints
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "endpoints")
                        (ip-address :initarg :ip-address :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-instance-ip-address :shape
                         "__string" :location common-lisp:nil :location-name
                         "ipAddress"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-instance
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'broker-instance
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'broker-instance 'make-broker-instance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-instance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-instance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-url))
      (common-lisp:list
       (common-lisp:cons "ConsoleURL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-address))
      (common-lisp:list
       (common-lisp:cons "IpAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-instance))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass broker-instance-option common-lisp:nil
                       ((availability-zones :initarg :availability-zones
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfAvailabilityZone|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-option-availability-zones
                         :shape "__listOfAvailabilityZone" :location
                         common-lisp:nil :location-name "availabilityZones")
                        (engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-option-engine-type :shape
                         "EngineType" :location common-lisp:nil :location-name
                         "engineType")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-instance-option-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-storage-type common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-option-storage-type
                         :shape "BrokerStorageType" :location common-lisp:nil
                         :location-name "storageType")
                        (supported-deployment-modes :initarg
                         :supported-deployment-modes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfDeploymentMode|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-option-supported-deployment-modes
                         :shape "__listOfDeploymentMode" :location
                         common-lisp:nil :location-name
                         "supportedDeploymentModes")
                        (supported-engine-versions :initarg
                         :supported-engine-versions :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-option-supported-engine-versions
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "supportedEngineVersions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-instance-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'broker-instance-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'broker-instance-option 'make-broker-instance-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zones))
      (common-lisp:list
       (common-lisp:cons "AvailabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-deployment-modes))
      (common-lisp:list
       (common-lisp:cons "SupportedDeploymentModes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-engine-versions))
      (common-lisp:list
       (common-lisp:cons "SupportedEngineVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass broker-instance-options-output common-lisp:nil
                       ((broker-instance-options :initarg
                         :broker-instance-options :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfBrokerInstanceOption|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-options-output-broker-instance-options
                         :shape "__listOfBrokerInstanceOption" :location
                         common-lisp:nil :location-name
                         "brokerInstanceOptions")
                        (max-results :initarg :max-results :initform
                         (common-lisp:error ":max-results is required") :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor
                         struct-shape-broker-instance-options-output-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-instance-options-output-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-instance-options-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'broker-instance-options-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'broker-instance-options-output
                    'make-broker-instance-options-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'broker-instance-options))
      (common-lisp:list
       (common-lisp:cons "BrokerInstanceOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          broker-instance-options-output))
   common-lisp:nil))
(common-lisp:deftype broker-state () 'common-lisp:string)
(common-lisp:deftype broker-storage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass broker-summary common-lisp:nil
                       ((broker-arn :initarg :broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-summary-broker-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerArn")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-summary-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (broker-name :initarg :broker-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-summary-broker-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerName")
                        (broker-state :initarg :broker-state :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-state common-lisp:null)
                         :accessor struct-shape-broker-summary-broker-state
                         :shape "BrokerState" :location common-lisp:nil
                         :location-name "brokerState")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-broker-summary-created :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (deployment-mode :initarg :deployment-mode :initform
                         (common-lisp:error ":deployment-mode is required")
                         :type
                         (common-lisp:or deployment-mode common-lisp:null)
                         :accessor struct-shape-broker-summary-deployment-mode
                         :shape "DeploymentMode" :location common-lisp:nil
                         :location-name "deploymentMode")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor struct-shape-broker-summary-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-broker-summary-host-instance-type :shape
                         "__string" :location common-lisp:nil :location-name
                         "hostInstanceType"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-broker-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'broker-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'broker-summary 'make-broker-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input broker-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input broker-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input broker-summary))
   common-lisp:nil))
(common-lisp:deftype change-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass configuration common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform
                         (common-lisp:error
                          ":authentication-strategy is required")
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-configuration-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (created :initarg :created :initform
                         (common-lisp:error ":created is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-configuration-created :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (description :initarg :description :initform
                         (common-lisp:error ":description is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-description :shape
                         "__string" :location common-lisp:nil :location-name
                         "description")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor struct-shape-configuration-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         (common-lisp:error ":engine-version is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-configuration-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (latest-revision :initarg :latest-revision :initform
                         (common-lisp:error ":latest-revision is required")
                         :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor struct-shape-configuration-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-name :shape "__string"
                         :location common-lisp:nil :location-name "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-configuration-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'configuration 'make-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configuration-id common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-id-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (revision :initarg :revision :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-configuration-id-revision
                         :shape "__integer" :location common-lisp:nil
                         :location-name "revision"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configuration-id
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configuration-id
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configuration-id 'make-configuration-id))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configuration-id))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configuration-id))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision))
      (common-lisp:list
       (common-lisp:cons "Revision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configuration-id))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configuration-revision common-lisp:nil
                       ((created :initarg :created :initform
                         (common-lisp:error ":created is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-configuration-revision-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configuration-revision-description :shape
                         "__string" :location common-lisp:nil :location-name
                         "description")
                        (revision :initarg :revision :initform
                         (common-lisp:error ":revision is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-configuration-revision-revision
                         :shape "__integer" :location common-lisp:nil
                         :location-name "revision"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configuration-revision
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configuration-revision
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configuration-revision 'make-configuration-revision))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revision))
      (common-lisp:list
       (common-lisp:cons "Revision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configuration-revision))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configurations common-lisp:nil
                       ((current :initarg :current :initform common-lisp:nil
                         :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor struct-shape-configurations-current :shape
                         "ConfigurationId" :location common-lisp:nil
                         :location-name "current")
                        (history :initarg :history :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfConfigurationId|
                                         common-lisp:null)
                         :accessor struct-shape-configurations-history :shape
                         "__listOfConfigurationId" :location common-lisp:nil
                         :location-name "history")
                        (pending :initarg :pending :initform common-lisp:nil
                         :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor struct-shape-configurations-pending :shape
                         "ConfigurationId" :location common-lisp:nil
                         :location-name "pending"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configurations
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'configurations 'make-configurations))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configurations))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configurations))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current))
      (common-lisp:list
       (common-lisp:cons "Current"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'history))
      (common-lisp:list
       (common-lisp:cons "History"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configurations))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader conflict-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-error-attribute
                    'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-broker-input common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform
                         (common-lisp:error
                          ":auto-minor-version-upgrade is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-name :initarg :broker-name :initform
                         (common-lisp:error ":broker-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-input-broker-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerName")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-configuration :shape
                         "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (creator-request-id :initarg :creator-request-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-input-creator-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "creatorRequestId")
                        (deployment-mode :initarg :deployment-mode :initform
                         (common-lisp:error ":deployment-mode is required")
                         :type
                         (common-lisp:or deployment-mode common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-deployment-mode
                         :shape "DeploymentMode" :location common-lisp:nil
                         :location-name "deploymentMode")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (data-replication-primary-broker-arn :initarg
                         :data-replication-primary-broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-input-data-replication-primary-broker-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "dataReplicationPrimaryBrokerArn")
                        (encryption-options :initarg :encryption-options
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-options common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-encryption-options
                         :shape "EncryptionOptions" :location common-lisp:nil
                         :location-name "encryptionOptions")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor struct-shape-create-broker-input-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         (common-lisp:error ":engine-version is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-engine-version :shape
                         "__string" :location common-lisp:nil :location-name
                         "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform
                         (common-lisp:error ":host-instance-type is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-ldap-server-metadata
                         :shape "LdapServerMetadataInput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-create-broker-input-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (publicly-accessible :initarg :publicly-accessible
                         :initform
                         (common-lisp:error ":publicly-accessible is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-publicly-accessible
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publiclyAccessible")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-storage-type common-lisp:null)
                         :accessor
                         struct-shape-create-broker-input-storage-type :shape
                         "BrokerStorageType" :location common-lisp:nil
                         :location-name "storageType")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-broker-input-subnet-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-broker-input-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (users :initarg :users :initform
                         (common-lisp:error ":users is required") :type
                         (common-lisp:or |__listOfUser| common-lisp:null)
                         :accessor struct-shape-create-broker-input-users
                         :shape "__listOfUser" :location common-lisp:nil
                         :location-name "users"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-broker-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-broker-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-broker-input 'make-create-broker-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-broker-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-broker-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-primary-broker-arn))
      (common-lisp:list
       (common-lisp:cons "DataReplicationPrimaryBrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-broker-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-broker-output common-lisp:nil
                       ((broker-arn :initarg :broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-output-broker-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerArn")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-broker-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-broker-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-broker-output 'make-create-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-broker-request common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform
                         (common-lisp:error
                          ":auto-minor-version-upgrade is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-name :initarg :broker-name :initform
                         (common-lisp:error ":broker-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-request-broker-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerName")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-configuration
                         :shape "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (creator-request-id :initarg :creator-request-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-request-creator-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "creatorRequestId")
                        (deployment-mode :initarg :deployment-mode :initform
                         (common-lisp:error ":deployment-mode is required")
                         :type
                         (common-lisp:or deployment-mode common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-deployment-mode
                         :shape "DeploymentMode" :location common-lisp:nil
                         :location-name "deploymentMode")
                        (encryption-options :initarg :encryption-options
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-options common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-encryption-options
                         :shape "EncryptionOptions" :location common-lisp:nil
                         :location-name "encryptionOptions")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-engine-type :shape
                         "EngineType" :location common-lisp:nil :location-name
                         "engineType")
                        (engine-version :initarg :engine-version :initform
                         (common-lisp:error ":engine-version is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform
                         (common-lisp:error ":host-instance-type is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-ldap-server-metadata
                         :shape "LdapServerMetadataInput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-create-broker-request-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (publicly-accessible :initarg :publicly-accessible
                         :initform
                         (common-lisp:error ":publicly-accessible is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-publicly-accessible
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publiclyAccessible")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-storage-type common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-storage-type :shape
                         "BrokerStorageType" :location common-lisp:nil
                         :location-name "storageType")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-subnet-ids :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-broker-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (users :initarg :users :initform
                         (common-lisp:error ":users is required") :type
                         (common-lisp:or |__listOfUser| common-lisp:null)
                         :accessor struct-shape-create-broker-request-users
                         :shape "__listOfUser" :location common-lisp:nil
                         :location-name "users")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-broker-request-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (data-replication-primary-broker-arn :initarg
                         :data-replication-primary-broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-request-data-replication-primary-broker-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "dataReplicationPrimaryBrokerArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-broker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-broker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-broker-request 'make-create-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creator-request-id))
      (common-lisp:list
       (common-lisp:cons "CreatorRequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-primary-broker-arn))
      (common-lisp:list
       (common-lisp:cons "DataReplicationPrimaryBrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-broker-response common-lisp:nil
                       ((broker-arn :initarg :broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-response-broker-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerArn")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-broker-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-broker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-broker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-broker-response 'make-create-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-input common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-input-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-input-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         (common-lisp:error ":engine-version is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-input-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-input-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-configuration-input-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-input
                    'make-create-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-output common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-output-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform
                         (common-lisp:error
                          ":authentication-strategy is required")
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-output-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (created :initarg :created :initform
                         (common-lisp:error ":created is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-output-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-output-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (latest-revision :initarg :latest-revision :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-output-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-output-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-output
                    'make-create-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-request common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-request-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-request-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         (common-lisp:error ":engine-version is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-request-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-request-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-request-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-request
                    'make-create-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-response-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-response-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (latest-revision :initarg :latest-revision :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-response-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-configuration-response-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-response
                    'make-create-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tags-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-tags-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-create-tags-request-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-user-input common-lisp:nil
                       ((console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-user-input-console-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-user-input-groups :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-user-input-password :shape
                         "__string" :location common-lisp:nil :location-name
                         "password")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-user-input-replication-user :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-user-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-user-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-user-input 'make-create-user-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-user-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-user-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-user-request-console-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-user-request-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-user-request-password :shape
                         "__string" :location common-lisp:nil :location-name
                         "password")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-user-request-username :shape
                         "__string" :location "uri" :location-name "username")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-create-user-request-replication-user
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-user-request 'make-create-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-user-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-user-response 'make-create-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data-replication-counterpart common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-data-replication-counterpart-broker-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "brokerId")
                        (region :initarg :region :initform
                         (common-lisp:error ":region is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-data-replication-counterpart-region
                         :shape "__string" :location common-lisp:nil
                         :location-name "region"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-replication-counterpart
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data-replication-counterpart
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'data-replication-counterpart
                    'make-data-replication-counterpart))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-counterpart))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-counterpart))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-counterpart))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data-replication-metadata-output common-lisp:nil
                       ((data-replication-counterpart :initarg
                         :data-replication-counterpart :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-counterpart
                                         common-lisp:null)
                         :accessor
                         struct-shape-data-replication-metadata-output-data-replication-counterpart
                         :shape "DataReplicationCounterpart" :location
                         common-lisp:nil :location-name
                         "dataReplicationCounterpart")
                        (data-replication-role :initarg :data-replication-role
                         :initform
                         (common-lisp:error
                          ":data-replication-role is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-data-replication-metadata-output-data-replication-role
                         :shape "__string" :location common-lisp:nil
                         :location-name "dataReplicationRole"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-replication-metadata-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'data-replication-metadata-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'data-replication-metadata-output
                    'make-data-replication-metadata-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-metadata-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-counterpart))
      (common-lisp:list
       (common-lisp:cons "DataReplicationCounterpart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-role))
      (common-lisp:list
       (common-lisp:cons "DataReplicationRole"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-replication-metadata-output))
   common-lisp:nil))
(common-lisp:deftype data-replication-mode () 'common-lisp:string)
(common-lisp:deftype day-of-week () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-broker-output common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-broker-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-broker-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-broker-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-broker-output 'make-delete-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-broker-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-broker-request-broker-id :shape
                         "__string" :location "uri" :location-name
                         "broker-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-broker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-broker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-broker-request 'make-delete-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-broker-response common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-broker-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-broker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-broker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-broker-response 'make-delete-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tags-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-tags-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-delete-tags-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-user-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-user-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-user-request-username :shape
                         "__string" :location "uri" :location-name "username"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-user-request 'make-delete-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-user-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-user-response 'make-delete-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-user-response))
   common-lisp:nil))
(common-lisp:deftype deployment-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass describe-broker-engine-types-request common-lisp:nil
                       ((engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-engine-types-request-engine-type
                         :shape "__string" :location "querystring"
                         :location-name "engineType")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-engine-types-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-engine-types-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-engine-types-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-broker-engine-types-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-engine-types-request
                    'make-describe-broker-engine-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-engine-types-response common-lisp:nil
                       ((broker-engine-types :initarg :broker-engine-types
                         :initform common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerEngineType|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-engine-types-response-broker-engine-types
                         :shape "__listOfBrokerEngineType" :location
                         common-lisp:nil :location-name "brokerEngineTypes")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-engine-types-response-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-engine-types-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-engine-types-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-broker-engine-types-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-engine-types-response
                    'make-describe-broker-engine-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-engine-types))
      (common-lisp:list
       (common-lisp:cons "BrokerEngineTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-engine-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-instance-options-request common-lisp:nil
                       ((engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-instance-options-request-engine-type
                         :shape "__string" :location "querystring"
                         :location-name "engineType")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-instance-options-request-host-instance-type
                         :shape "__string" :location "querystring"
                         :location-name "hostInstanceType")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-instance-options-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-instance-options-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-instance-options-request-storage-type
                         :shape "__string" :location "querystring"
                         :location-name "storageType"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-instance-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-broker-instance-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-instance-options-request
                    'make-describe-broker-instance-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-instance-options-response
                       common-lisp:nil
                       ((broker-instance-options :initarg
                         :broker-instance-options :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfBrokerInstanceOption|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-instance-options-response-broker-instance-options
                         :shape "__listOfBrokerInstanceOption" :location
                         common-lisp:nil :location-name
                         "brokerInstanceOptions")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-instance-options-response-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-instance-options-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-instance-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-broker-instance-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-instance-options-response
                    'make-describe-broker-instance-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'broker-instance-options))
      (common-lisp:list
       (common-lisp:cons "BrokerInstanceOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-instance-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-output common-lisp:nil
                       ((actions-required :initarg :actions-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfActionRequired|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-actions-required
                         :shape "__listOfActionRequired" :location
                         common-lisp:nil :location-name "actionsRequired")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform
                         (common-lisp:error
                          ":auto-minor-version-upgrade is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-arn :initarg :broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-output-broker-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerArn")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (broker-instances :initarg :broker-instances :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerInstance|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-broker-instances
                         :shape "__listOfBrokerInstance" :location
                         common-lisp:nil :location-name "brokerInstances")
                        (broker-name :initarg :broker-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-output-broker-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerName")
                        (broker-state :initarg :broker-state :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-state common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-broker-state
                         :shape "BrokerState" :location common-lisp:nil
                         :location-name "brokerState")
                        (configurations :initarg :configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or configurations common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-configurations
                         :shape "Configurations" :location common-lisp:nil
                         :location-name "configurations")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-describe-broker-output-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (deployment-mode :initarg :deployment-mode :initform
                         (common-lisp:error ":deployment-mode is required")
                         :type
                         (common-lisp:or deployment-mode common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-deployment-mode
                         :shape "DeploymentMode" :location common-lisp:nil
                         :location-name "deploymentMode")
                        (data-replication-metadata :initarg
                         :data-replication-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "dataReplicationMetadata")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (encryption-options :initarg :encryption-options
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-options common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-encryption-options
                         :shape "EncryptionOptions" :location common-lisp:nil
                         :location-name "encryptionOptions")
                        (engine-type :initarg :engine-type :initform
                         (common-lisp:error ":engine-type is required") :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-engine-type :shape
                         "EngineType" :location common-lisp:nil :location-name
                         "engineType")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-output-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-output-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs-summary common-lisp:null)
                         :accessor struct-shape-describe-broker-output-logs
                         :shape "LogsSummary" :location common-lisp:nil
                         :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (pending-authentication-strategy :initarg
                         :pending-authentication-strategy :initform
                         common-lisp:nil :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "pendingAuthenticationStrategy")
                        (pending-data-replication-metadata :initarg
                         :pending-data-replication-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingDataReplicationMetadata")
                        (pending-data-replication-mode :initarg
                         :pending-data-replication-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "pendingDataReplicationMode")
                        (pending-engine-version :initarg
                         :pending-engine-version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "pendingEngineVersion")
                        (pending-host-instance-type :initarg
                         :pending-host-instance-type :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "pendingHostInstanceType")
                        (pending-ldap-server-metadata :initarg
                         :pending-ldap-server-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingLdapServerMetadata")
                        (pending-security-groups :initarg
                         :pending-security-groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-pending-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "pendingSecurityGroups")
                        (publicly-accessible :initarg :publicly-accessible
                         :initform
                         (common-lisp:error ":publicly-accessible is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-publicly-accessible
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publiclyAccessible")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-storage-type common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-storage-type
                         :shape "BrokerStorageType" :location common-lisp:nil
                         :location-name "storageType")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-output-subnet-ids :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-describe-broker-output-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (users :initarg :users :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUserSummary|
                                         common-lisp:null)
                         :accessor struct-shape-describe-broker-output-users
                         :shape "__listOfUserSummary" :location common-lisp:nil
                         :location-name "users"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-broker-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-output 'make-describe-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-required))
      (common-lisp:list
       (common-lisp:cons "ActionsRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-instances))
      (common-lisp:list
       (common-lisp:cons "BrokerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "PendingAuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-engine-version))
      (common-lisp:list
       (common-lisp:cons "PendingEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-host-instance-type))
      (common-lisp:list
       (common-lisp:cons "PendingHostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingLdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-security-groups))
      (common-lisp:list
       (common-lisp:cons "PendingSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-request-broker-id :shape
                         "__string" :location "uri" :location-name
                         "broker-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-broker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-request 'make-describe-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-broker-response common-lisp:nil
                       ((actions-required :initarg :actions-required :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfActionRequired|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-actions-required
                         :shape "__listOfActionRequired" :location
                         common-lisp:nil :location-name "actionsRequired")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-arn :initarg :broker-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-response-broker-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "brokerArn")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (broker-instances :initarg :broker-instances :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerInstance|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-broker-instances
                         :shape "__listOfBrokerInstance" :location
                         common-lisp:nil :location-name "brokerInstances")
                        (broker-name :initarg :broker-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-response-broker-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "brokerName")
                        (broker-state :initarg :broker-state :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-state common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-broker-state
                         :shape "BrokerState" :location common-lisp:nil
                         :location-name "brokerState")
                        (configurations :initarg :configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or configurations common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-configurations
                         :shape "Configurations" :location common-lisp:nil
                         :location-name "configurations")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-created :shape
                         "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (deployment-mode :initarg :deployment-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or deployment-mode common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-deployment-mode
                         :shape "DeploymentMode" :location common-lisp:nil
                         :location-name "deploymentMode")
                        (encryption-options :initarg :encryption-options
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-options common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-encryption-options
                         :shape "EncryptionOptions" :location common-lisp:nil
                         :location-name "encryptionOptions")
                        (engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-response-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-broker-response-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs-summary common-lisp:null)
                         :accessor struct-shape-describe-broker-response-logs
                         :shape "LogsSummary" :location common-lisp:nil
                         :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (pending-authentication-strategy :initarg
                         :pending-authentication-strategy :initform
                         common-lisp:nil :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "pendingAuthenticationStrategy")
                        (pending-engine-version :initarg
                         :pending-engine-version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "pendingEngineVersion")
                        (pending-host-instance-type :initarg
                         :pending-host-instance-type :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "pendingHostInstanceType")
                        (pending-ldap-server-metadata :initarg
                         :pending-ldap-server-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingLdapServerMetadata")
                        (pending-security-groups :initarg
                         :pending-security-groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "pendingSecurityGroups")
                        (publicly-accessible :initarg :publicly-accessible
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-publicly-accessible
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "publiclyAccessible")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or broker-storage-type common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-storage-type
                         :shape "BrokerStorageType" :location common-lisp:nil
                         :location-name "storageType")
                        (subnet-ids :initarg :subnet-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-subnet-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "subnetIds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-describe-broker-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (users :initarg :users :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUserSummary|
                                         common-lisp:null)
                         :accessor struct-shape-describe-broker-response-users
                         :shape "__listOfUserSummary" :location common-lisp:nil
                         :location-name "users")
                        (data-replication-metadata :initarg
                         :data-replication-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "dataReplicationMetadata")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (pending-data-replication-metadata :initarg
                         :pending-data-replication-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingDataReplicationMetadata")
                        (pending-data-replication-mode :initarg
                         :pending-data-replication-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-broker-response-pending-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "pendingDataReplicationMode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-broker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-broker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-broker-response 'make-describe-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions-required))
      (common-lisp:list
       (common-lisp:cons "ActionsRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-arn))
      (common-lisp:list
       (common-lisp:cons "BrokerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-instances))
      (common-lisp:list
       (common-lisp:cons "BrokerInstances"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-name))
      (common-lisp:list
       (common-lisp:cons "BrokerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-state))
      (common-lisp:list
       (common-lisp:cons "BrokerState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-mode))
      (common-lisp:list
       (common-lisp:cons "DeploymentMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-options))
      (common-lisp:list
       (common-lisp:cons "EncryptionOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "PendingAuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-engine-version))
      (common-lisp:list
       (common-lisp:cons "PendingEngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-host-instance-type))
      (common-lisp:list
       (common-lisp:cons "PendingHostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingLdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-security-groups))
      (common-lisp:list
       (common-lisp:cons "PendingSecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publicly-accessible))
      (common-lisp:list
       (common-lisp:cons "PubliclyAccessible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-ids))
      (common-lisp:list
       (common-lisp:cons "SubnetIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-configuration-request common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         (common-lisp:error ":configuration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-request-configuration-id
                         :shape "__string" :location "uri" :location-name
                         "configuration-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-request
                    'make-describe-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-configuration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-response-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-response-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (engine-type :initarg :engine-type :initform
                         common-lisp:nil :type
                         (common-lisp:or engine-type common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-response-engine-type
                         :shape "EngineType" :location common-lisp:nil
                         :location-name "engineType")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-response-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (latest-revision :initarg :latest-revision :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-response-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "name")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-response
                    'make-describe-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-type))
      (common-lisp:list
       (common-lisp:cons "EngineType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-configuration-revision-output common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         (common-lisp:error ":configuration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-revision-output-configuration-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "configurationId")
                        (created :initarg :created :initform
                         (common-lisp:error ":created is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-revision-output-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (data :initarg :data :initform
                         (common-lisp:error ":data is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-revision-output-data
                         :shape "__string" :location common-lisp:nil
                         :location-name "data")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-revision-output-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-configuration-revision-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-configuration-revision-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-output
                    'make-describe-configuration-revision-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-configuration-revision-request common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         (common-lisp:error ":configuration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-revision-request-configuration-id
                         :shape "__string" :location "uri" :location-name
                         "configuration-id")
                        (configuration-revision :initarg
                         :configuration-revision :initform
                         (common-lisp:error
                          ":configuration-revision is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-revision-request-configuration-revision
                         :shape "__string" :location "uri" :location-name
                         "configuration-revision"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-configuration-revision-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-configuration-revision-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-request
                    'make-describe-configuration-revision-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-configuration-revision-response common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-revision-response-configuration-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "configurationId")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-describe-configuration-revision-response-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-revision-response-data
                         :shape "__string" :location common-lisp:nil
                         :location-name "data")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-configuration-revision-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-configuration-revision-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-configuration-revision-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-configuration-revision-response
                    'make-describe-configuration-revision-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-configuration-revision-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-user-output common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-user-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-user-output-console-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-describe-user-output-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (pending :initarg :pending :initform common-lisp:nil
                         :type
                         (common-lisp:or user-pending-changes common-lisp:null)
                         :accessor struct-shape-describe-user-output-pending
                         :shape "UserPendingChanges" :location common-lisp:nil
                         :location-name "pending")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-user-output-replication-user
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicationUser")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-user-output-username :shape
                         "__string" :location common-lisp:nil :location-name
                         "username"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-user-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-user-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-user-output 'make-describe-user-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-user-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-user-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-user-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-user-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-user-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-user-request-username :shape
                         "__string" :location "uri" :location-name "username"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-user-request 'make-describe-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-user-response common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-user-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-user-response-console-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-describe-user-response-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (pending :initarg :pending :initform common-lisp:nil
                         :type
                         (common-lisp:or user-pending-changes common-lisp:null)
                         :accessor struct-shape-describe-user-response-pending
                         :shape "UserPendingChanges" :location common-lisp:nil
                         :location-name "pending")
                        (username :initarg :username :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-describe-user-response-username
                         :shape "__string" :location common-lisp:nil
                         :location-name "username")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-describe-user-response-replication-user
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-user-response 'make-describe-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass encryption-options common-lisp:nil
                       ((kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-encryption-options-kms-key-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "kmsKeyId")
                        (use-aws-owned-key :initarg :use-aws-owned-key
                         :initform
                         (common-lisp:error ":use-aws-owned-key is required")
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-encryption-options-use-aws-owned-key
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "useAwsOwnedKey"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'encryption-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'encryption-options 'make-encryption-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input encryption-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input encryption-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-aws-owned-key))
      (common-lisp:list
       (common-lisp:cons "UseAwsOwnedKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input encryption-options))
   common-lisp:nil))
(common-lisp:deftype engine-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass engine-version common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-engine-version-name :shape "__string"
                         :location common-lisp:nil :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-engine-version
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'engine-version
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'engine-version 'make-engine-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input engine-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input engine-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input engine-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass error common-lisp:nil
                       ((error-attribute :initarg :error-attribute :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-error-error-attribute :shape "__string"
                         :location common-lisp:nil :location-name
                         "errorAttribute")
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-error-message :shape "__string"
                         :location common-lisp:nil :location-name "message"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'error
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'error 'make-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-attribute))
      (common-lisp:list
       (common-lisp:cons "ErrorAttribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader forbidden-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-error-attribute
                    'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader internal-server-error-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-error-attribute
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defclass ldap-server-metadata-input common-lisp:nil
                       ((hosts :initarg :hosts :initform
                         (common-lisp:error ":hosts is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-hosts :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "hosts")
                        (role-base :initarg :role-base :initform
                         (common-lisp:error ":role-base is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-input-role-base
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleBase")
                        (role-name :initarg :role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-input-role-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleName")
                        (role-search-matching :initarg :role-search-matching
                         :initform
                         (common-lisp:error
                          ":role-search-matching is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-role-search-matching
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleSearchMatching")
                        (role-search-subtree :initarg :role-search-subtree
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-role-search-subtree
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "roleSearchSubtree")
                        (service-account-password :initarg
                         :service-account-password :initform
                         (common-lisp:error
                          ":service-account-password is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-service-account-password
                         :shape "__string" :location common-lisp:nil
                         :location-name "serviceAccountPassword")
                        (service-account-username :initarg
                         :service-account-username :initform
                         (common-lisp:error
                          ":service-account-username is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-service-account-username
                         :shape "__string" :location common-lisp:nil
                         :location-name "serviceAccountUsername")
                        (user-base :initarg :user-base :initform
                         (common-lisp:error ":user-base is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-input-user-base
                         :shape "__string" :location common-lisp:nil
                         :location-name "userBase")
                        (user-role-name :initarg :user-role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-input-user-role-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "userRoleName")
                        (user-search-matching :initarg :user-search-matching
                         :initform
                         (common-lisp:error
                          ":user-search-matching is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-user-search-matching
                         :shape "__string" :location common-lisp:nil
                         :location-name "userSearchMatching")
                        (user-search-subtree :initarg :user-search-subtree
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-input-user-search-subtree
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "userSearchSubtree"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ldap-server-metadata-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ldap-server-metadata-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ldap-server-metadata-input
                    'make-ldap-server-metadata-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosts))
      (common-lisp:list
       (common-lisp:cons "Hosts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-base))
      (common-lisp:list
       (common-lisp:cons "RoleBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "RoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'role-search-matching))
      (common-lisp:list
       (common-lisp:cons "RoleSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-search-subtree))
      (common-lisp:list
       (common-lisp:cons "RoleSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-password))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountPassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-username))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountUsername"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-base))
      (common-lisp:list
       (common-lisp:cons "UserBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-role-name))
      (common-lisp:list
       (common-lisp:cons "UserRoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-search-matching))
      (common-lisp:list
       (common-lisp:cons "UserSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-search-subtree))
      (common-lisp:list
       (common-lisp:cons "UserSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ldap-server-metadata-output common-lisp:nil
                       ((hosts :initarg :hosts :initform
                         (common-lisp:error ":hosts is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-hosts :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "hosts")
                        (role-base :initarg :role-base :initform
                         (common-lisp:error ":role-base is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-output-role-base
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleBase")
                        (role-name :initarg :role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-output-role-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleName")
                        (role-search-matching :initarg :role-search-matching
                         :initform
                         (common-lisp:error
                          ":role-search-matching is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-role-search-matching
                         :shape "__string" :location common-lisp:nil
                         :location-name "roleSearchMatching")
                        (role-search-subtree :initarg :role-search-subtree
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-role-search-subtree
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "roleSearchSubtree")
                        (service-account-username :initarg
                         :service-account-username :initform
                         (common-lisp:error
                          ":service-account-username is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-service-account-username
                         :shape "__string" :location common-lisp:nil
                         :location-name "serviceAccountUsername")
                        (user-base :initarg :user-base :initform
                         (common-lisp:error ":user-base is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-output-user-base
                         :shape "__string" :location common-lisp:nil
                         :location-name "userBase")
                        (user-role-name :initarg :user-role-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ldap-server-metadata-output-user-role-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "userRoleName")
                        (user-search-matching :initarg :user-search-matching
                         :initform
                         (common-lisp:error
                          ":user-search-matching is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-user-search-matching
                         :shape "__string" :location common-lisp:nil
                         :location-name "userSearchMatching")
                        (user-search-subtree :initarg :user-search-subtree
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-ldap-server-metadata-output-user-search-subtree
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "userSearchSubtree"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ldap-server-metadata-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ldap-server-metadata-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ldap-server-metadata-output
                    'make-ldap-server-metadata-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosts))
      (common-lisp:list
       (common-lisp:cons "Hosts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-base))
      (common-lisp:list
       (common-lisp:cons "RoleBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-name))
      (common-lisp:list
       (common-lisp:cons "RoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'role-search-matching))
      (common-lisp:list
       (common-lisp:cons "RoleSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-search-subtree))
      (common-lisp:list
       (common-lisp:cons "RoleSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-account-username))
      (common-lisp:list
       (common-lisp:cons "ServiceAccountUsername"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-base))
      (common-lisp:list
       (common-lisp:cons "UserBase"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-role-name))
      (common-lisp:list
       (common-lisp:cons "UserRoleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-search-matching))
      (common-lisp:list
       (common-lisp:cons "UserSearchMatching"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-search-subtree))
      (common-lisp:list
       (common-lisp:cons "UserSearchSubtree"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ldap-server-metadata-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-brokers-output common-lisp:nil
                       ((broker-summaries :initarg :broker-summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-brokers-output-broker-summaries
                         :shape "__listOfBrokerSummary" :location
                         common-lisp:nil :location-name "brokerSummaries")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-brokers-output-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-brokers-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-brokers-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-brokers-output 'make-list-brokers-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-brokers-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-brokers-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-summaries))
      (common-lisp:list
       (common-lisp:cons "BrokerSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-brokers-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-brokers-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-brokers-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-brokers-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-brokers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-brokers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-brokers-request 'make-list-brokers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-brokers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-brokers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-brokers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-brokers-response common-lisp:nil
                       ((broker-summaries :initarg :broker-summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfBrokerSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-brokers-response-broker-summaries
                         :shape "__listOfBrokerSummary" :location
                         common-lisp:nil :location-name "brokerSummaries")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-brokers-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-brokers-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-brokers-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-brokers-response 'make-list-brokers-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-summaries))
      (common-lisp:list
       (common-lisp:cons "BrokerSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-brokers-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configuration-revisions-output common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-revisions-output-configuration-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "configurationId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-output-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-revisions-output-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (revisions :initarg :revisions :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfConfigurationRevision|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-output-revisions
                         :shape "__listOfConfigurationRevision" :location
                         common-lisp:nil :location-name "revisions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-revisions-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-revisions-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-output
                    'make-list-configuration-revisions-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revisions))
      (common-lisp:list
       (common-lisp:cons "Revisions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configuration-revisions-request common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         (common-lisp:error ":configuration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-request-configuration-id
                         :shape "__string" :location "uri" :location-name
                         "configuration-id")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-revisions-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-revisions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-revisions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-request
                    'make-list-configuration-revisions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configuration-revisions-response common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-revisions-response-configuration-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "configurationId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-response-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-revisions-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (revisions :initarg :revisions :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfConfigurationRevision|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-revisions-response-revisions
                         :shape "__listOfConfigurationRevision" :location
                         common-lisp:nil :location-name "revisions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-revisions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-revisions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-revisions-response
                    'make-list-configuration-revisions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-id))
      (common-lisp:list
       (common-lisp:cons "ConfigurationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'revisions))
      (common-lisp:list
       (common-lisp:cons "Revisions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-revisions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configurations-output common-lisp:nil
                       ((configurations :initarg :configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configurations-output-configurations
                         :shape "__listOfConfiguration" :location
                         common-lisp:nil :location-name "configurations")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-configurations-output-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configurations-output-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configurations-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-configurations-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configurations-output
                    'make-list-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configurations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-configurations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configurations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configurations-request
                    'make-list-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configurations-response common-lisp:nil
                       ((configurations :initarg :configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfConfiguration|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configurations-response-configurations
                         :shape "__listOfConfiguration" :location
                         common-lisp:nil :location-name "configurations")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-list-configurations-response-max-results
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configurations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configurations-response
                    'make-list-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configurations))
      (common-lisp:list
       (common-lisp:cons "Configurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-list-tags-response-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-response 'make-list-tags-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tags-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tags-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-users-output common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (max-results :initarg :max-results :initform
                         (common-lisp:error ":max-results is required") :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor struct-shape-list-users-output-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-output-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (users :initarg :users :initform
                         (common-lisp:error ":users is required") :type
                         (common-lisp:or |__listOfUserSummary|
                                         common-lisp:null)
                         :accessor struct-shape-list-users-output-users :shape
                         "__listOfUserSummary" :location common-lisp:nil
                         :location-name "users"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-users-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-users-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-users-output 'make-list-users-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-users-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-users-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-users-request 'make-list-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-users-response common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integerMin5Max100|
                                         common-lisp:null)
                         :accessor struct-shape-list-users-response-max-results
                         :shape "__integerMin5Max100" :location common-lisp:nil
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-users-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (users :initarg :users :initform common-lisp:nil :type
                         (common-lisp:or |__listOfUserSummary|
                                         common-lisp:null)
                         :accessor struct-shape-list-users-response-users
                         :shape "__listOfUserSummary" :location common-lisp:nil
                         :location-name "users"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-users-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-users-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-users-response 'make-list-users-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-users-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-users-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logs common-lisp:nil
                       ((audit :initarg :audit :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-logs-audit :shape "__boolean"
                         :location common-lisp:nil :location-name "audit")
                        (general :initarg :general :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-logs-general :shape "__boolean"
                         :location common-lisp:nil :location-name "general"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logs (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logs
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'logs 'make-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass logs-summary common-lisp:nil
                       ((audit :initarg :audit :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-logs-summary-audit :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "audit")
                        (audit-log-group :initarg :audit-log-group :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-logs-summary-audit-log-group :shape
                         "__string" :location common-lisp:nil :location-name
                         "auditLogGroup")
                        (general :initarg :general :initform
                         (common-lisp:error ":general is required") :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-logs-summary-general :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "general")
                        (general-log-group :initarg :general-log-group
                         :initform
                         (common-lisp:error ":general-log-group is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-logs-summary-general-log-group
                         :shape "__string" :location common-lisp:nil
                         :location-name "generalLogGroup")
                        (pending :initarg :pending :initform common-lisp:nil
                         :type (common-lisp:or pending-logs common-lisp:null)
                         :accessor struct-shape-logs-summary-pending :shape
                         "PendingLogs" :location common-lisp:nil :location-name
                         "pending"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logs-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logs-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'logs-summary 'make-logs-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logs-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logs-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit-log-group))
      (common-lisp:list
       (common-lisp:cons "AuditLogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general-log-group))
      (common-lisp:list
       (common-lisp:cons "GeneralLogGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending))
      (common-lisp:list
       (common-lisp:cons "Pending"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logs-summary))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader not-found-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-error-attribute
                    'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass pending-logs common-lisp:nil
                       ((audit :initarg :audit :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-pending-logs-audit :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "audit")
                        (general :initarg :general :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-pending-logs-general :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "general"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pending-logs
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pending-logs
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'pending-logs 'make-pending-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pending-logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pending-logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit))
      (common-lisp:list
       (common-lisp:cons "Audit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'general))
      (common-lisp:list
       (common-lisp:cons "General"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pending-logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass promote-input common-lisp:nil
                       ((mode :initarg :mode :initform
                         (common-lisp:error ":mode is required") :type
                         (common-lisp:or promote-mode common-lisp:null)
                         :accessor struct-shape-promote-input-mode :shape
                         "PromoteMode" :location common-lisp:nil :location-name
                         "mode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-promote-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'promote-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'promote-input 'make-promote-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input promote-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input promote-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input promote-input))
   common-lisp:nil))
(common-lisp:deftype promote-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass promote-output common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-promote-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-promote-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'promote-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'promote-output 'make-promote-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input promote-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input promote-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input promote-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass promote-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-promote-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (mode :initarg :mode :initform
                         (common-lisp:error ":mode is required") :type
                         (common-lisp:or promote-mode common-lisp:null)
                         :accessor struct-shape-promote-request-mode :shape
                         "PromoteMode" :location common-lisp:nil :location-name
                         "mode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-promote-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'promote-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'promote-request 'make-promote-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input promote-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input promote-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input promote-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass promote-response common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-promote-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-promote-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'promote-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'promote-response 'make-promote-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input promote-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input promote-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input promote-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reboot-broker-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-reboot-broker-request-broker-id :shape
                         "__string" :location "uri" :location-name
                         "broker-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reboot-broker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reboot-broker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reboot-broker-request 'make-reboot-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reboot-broker-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reboot-broker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reboot-broker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reboot-broker-response 'make-reboot-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          reboot-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sanitization-warning common-lisp:nil
                       ((attribute-name :initarg :attribute-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-sanitization-warning-attribute-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "attributeName")
                        (element-name :initarg :element-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-sanitization-warning-element-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "elementName")
                        (reason :initarg :reason :initform
                         (common-lisp:error ":reason is required") :type
                         (common-lisp:or sanitization-warning-reason
                                         common-lisp:null)
                         :accessor struct-shape-sanitization-warning-reason
                         :shape "SanitizationWarningReason" :location
                         common-lisp:nil :location-name "reason"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sanitization-warning
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sanitization-warning
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sanitization-warning 'make-sanitization-warning))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sanitization-warning))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sanitization-warning))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-name))
      (common-lisp:list
       (common-lisp:cons "AttributeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'element-name))
      (common-lisp:list
       (common-lisp:cons "ElementName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sanitization-warning))
   common-lisp:nil))
(common-lisp:deftype sanitization-warning-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tags common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tags-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tags (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tags
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (mq-error)
     ((error-attribute :initarg :error-attribute :initform common-lisp:nil
       :reader unauthorized-exception-error-attribute)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception
                    'unauthorized-exception-error-attribute
                    'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-broker-input common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-configuration :shape
                         "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-input-engine-version :shape
                         "__string" :location common-lisp:nil :location-name
                         "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-input-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-ldap-server-metadata
                         :shape "LdapServerMetadataInput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-update-broker-input-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-input-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-broker-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-broker-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-broker-input 'make-update-broker-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-broker-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-broker-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-broker-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-broker-output common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-output-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-configuration :shape
                         "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (data-replication-metadata :initarg
                         :data-replication-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "dataReplicationMetadata")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-output-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-output-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-update-broker-output-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (pending-data-replication-metadata :initarg
                         :pending-data-replication-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-pending-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingDataReplicationMetadata")
                        (pending-data-replication-mode :initarg
                         :pending-data-replication-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-pending-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "pendingDataReplicationMode")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-output-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-broker-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-broker-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-broker-output 'make-update-broker-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-broker-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-broker-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-broker-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-broker-request common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-configuration
                         :shape "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-request-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-request-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-ldap-server-metadata
                         :shape "LdapServerMetadataInput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-update-broker-request-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-request-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-broker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-broker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-broker-request 'make-update-broker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-broker-response common-lisp:nil
                       ((authentication-strategy :initarg
                         :authentication-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or authentication-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-authentication-strategy
                         :shape "AuthenticationStrategy" :location
                         common-lisp:nil :location-name
                         "authenticationStrategy")
                        (auto-minor-version-upgrade :initarg
                         :auto-minor-version-upgrade :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-auto-minor-version-upgrade
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "autoMinorVersionUpgrade")
                        (broker-id :initarg :broker-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-response-broker-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "brokerId")
                        (configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-id common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-configuration
                         :shape "ConfigurationId" :location common-lisp:nil
                         :location-name "configuration")
                        (engine-version :initarg :engine-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-response-engine-version
                         :shape "__string" :location common-lisp:nil
                         :location-name "engineVersion")
                        (host-instance-type :initarg :host-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-broker-response-host-instance-type
                         :shape "__string" :location common-lisp:nil
                         :location-name "hostInstanceType")
                        (ldap-server-metadata :initarg :ldap-server-metadata
                         :initform common-lisp:nil :type
                         (common-lisp:or ldap-server-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-ldap-server-metadata
                         :shape "LdapServerMetadataOutput" :location
                         common-lisp:nil :location-name "ldapServerMetadata")
                        (logs :initarg :logs :initform common-lisp:nil :type
                         (common-lisp:or logs common-lisp:null) :accessor
                         struct-shape-update-broker-response-logs :shape "Logs"
                         :location common-lisp:nil :location-name "logs")
                        (maintenance-window-start-time :initarg
                         :maintenance-window-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or weekly-start-time common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-maintenance-window-start-time
                         :shape "WeeklyStartTime" :location common-lisp:nil
                         :location-name "maintenanceWindowStartTime")
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-security-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "securityGroups")
                        (data-replication-metadata :initarg
                         :data-replication-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "dataReplicationMetadata")
                        (data-replication-mode :initarg :data-replication-mode
                         :initform common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "dataReplicationMode")
                        (pending-data-replication-metadata :initarg
                         :pending-data-replication-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-metadata-output
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-pending-data-replication-metadata
                         :shape "DataReplicationMetadataOutput" :location
                         common-lisp:nil :location-name
                         "pendingDataReplicationMetadata")
                        (pending-data-replication-mode :initarg
                         :pending-data-replication-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or data-replication-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-broker-response-pending-data-replication-mode
                         :shape "DataReplicationMode" :location common-lisp:nil
                         :location-name "pendingDataReplicationMode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-broker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-broker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-broker-response 'make-update-broker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authentication-strategy))
      (common-lisp:list
       (common-lisp:cons "AuthenticationStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-minor-version-upgrade))
      (common-lisp:list
       (common-lisp:cons "AutoMinorVersionUpgrade"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'broker-id))
      (common-lisp:list
       (common-lisp:cons "BrokerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'engine-version))
      (common-lisp:list
       (common-lisp:cons "EngineVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-instance-type))
      (common-lisp:list
       (common-lisp:cons "HostInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ldap-server-metadata))
      (common-lisp:list
       (common-lisp:cons "LdapServerMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logs))
      (common-lisp:list
       (common-lisp:cons "Logs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maintenance-window-start-time))
      (common-lisp:list
       (common-lisp:cons "MaintenanceWindowStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "DataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-metadata))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-data-replication-mode))
      (common-lisp:list
       (common-lisp:cons "PendingDataReplicationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-broker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-input common-lisp:nil
                       ((data :initarg :data :initform
                         (common-lisp:error ":data is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-input-data :shape
                         "__string" :location common-lisp:nil :location-name
                         "data")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-input-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-input
                    'make-update-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-output common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-output-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created :initarg :created :initform
                         (common-lisp:error ":created is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-output-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-output-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (latest-revision :initarg :latest-revision :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-output-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-output-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfSanitizationWarning|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-output-warnings
                         :shape "__listOfSanitizationWarning" :location
                         common-lisp:nil :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-output
                    'make-update-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-request common-lisp:nil
                       ((configuration-id :initarg :configuration-id :initform
                         (common-lisp:error ":configuration-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-request-configuration-id
                         :shape "__string" :location "uri" :location-name
                         "configuration-id")
                        (data :initarg :data :initform
                         (common-lisp:error ":data is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-request-data :shape
                         "__string" :location common-lisp:nil :location-name
                         "data")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-request
                    'make-update-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created :initarg :created :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-response-created
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name "created")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (latest-revision :initarg :latest-revision :initform
                         common-lisp:nil :type
                         (common-lisp:or configuration-revision
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-response-latest-revision
                         :shape "ConfigurationRevision" :location
                         common-lisp:nil :location-name "latestRevision")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-configuration-response-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "name")
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfSanitizationWarning|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-response-warnings
                         :shape "__listOfSanitizationWarning" :location
                         common-lisp:nil :location-name "warnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-response
                    'make-update-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created))
      (common-lisp:list
       (common-lisp:cons "Created"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-revision))
      (common-lisp:list
       (common-lisp:cons "LatestRevision"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "Warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-input common-lisp:nil
                       ((console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-user-input-console-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-user-input-groups :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (password :initarg :password :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-update-user-input-password
                         :shape "__string" :location common-lisp:nil
                         :location-name "password")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-user-input-replication-user :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-input 'make-update-user-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-request common-lisp:nil
                       ((broker-id :initarg :broker-id :initform
                         (common-lisp:error ":broker-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-user-request-broker-id :shape
                         "__string" :location "uri" :location-name "broker-id")
                        (console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-user-request-console-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-user-request-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (password :initarg :password :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-update-user-request-password
                         :shape "__string" :location common-lisp:nil
                         :location-name "password")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-user-request-username :shape
                         "__string" :location "uri" :location-name "username")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-user-request-replication-user
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-request 'make-update-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-user-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-user-response 'make-update-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass user common-lisp:nil
                       ((console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-user-console-access :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-user-groups :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-password :shape "__string" :location
                         common-lisp:nil :location-name "password")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-username :shape "__string" :location
                         common-lisp:nil :location-name "username")
                        (replication-user :initarg :replication-user :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-user-replication-user :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "replicationUser"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user 'make-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-user))
      (common-lisp:list
       (common-lisp:cons "ReplicationUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass user-pending-changes common-lisp:nil
                       ((console-access :initarg :console-access :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-user-pending-changes-console-access
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "consoleAccess")
                        (groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-user-pending-changes-groups
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "groups")
                        (pending-change :initarg :pending-change :initform
                         (common-lisp:error ":pending-change is required")
                         :type (common-lisp:or change-type common-lisp:null)
                         :accessor
                         struct-shape-user-pending-changes-pending-change
                         :shape "ChangeType" :location common-lisp:nil
                         :location-name "pendingChange"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-pending-changes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-pending-changes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'user-pending-changes 'make-user-pending-changes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-pending-changes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-pending-changes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'console-access))
      (common-lisp:list
       (common-lisp:cons "ConsoleAccess"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-change))
      (common-lisp:list
       (common-lisp:cons "PendingChange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-pending-changes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass user-summary common-lisp:nil
                       ((pending-change :initarg :pending-change :initform
                         common-lisp:nil :type
                         (common-lisp:or change-type common-lisp:null)
                         :accessor struct-shape-user-summary-pending-change
                         :shape "ChangeType" :location common-lisp:nil
                         :location-name "pendingChange")
                        (username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-user-summary-username :shape "__string"
                         :location common-lisp:nil :location-name "username"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user-summary 'make-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pending-change))
      (common-lisp:list
       (common-lisp:cons "PendingChange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass weekly-start-time common-lisp:nil
                       ((day-of-week :initarg :day-of-week :initform
                         (common-lisp:error ":day-of-week is required") :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor struct-shape-weekly-start-time-day-of-week
                         :shape "DayOfWeek" :location common-lisp:nil
                         :location-name "dayOfWeek")
                        (time-of-day :initarg :time-of-day :initform
                         (common-lisp:error ":time-of-day is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-weekly-start-time-time-of-day :shape
                         "__string" :location common-lisp:nil :location-name
                         "timeOfDay")
                        (time-zone :initarg :time-zone :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-weekly-start-time-time-zone :shape
                         "__string" :location common-lisp:nil :location-name
                         "timeZone"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-weekly-start-time
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'weekly-start-time
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'weekly-start-time 'make-weekly-start-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input weekly-start-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input weekly-start-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-of-day))
      (common-lisp:list
       (common-lisp:cons "TimeOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-zone))
      (common-lisp:list
       (common-lisp:cons "TimeZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input weekly-start-time))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__integerMin5Max100| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfActionRequired| ()
   '(trivial-types:proper-list action-required))
 (common-lisp:defun make-__listofactionrequired
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action-required))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfAvailabilityZone| ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun make-__listofavailabilityzone
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerEngineType| ()
   '(trivial-types:proper-list broker-engine-type))
 (common-lisp:defun make-__listofbrokerenginetype
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-engine-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerInstance| ()
   '(trivial-types:proper-list broker-instance))
 (common-lisp:defun make-__listofbrokerinstance
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerInstanceOption| ()
   '(trivial-types:proper-list broker-instance-option))
 (common-lisp:defun make-__listofbrokerinstanceoption
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-instance-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfBrokerSummary| ()
   '(trivial-types:proper-list broker-summary))
 (common-lisp:defun make-__listofbrokersummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list broker-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfiguration| ()
   '(trivial-types:proper-list configuration))
 (common-lisp:defun make-__listofconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfigurationId| ()
   '(trivial-types:proper-list configuration-id))
 (common-lisp:defun make-__listofconfigurationid
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfConfigurationRevision| ()
   '(trivial-types:proper-list configuration-revision))
 (common-lisp:defun make-__listofconfigurationrevision
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-revision))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeploymentMode| ()
   '(trivial-types:proper-list deployment-mode))
 (common-lisp:defun make-__listofdeploymentmode
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-mode))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfEngineVersion| ()
   '(trivial-types:proper-list engine-version))
 (common-lisp:defun make-__listofengineversion
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list engine-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfSanitizationWarning| ()
   '(trivial-types:proper-list sanitization-warning))
 (common-lisp:defun make-__listofsanitizationwarning
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sanitization-warning))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUser| () '(trivial-types:proper-list user))
 (common-lisp:defun make-__listofuser
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfUserSummary| ()
   '(trivial-types:proper-list user-summary))
 (common-lisp:defun make-__listofusersummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy
                     auto-minor-version-upgrade broker-name configuration
                     creator-request-id deployment-mode encryption-options
                     engine-type engine-version host-instance-type
                     ldap-server-metadata logs maintenance-window-start-time
                     publicly-accessible security-groups storage-type
                     subnet-ids tags users data-replication-mode
                     data-replication-primary-broker-arn)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy auto-minor-version-upgrade
     broker-name configuration creator-request-id deployment-mode
     encryption-options engine-type engine-version host-instance-type
     ldap-server-metadata logs maintenance-window-start-time
     publicly-accessible security-groups storage-type subnet-ids tags users
     data-replication-mode data-replication-primary-broker-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/brokers"
                                                        "CreateBroker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-broker))
(common-lisp:progn
 (common-lisp:defun create-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy engine-type
                     engine-version name tags)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy engine-type engine-version
     name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/configurations"
                                                        "CreateConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configuration))
(common-lisp:progn
 (common-lisp:defun create-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "CreateTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun create-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id console-access groups password
                     username replication-user)
   (common-lisp:declare
    (common-lisp:ignorable broker-id console-access groups password username
     replication-user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "CreateUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-user))
(common-lisp:progn
 (common-lisp:defun delete-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "DeleteBroker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-broker))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "DeleteTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun delete-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id username)
   (common-lisp:declare (common-lisp:ignorable broker-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "DeleteUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-user))
(common-lisp:progn
 (common-lisp:defun describe-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "DescribeBroker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-broker))
(common-lisp:progn
 (common-lisp:defun describe-broker-engine-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key engine-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable engine-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-broker-engine-types-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/broker-engine-types"
                                                        "DescribeBrokerEngineTypes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-broker-engine-types))
(common-lisp:progn
 (common-lisp:defun describe-broker-instance-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key engine-type host-instance-type
                     max-results next-token storage-type)
   (common-lisp:declare
    (common-lisp:ignorable engine-type host-instance-type max-results
     next-token storage-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-broker-instance-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/broker-instance-options"
                                                        "DescribeBrokerInstanceOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-broker-instance-options))
(common-lisp:progn
 (common-lisp:defun describe-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id)
   (common-lisp:declare (common-lisp:ignorable configuration-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "DescribeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-configuration))
(common-lisp:progn
 (common-lisp:defun describe-configuration-revision
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id configuration-revision)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id configuration-revision))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-configuration-revision-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A/revisions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-revision))))
                                                        "DescribeConfigurationRevision"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-configuration-revision))
(common-lisp:progn
 (common-lisp:defun describe-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id username)
   (common-lisp:declare (common-lisp:ignorable broker-id username))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "DescribeUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-user))
(common-lisp:progn
 (common-lisp:defun list-brokers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-brokers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/brokers"
                                                        "ListBrokers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-brokers))
(common-lisp:progn
 (common-lisp:defun list-configuration-revisions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-configuration-revisions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A/revisions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "ListConfigurationRevisions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-configuration-revisions))
(common-lisp:progn
 (common-lisp:defun list-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configurations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/configurations"
                                                        "ListConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-configurations))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun list-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable broker-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "ListUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-users))
(common-lisp:progn
 (common-lisp:defun promote
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id mode)
   (common-lisp:declare (common-lisp:ignorable broker-id mode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-promote-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/promote"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "Promote"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'promote))
(common-lisp:progn
 (common-lisp:defun reboot-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id)
   (common-lisp:declare (common-lisp:ignorable broker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/reboot"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "RebootBroker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'reboot-broker))
(common-lisp:progn
 (common-lisp:defun update-broker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authentication-strategy
                     auto-minor-version-upgrade broker-id configuration
                     engine-version host-instance-type ldap-server-metadata
                     logs maintenance-window-start-time security-groups
                     data-replication-mode)
   (common-lisp:declare
    (common-lisp:ignorable authentication-strategy auto-minor-version-upgrade
     broker-id configuration engine-version host-instance-type
     ldap-server-metadata logs maintenance-window-start-time security-groups
     data-replication-mode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-broker-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))))
                                                        "UpdateBroker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-broker))
(common-lisp:progn
 (common-lisp:defun update-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-id data description)
   (common-lisp:declare
    (common-lisp:ignorable configuration-id data description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-configuration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/configurations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-id))))
                                                        "UpdateConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-configuration))
(common-lisp:progn
 (common-lisp:defun update-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key broker-id console-access groups password
                     username replication-user)
   (common-lisp:declare
    (common-lisp:ignorable broker-id console-access groups password username
     replication-user))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mq-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/brokers/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'broker-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'username))))
                                                        "UpdateUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-user))
