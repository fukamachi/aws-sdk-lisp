;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cleanroomsml/api
  (:use)
  (:nicknames #:aws/cleanroomsml)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/cleanroomsml/api)
(common-lisp:progn
 (common-lisp:define-condition cleanroomsml-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'cleanroomsml-error))
(common-lisp:progn
 (common-lisp:defclass cleanroomsml-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "cleanroomsml" :api-version
                        "2023-09-06" :host-prefix "cleanrooms-ml" :signing-name
                        "cleanrooms-ml" :global-host common-lisp:nil))
 (common-lisp:export 'cleanroomsml-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (cleanroomsml-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audience-destination common-lisp:nil
                       ((s3destination :initarg :s3destination :initform
                         (common-lisp:error ":s3destination is required") :type
                         (common-lisp:or s3config-map common-lisp:null)
                         :accessor
                         struct-shape-audience-destination-s3destination :shape
                         "S3ConfigMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-destination 'make-audience-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audience-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audience-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audience-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype audience-export-job-list ()
   '(trivial-types:proper-list audience-export-job-summary))
 (common-lisp:defun make-audience-export-job-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            audience-export-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype audience-export-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audience-export-job-summary common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (audience-size :initarg :audience-size :initform
                         (common-lisp:error ":audiencesize is required") :type
                         (common-lisp:or audience-size common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-audience-size
                         :shape "AudienceSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-name :shape
                         "NameString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (output-location :initarg :output-location :initform
                         common-lisp:nil :type
                         (common-lisp:or s3path common-lisp:null) :accessor
                         struct-shape-audience-export-job-summary-output-location
                         :shape "S3Path" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or audience-export-job-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-status :shape
                         "AudienceExportJobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-details :initarg :status-details :initform
                         common-lisp:nil :type
                         (common-lisp:or status-details common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-status-details
                         :shape "StatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-export-job-summary-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-export-job-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-export-job-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-export-job-summary
                    'make-audience-export-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-export-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-export-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-job-arn))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-size))
      (common-lisp:list
       (common-lisp:cons "audienceSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-location))
      (common-lisp:list
       (common-lisp:cons "outputLocation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-export-job-summary))
   common-lisp:nil))
(common-lisp:deftype audience-generation-job-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audience-generation-job-data-source common-lisp:nil
                       ((data-source :initarg :data-source :initform
                         (common-lisp:error ":datasource is required") :type
                         (common-lisp:or s3config-map common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-data-source-data-source
                         :shape "S3ConfigMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-data-source-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-generation-job-data-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'audience-generation-job-data-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-generation-job-data-source
                    'make-audience-generation-job-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-data-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-data-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-source))
      (common-lisp:list
       (common-lisp:cons "dataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-data-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype audience-generation-job-list ()
   '(trivial-types:proper-list audience-generation-job-summary))
 (common-lisp:defun make-audience-generation-job-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            audience-generation-job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype audience-generation-job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audience-generation-job-summary common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (collaboration-id :initarg :collaboration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-audience-generation-job-summary-collaboration-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (started-by :initarg :started-by :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-audience-generation-job-summary-started-by
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or audience-generation-job-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-status
                         :shape "AudienceGenerationJobStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-generation-job-summary-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-generation-job-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'audience-generation-job-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-generation-job-summary
                    'make-audience-generation-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-job-arn))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collaboration-id))
      (common-lisp:list
       (common-lisp:cons "collaborationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-generation-job-summary))
   common-lisp:nil))
(common-lisp:deftype audience-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype audience-model-list ()
   '(trivial-types:proper-list audience-model-summary))
 (common-lisp:defun make-audience-model-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list audience-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass audience-model-metric common-lisp:nil
                       ((for-top-kitem-predictions :initarg
                         :for-top-kitem-predictions :initform
                         (common-lisp:error
                          ":fortopkitempredictions is required")
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-audience-model-metric-for-top-kitem-predictions
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or audience-model-metric-type
                                         common-lisp:null)
                         :accessor struct-shape-audience-model-metric-type
                         :shape "AudienceModelMetricType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-audience-model-metric-value :shape
                         "Double" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-model-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-model-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-model-metric 'make-audience-model-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'for-top-kitem-predictions))
      (common-lisp:list
       (common-lisp:cons "forTopKItemPredictions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-metric))
   common-lisp:nil))
(common-lisp:deftype audience-model-metric-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype audience-model-metrics ()
   '(trivial-types:proper-list audience-model-metric))
 (common-lisp:defun make-audience-model-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list audience-model-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype audience-model-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audience-model-summary common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-audience-model-summary-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-model-summary-create-time :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-audience-model-summary-description :shape
                         "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor struct-shape-audience-model-summary-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or audience-model-status
                                         common-lisp:null)
                         :accessor struct-shape-audience-model-summary-status
                         :shape "AudienceModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-audience-model-summary-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-audience-model-summary-update-time :shape
                         "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-model-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-model-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-model-summary 'make-audience-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-model-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass audience-quality-metrics common-lisp:nil
                       ((relevance-metrics :initarg :relevance-metrics
                         :initform
                         (common-lisp:error ":relevancemetrics is required")
                         :type
                         (common-lisp:or relevance-metrics common-lisp:null)
                         :accessor
                         struct-shape-audience-quality-metrics-relevance-metrics
                         :shape "RelevanceMetrics" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-quality-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-quality-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-quality-metrics 'make-audience-quality-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audience-quality-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audience-quality-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relevance-metrics))
      (common-lisp:list
       (common-lisp:cons "relevanceMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audience-quality-metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass audience-size common-lisp:nil
                       ((type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or audience-size-type common-lisp:null)
                         :accessor struct-shape-audience-size-type :shape
                         "AudienceSizeType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or audience-size-value common-lisp:null)
                         :accessor struct-shape-audience-size-value :shape
                         "AudienceSizeValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-size
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-size
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'audience-size 'make-audience-size))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audience-size))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audience-size))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audience-size))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype audience-size-bins ()
   '(trivial-types:proper-list audience-size-value))
 (common-lisp:defun make-audience-size-bins
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list audience-size-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass audience-size-config common-lisp:nil
                       ((audience-size-bins :initarg :audience-size-bins
                         :initform
                         (common-lisp:error ":audiencesizebins is required")
                         :type
                         (common-lisp:or audience-size-bins common-lisp:null)
                         :accessor
                         struct-shape-audience-size-config-audience-size-bins
                         :shape "AudienceSizeBins" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audience-size-type :initarg :audience-size-type
                         :initform
                         (common-lisp:error ":audiencesizetype is required")
                         :type
                         (common-lisp:or audience-size-type common-lisp:null)
                         :accessor
                         struct-shape-audience-size-config-audience-size-type
                         :shape "AudienceSizeType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audience-size-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'audience-size-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audience-size-config 'make-audience-size-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input audience-size-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input audience-size-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-size-bins))
      (common-lisp:list
       (common-lisp:cons "audienceSizeBins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-size-type))
      (common-lisp:list
       (common-lisp:cons "audienceSizeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input audience-size-config))
   common-lisp:nil))
(common-lisp:deftype audience-size-type () 'common-lisp:string)
(common-lisp:deftype audience-size-value () 'common-lisp:integer)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype column-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass column-schema common-lisp:nil
                       ((column-name :initarg :column-name :initform
                         (common-lisp:error ":columnname is required") :type
                         (common-lisp:or column-name common-lisp:null)
                         :accessor struct-shape-column-schema-column-name
                         :shape "ColumnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (column-types :initarg :column-types :initform
                         (common-lisp:error ":columntypes is required") :type
                         (common-lisp:or column-type-list common-lisp:null)
                         :accessor struct-shape-column-schema-column-types
                         :shape "ColumnTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-column-schema
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'column-schema
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'column-schema 'make-column-schema))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input column-schema))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input column-schema))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column-name))
      (common-lisp:list
       (common-lisp:cons "columnName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'column-types))
      (common-lisp:list
       (common-lisp:cons "columnTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input column-schema))
   common-lisp:nil))
(common-lisp:deftype column-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype column-type-list ()
   '(trivial-types:proper-list column-type))
 (common-lisp:defun make-column-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype configured-audience-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configured-audience-model-list ()
   '(trivial-types:proper-list configured-audience-model-summary))
 (common-lisp:defun make-configured-audience-model-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            configured-audience-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass configured-audience-model-output-config common-lisp:nil
                       ((destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or audience-destination common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-output-config-destination
                         :shape "AudienceDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-output-config-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configured-audience-model-output-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configured-audience-model-output-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configured-audience-model-output-config
                    'make-configured-audience-model-output-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-output-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-output-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-output-config))
   common-lisp:nil))
(common-lisp:deftype configured-audience-model-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass configured-audience-model-summary common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-config :initarg :output-config :initform
                         (common-lisp:error ":outputconfig is required") :type
                         (common-lisp:or
                          configured-audience-model-output-config
                          common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-output-config
                         :shape "ConfiguredAudienceModelOutputConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or configured-audience-model-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-status
                         :shape "ConfiguredAudienceModelStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-configured-audience-model-summary-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configured-audience-model-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'configured-audience-model-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configured-audience-model-summary
                    'make-configured-audience-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "outputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configured-audience-model-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (cleanroomsml-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-audience-model-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key-arn :initarg :kms-key-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-kms-key-arn
                         :shape "KmsKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-name :shape
                         "NameString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-audience-model-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (training-data-end-time :initarg
                         :training-data-end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-training-data-end-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-data-start-time :initarg
                         :training-data-start-time :initform common-lisp:nil
                         :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-training-data-start-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-request-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-audience-model-request
                    'make-create-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-end-time))
      (common-lisp:list
       (common-lisp:cons "trainingDataEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-start-time))
      (common-lisp:list
       (common-lisp:cons "trainingDataStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-audience-model-response common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-audience-model-response-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-audience-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-audience-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-audience-model-response
                    'make-create-audience-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-audience-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configured-audience-model-request common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audience-size-config :initarg :audience-size-config
                         :initform common-lisp:nil :type
                         (common-lisp:or audience-size-config common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-audience-size-config
                         :shape "AudienceSizeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-resource-tag-on-create-policy :initarg
                         :child-resource-tag-on-create-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-on-create-policy common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-child-resource-tag-on-create-policy
                         :shape "TagOnCreatePolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-matching-seed-size :initarg
                         :min-matching-seed-size :initform common-lisp:nil
                         :type
                         (common-lisp:or min-matching-seed-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-min-matching-seed-size
                         :shape "MinMatchingSeedSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-config :initarg :output-config :initform
                         (common-lisp:error ":outputconfig is required") :type
                         (common-lisp:or
                          configured-audience-model-output-config
                          common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-output-config
                         :shape "ConfiguredAudienceModelOutputConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (shared-audience-metrics :initarg
                         :shared-audience-metrics :initform
                         (common-lisp:error
                          ":sharedaudiencemetrics is required")
                         :type (common-lisp:or metrics-list common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-request-shared-audience-metrics
                         :shape "MetricsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-configured-audience-model-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configured-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configured-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configured-audience-model-request
                    'make-create-configured-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-size-config))
      (common-lisp:list
       (common-lisp:cons "audienceSizeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'child-resource-tag-on-create-policy))
      (common-lisp:list
       (common-lisp:cons "childResourceTagOnCreatePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-matching-seed-size))
      (common-lisp:list
       (common-lisp:cons "minMatchingSeedSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "outputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'shared-audience-metrics))
      (common-lisp:list
       (common-lisp:cons "sharedAudienceMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configured-audience-model-response
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configured-audience-model-response-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configured-audience-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configured-audience-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configured-audience-model-response
                    'make-create-configured-audience-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configured-audience-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-training-dataset-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-create-training-dataset-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-create-training-dataset-request-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-training-dataset-request-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-training-dataset-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-data :initarg :training-data :initform
                         (common-lisp:error ":trainingdata is required") :type
                         (common-lisp:or
                          create-training-dataset-request-training-data-list
                          common-lisp:null)
                         :accessor
                         struct-shape-create-training-dataset-request-training-data
                         :shape "CreateTrainingDatasetRequestTrainingDataList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-training-dataset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-training-dataset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-training-dataset-request
                    'make-create-training-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-data))
      (common-lisp:list
       (common-lisp:cons "trainingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype create-training-dataset-request-training-data-list ()
   '(trivial-types:proper-list dataset))
 (common-lisp:defun make-create-training-dataset-request-training-data-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-training-dataset-response common-lisp:nil
                       ((training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-create-training-dataset-response-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-training-dataset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-training-dataset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-training-dataset-response
                    'make-create-training-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-training-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data-source common-lisp:nil
                       ((glue-data-source :initarg :glue-data-source :initform
                         (common-lisp:error ":gluedatasource is required")
                         :type
                         (common-lisp:or glue-data-source common-lisp:null)
                         :accessor struct-shape-data-source-glue-data-source
                         :shape "GlueDataSource" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'data-source 'make-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input data-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input data-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'glue-data-source))
      (common-lisp:list
       (common-lisp:cons "glueDataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input data-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset common-lisp:nil
                       ((input-config :initarg :input-config :initform
                         (common-lisp:error ":inputconfig is required") :type
                         (common-lisp:or dataset-input-config common-lisp:null)
                         :accessor struct-shape-dataset-input-config :shape
                         "DatasetInputConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or dataset-type common-lisp:null)
                         :accessor struct-shape-dataset-type :shape
                         "DatasetType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dataset
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dataset 'make-dataset))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-config))
      (common-lisp:list
       (common-lisp:cons "inputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dataset-input-config common-lisp:nil
                       ((data-source :initarg :data-source :initform
                         (common-lisp:error ":datasource is required") :type
                         (common-lisp:or data-source common-lisp:null)
                         :accessor
                         struct-shape-dataset-input-config-data-source :shape
                         "DataSource" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schema :initarg :schema :initform
                         (common-lisp:error ":schema is required") :type
                         (common-lisp:or dataset-input-config-schema-list
                                         common-lisp:null)
                         :accessor struct-shape-dataset-input-config-schema
                         :shape "DatasetInputConfigSchemaList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dataset-input-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dataset-input-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dataset-input-config 'make-dataset-input-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dataset-input-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dataset-input-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-source))
      (common-lisp:list
       (common-lisp:cons "dataSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dataset-input-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dataset-input-config-schema-list ()
   '(trivial-types:proper-list column-schema))
 (common-lisp:defun make-dataset-input-config-schema-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-schema))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype dataset-list () '(trivial-types:proper-list dataset))
 (common-lisp:defun make-dataset-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dataset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-audience-generation-job-request common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-audience-generation-job-request-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location "uri"
                         :location-name "audienceGenerationJobArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-audience-generation-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-audience-generation-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-audience-generation-job-request
                    'make-delete-audience-generation-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-generation-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-generation-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-generation-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-audience-model-request common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-audience-model-request-audience-model-arn
                         :shape "AudienceModelArn" :location "uri"
                         :location-name "audienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-audience-model-request
                    'make-delete-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configured-audience-model-policy-request
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-configured-audience-model-policy-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configured-audience-model-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configured-audience-model-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configured-audience-model-policy-request
                    'make-delete-configured-audience-model-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configured-audience-model-request common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-configured-audience-model-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configured-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configured-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configured-audience-model-request
                    'make-delete-configured-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configured-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-training-dataset-request common-lisp:nil
                       ((training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-training-dataset-request-training-dataset-arn
                         :shape "TrainingDatasetArn" :location "uri"
                         :location-name "trainingDatasetArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-training-dataset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-training-dataset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-training-dataset-request
                    'make-delete-training-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-training-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-training-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-training-dataset-request))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass get-audience-generation-job-request common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-request-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location "uri"
                         :location-name "audienceGenerationJobArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-audience-generation-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-audience-generation-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-audience-generation-job-request
                    'make-get-audience-generation-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-audience-generation-job-response common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (collaboration-id :initarg :collaboration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-audience-generation-job-response-collaboration-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-seed-in-output :initarg
                         :include-seed-in-output :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-include-seed-in-output
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or audience-quality-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-metrics
                         :shape "AudienceQualityMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (seed-audience :initarg :seed-audience :initform
                         common-lisp:nil :type
                         (common-lisp:or audience-generation-job-data-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-seed-audience
                         :shape "AudienceGenerationJobDataSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (started-by :initarg :started-by :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-get-audience-generation-job-response-started-by
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or audience-generation-job-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-status
                         :shape "AudienceGenerationJobStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status-details :initarg :status-details :initform
                         common-lisp:nil :type
                         (common-lisp:or status-details common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-status-details
                         :shape "StatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-audience-generation-job-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-generation-job-response-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-audience-generation-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-audience-generation-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-audience-generation-job-response
                    'make-get-audience-generation-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-job-arn))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collaboration-id))
      (common-lisp:list
       (common-lisp:cons "collaborationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-seed-in-output))
      (common-lisp:list
       (common-lisp:cons "includeSeedInOutput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seed-audience))
      (common-lisp:list
       (common-lisp:cons "seedAudience"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-by))
      (common-lisp:list
       (common-lisp:cons "startedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-generation-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-audience-model-request common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-request-audience-model-arn
                         :shape "AudienceModelArn" :location "uri"
                         :location-name "audienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-audience-model-request
                    'make-get-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-audience-model-response common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key-arn :initarg :kms-key-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-arn common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-kms-key-arn
                         :shape "KmsKeyArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or audience-model-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-metrics
                         :shape "AudienceModelMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-name :shape
                         "NameString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or audience-model-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-status :shape
                         "AudienceModelStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-details :initarg :status-details :initform
                         common-lisp:nil :type
                         (common-lisp:or status-details common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-status-details
                         :shape "StatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-audience-model-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (training-data-end-time :initarg
                         :training-data-end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-training-data-end-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-data-start-time :initarg
                         :training-data-start-time :initform common-lisp:nil
                         :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-training-data-start-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-audience-model-response-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-audience-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-audience-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-audience-model-response
                    'make-get-audience-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-arn))
      (common-lisp:list
       (common-lisp:cons "kmsKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-details))
      (common-lisp:list
       (common-lisp:cons "statusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-end-time))
      (common-lisp:list
       (common-lisp:cons "trainingDataEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-start-time))
      (common-lisp:list
       (common-lisp:cons "trainingDataStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-audience-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configured-audience-model-policy-request
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-policy-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configured-audience-model-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configured-audience-model-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configured-audience-model-policy-request
                    'make-get-configured-audience-model-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configured-audience-model-policy-response
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-policy-response-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (configured-audience-model-policy :initarg
                         :configured-audience-model-policy :initform
                         (common-lisp:error
                          ":configuredaudiencemodelpolicy is required")
                         :type
                         (common-lisp:or resource-policy common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-policy-response-configured-audience-model-policy
                         :shape "ResourcePolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-hash :initarg :policy-hash :initform
                         (common-lisp:error ":policyhash is required") :type
                         (common-lisp:or hash common-lisp:null) :accessor
                         struct-shape-get-configured-audience-model-policy-response-policy-hash
                         :shape "Hash" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configured-audience-model-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configured-audience-model-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configured-audience-model-policy-response
                    'make-get-configured-audience-model-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-policy))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-hash))
      (common-lisp:list
       (common-lisp:cons "policyHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configured-audience-model-request common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configured-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configured-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configured-audience-model-request
                    'make-get-configured-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configured-audience-model-response common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform
                         (common-lisp:error ":audiencemodelarn is required")
                         :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audience-size-config :initarg :audience-size-config
                         :initform common-lisp:nil :type
                         (common-lisp:or audience-size-config common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-audience-size-config
                         :shape "AudienceSizeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (child-resource-tag-on-create-policy :initarg
                         :child-resource-tag-on-create-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-on-create-policy common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-child-resource-tag-on-create-policy
                         :shape "TagOnCreatePolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-matching-seed-size :initarg
                         :min-matching-seed-size :initform common-lisp:nil
                         :type
                         (common-lisp:or min-matching-seed-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-min-matching-seed-size
                         :shape "MinMatchingSeedSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-config :initarg :output-config :initform
                         (common-lisp:error ":outputconfig is required") :type
                         (common-lisp:or
                          configured-audience-model-output-config
                          common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-output-config
                         :shape "ConfiguredAudienceModelOutputConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (shared-audience-metrics :initarg
                         :shared-audience-metrics :initform
                         (common-lisp:error
                          ":sharedaudiencemetrics is required")
                         :type (common-lisp:or metrics-list common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-shared-audience-metrics
                         :shape "MetricsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or configured-audience-model-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-status
                         :shape "ConfiguredAudienceModelStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-configured-audience-model-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configured-audience-model-response-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configured-audience-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configured-audience-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configured-audience-model-response
                    'make-get-configured-audience-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-size-config))
      (common-lisp:list
       (common-lisp:cons "audienceSizeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'child-resource-tag-on-create-policy))
      (common-lisp:list
       (common-lisp:cons "childResourceTagOnCreatePolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-matching-seed-size))
      (common-lisp:list
       (common-lisp:cons "minMatchingSeedSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "outputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'shared-audience-metrics))
      (common-lisp:list
       (common-lisp:cons "sharedAudienceMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configured-audience-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-training-dataset-request common-lisp:nil
                       ((training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-request-training-dataset-arn
                         :shape "TrainingDatasetArn" :location "uri"
                         :location-name "trainingDatasetArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-training-dataset-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-training-dataset-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-training-dataset-request
                    'make-get-training-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-training-dataset-response common-lisp:nil
                       ((create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-name :shape
                         "NameString" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or training-dataset-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-status
                         :shape "TrainingDatasetStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-training-dataset-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (training-data :initarg :training-data :initform
                         (common-lisp:error ":trainingdata is required") :type
                         (common-lisp:or dataset-list common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-training-data
                         :shape "DatasetList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-training-dataset-response-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-training-dataset-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-training-dataset-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-training-dataset-response
                    'make-get-training-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-data))
      (common-lisp:list
       (common-lisp:cons "trainingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-training-dataset-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass glue-data-source common-lisp:nil
                       ((catalog-id :initarg :catalog-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-glue-data-source-catalog-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (database-name :initarg :database-name :initform
                         (common-lisp:error ":databasename is required") :type
                         (common-lisp:or glue-database-name common-lisp:null)
                         :accessor struct-shape-glue-data-source-database-name
                         :shape "GlueDatabaseName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (table-name :initarg :table-name :initform
                         (common-lisp:error ":tablename is required") :type
                         (common-lisp:or glue-table-name common-lisp:null)
                         :accessor struct-shape-glue-data-source-table-name
                         :shape "GlueTableName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-glue-data-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'glue-data-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'glue-data-source 'make-glue-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input glue-data-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input glue-data-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'catalog-id))
      (common-lisp:list
       (common-lisp:cons "catalogId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database-name))
      (common-lisp:list
       (common-lisp:cons "databaseName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "tableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input glue-data-source))
   common-lisp:nil))
(common-lisp:deftype glue-database-name () 'common-lisp:string)
(common-lisp:deftype glue-table-name () 'common-lisp:string)
(common-lisp:deftype hash () 'common-lisp:string)
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype kms-key-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-audience-export-jobs-request common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-audience-export-jobs-request-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         "querystring" :location-name
                         "audienceGenerationJobArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-audience-export-jobs-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-export-jobs-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-export-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-audience-export-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-export-jobs-request
                    'make-list-audience-export-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-audience-export-jobs-response common-lisp:nil
                       ((audience-export-jobs :initarg :audience-export-jobs
                         :initform
                         (common-lisp:error ":audienceexportjobs is required")
                         :type
                         (common-lisp:or audience-export-job-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-audience-export-jobs-response-audience-export-jobs
                         :shape "AudienceExportJobList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-export-jobs-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-export-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-audience-export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-export-jobs-response
                    'make-list-audience-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-export-jobs))
      (common-lisp:list
       (common-lisp:cons "audienceExportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-export-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-audience-generation-jobs-request common-lisp:nil
                       ((collaboration-id :initarg :collaboration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-list-audience-generation-jobs-request-collaboration-id
                         :shape "UUID" :location "querystring" :location-name
                         "collaborationId")
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-audience-generation-jobs-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         "querystring" :location-name
                         "configuredAudienceModelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-audience-generation-jobs-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-generation-jobs-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-generation-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-audience-generation-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-generation-jobs-request
                    'make-list-audience-generation-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-audience-generation-jobs-response common-lisp:nil
                       ((audience-generation-jobs :initarg
                         :audience-generation-jobs :initform
                         (common-lisp:error
                          ":audiencegenerationjobs is required")
                         :type
                         (common-lisp:or audience-generation-job-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-audience-generation-jobs-response-audience-generation-jobs
                         :shape "AudienceGenerationJobList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-generation-jobs-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-generation-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-audience-generation-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-generation-jobs-response
                    'make-list-audience-generation-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-jobs))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-generation-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-audience-models-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-audience-models-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-models-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-audience-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-models-request
                    'make-list-audience-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-audience-models-response common-lisp:nil
                       ((audience-models :initarg :audience-models :initform
                         (common-lisp:error ":audiencemodels is required")
                         :type
                         (common-lisp:or audience-model-list common-lisp:null)
                         :accessor
                         struct-shape-list-audience-models-response-audience-models
                         :shape "AudienceModelList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-audience-models-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-audience-models-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-audience-models-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-audience-models-response
                    'make-list-audience-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-models))
      (common-lisp:list
       (common-lisp:cons "audienceModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-audience-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configured-audience-models-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-configured-audience-models-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-configured-audience-models-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configured-audience-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configured-audience-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configured-audience-models-request
                    'make-list-configured-audience-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configured-audience-models-response common-lisp:nil
                       ((configured-audience-models :initarg
                         :configured-audience-models :initform
                         (common-lisp:error
                          ":configuredaudiencemodels is required")
                         :type
                         (common-lisp:or configured-audience-model-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configured-audience-models-response-configured-audience-models
                         :shape "ConfiguredAudienceModelList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-configured-audience-models-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configured-audience-models-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configured-audience-models-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configured-audience-models-response
                    'make-list-configured-audience-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-models))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configured-audience-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or taggable-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "TaggableArn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-training-datasets-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-training-datasets-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-training-datasets-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-training-datasets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-training-datasets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-training-datasets-request
                    'make-list-training-datasets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-training-datasets-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-training-datasets-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (training-datasets :initarg :training-datasets
                         :initform
                         (common-lisp:error ":trainingdatasets is required")
                         :type
                         (common-lisp:or training-dataset-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-training-datasets-response-training-datasets
                         :shape "TrainingDatasetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-training-datasets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-training-datasets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-training-datasets-response
                    'make-list-training-datasets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'training-datasets))
      (common-lisp:list
       (common-lisp:cons "trainingDatasets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-training-datasets-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype metrics-list ()
   '(trivial-types:proper-list shared-audience-metrics))
 (common-lisp:defun make-metrics-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list shared-audience-metrics))
   aws-sdk/generator/shape::members))
(common-lisp:deftype min-matching-seed-size () 'common-lisp:integer)
(common-lisp:deftype name-string () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype policy-existence-condition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-configured-audience-model-policy-request
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configured-audience-model-policy-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn")
                        (configured-audience-model-policy :initarg
                         :configured-audience-model-policy :initform
                         (common-lisp:error
                          ":configuredaudiencemodelpolicy is required")
                         :type
                         (common-lisp:or resource-policy common-lisp:null)
                         :accessor
                         struct-shape-put-configured-audience-model-policy-request-configured-audience-model-policy
                         :shape "ResourcePolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-existence-condition :initarg
                         :policy-existence-condition :initform common-lisp:nil
                         :type
                         (common-lisp:or policy-existence-condition
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configured-audience-model-policy-request-policy-existence-condition
                         :shape "PolicyExistenceCondition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (previous-policy-hash :initarg :previous-policy-hash
                         :initform common-lisp:nil :type
                         (common-lisp:or hash common-lisp:null) :accessor
                         struct-shape-put-configured-audience-model-policy-request-previous-policy-hash
                         :shape "Hash" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configured-audience-model-policy-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configured-audience-model-policy-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configured-audience-model-policy-request
                    'make-put-configured-audience-model-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-policy))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'policy-existence-condition))
      (common-lisp:list
       (common-lisp:cons "policyExistenceCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'previous-policy-hash))
      (common-lisp:list
       (common-lisp:cons "previousPolicyHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configured-audience-model-policy-response
                       common-lisp:nil
                       ((configured-audience-model-policy :initarg
                         :configured-audience-model-policy :initform
                         (common-lisp:error
                          ":configuredaudiencemodelpolicy is required")
                         :type
                         (common-lisp:or resource-policy common-lisp:null)
                         :accessor
                         struct-shape-put-configured-audience-model-policy-response-configured-audience-model-policy
                         :shape "ResourcePolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy-hash :initarg :policy-hash :initform
                         (common-lisp:error ":policyhash is required") :type
                         (common-lisp:or hash common-lisp:null) :accessor
                         struct-shape-put-configured-audience-model-policy-response-policy-hash
                         :shape "Hash" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configured-audience-model-policy-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configured-audience-model-policy-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configured-audience-model-policy-response
                    'make-put-configured-audience-model-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-policy))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy-hash))
      (common-lisp:list
       (common-lisp:cons "policyHash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configured-audience-model-policy-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass relevance-metric common-lisp:nil
                       ((audience-size :initarg :audience-size :initform
                         (common-lisp:error ":audiencesize is required") :type
                         (common-lisp:or audience-size common-lisp:null)
                         :accessor struct-shape-relevance-metric-audience-size
                         :shape "AudienceSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-relevance-metric-score :shape "Double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-relevance-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'relevance-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'relevance-metric 'make-relevance-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input relevance-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input relevance-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-size))
      (common-lisp:list
       (common-lisp:cons "audienceSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input relevance-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype relevance-metrics ()
   '(trivial-types:proper-list relevance-metric))
 (common-lisp:defun make-relevance-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list relevance-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (cleanroomsml-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3config-map common-lisp:nil
                       ((s3uri :initarg :s3uri :initform
                         (common-lisp:error ":s3uri is required") :type
                         (common-lisp:or s3path common-lisp:null) :accessor
                         struct-shape-s3config-map-s3uri :shape "S3Path"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3config-map
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3config-map
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3config-map 'make-s3config-map))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3config-map))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3config-map))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3uri))
      (common-lisp:list
       (common-lisp:cons "s3Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3config-map))
   common-lisp:nil))
(common-lisp:deftype s3path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (cleanroomsml-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype shared-audience-metrics () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-audience-export-job-request common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-audience-export-job-request-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (audience-size :initarg :audience-size :initform
                         (common-lisp:error ":audiencesize is required") :type
                         (common-lisp:or audience-size common-lisp:null)
                         :accessor
                         struct-shape-start-audience-export-job-request-audience-size
                         :shape "AudienceSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-start-audience-export-job-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-start-audience-export-job-request-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-audience-export-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-audience-export-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-audience-export-job-request
                    'make-start-audience-export-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-export-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-export-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-job-arn))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-size))
      (common-lisp:list
       (common-lisp:cons "audienceSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-export-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-audience-generation-job-request common-lisp:nil
                       ((collaboration-id :initarg :collaboration-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-start-audience-generation-job-request-collaboration-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-seed-in-output :initarg
                         :include-seed-in-output :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-request-include-seed-in-output
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-request-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (seed-audience :initarg :seed-audience :initform
                         (common-lisp:error ":seedaudience is required") :type
                         (common-lisp:or audience-generation-job-data-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-request-seed-audience
                         :shape "AudienceGenerationJobDataSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-start-audience-generation-job-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-audience-generation-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-audience-generation-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-audience-generation-job-request
                    'make-start-audience-generation-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collaboration-id))
      (common-lisp:list
       (common-lisp:cons "collaborationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-seed-in-output))
      (common-lisp:list
       (common-lisp:cons "includeSeedInOutput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seed-audience))
      (common-lisp:list
       (common-lisp:cons "seedAudience"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-audience-generation-job-response common-lisp:nil
                       ((audience-generation-job-arn :initarg
                         :audience-generation-job-arn :initform
                         (common-lisp:error
                          ":audiencegenerationjobarn is required")
                         :type
                         (common-lisp:or audience-generation-job-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-audience-generation-job-response-audience-generation-job-arn
                         :shape "AudienceGenerationJobArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-audience-generation-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-audience-generation-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-audience-generation-job-response
                    'make-start-audience-generation-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-generation-job-arn))
      (common-lisp:list
       (common-lisp:cons "audienceGenerationJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-audience-generation-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass status-details common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-status-details-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-status-details-status-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-status-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'status-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'status-details 'make-status-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input status-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input status-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input status-details))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype synthetic-timestamp-date-time () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype tag-on-create-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or taggable-arn common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "TaggableArn" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-arn () 'common-lisp:string)
(common-lisp:deftype training-dataset-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype training-dataset-list ()
   '(trivial-types:proper-list training-dataset-summary))
 (common-lisp:defun make-training-dataset-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            training-dataset-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype training-dataset-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass training-dataset-summary common-lisp:nil
                       ((create-time :initarg :create-time :initform
                         (common-lisp:error ":createtime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-training-dataset-summary-create-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-training-dataset-summary-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name-string common-lisp:null)
                         :accessor struct-shape-training-dataset-summary-name
                         :shape "NameString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or training-dataset-status
                                         common-lisp:null)
                         :accessor struct-shape-training-dataset-summary-status
                         :shape "TrainingDatasetStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-dataset-arn :initarg :training-dataset-arn
                         :initform
                         (common-lisp:error ":trainingdatasetarn is required")
                         :type
                         (common-lisp:or training-dataset-arn common-lisp:null)
                         :accessor
                         struct-shape-training-dataset-summary-training-dataset-arn
                         :shape "TrainingDatasetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (update-time :initarg :update-time :initform
                         (common-lisp:error ":updatetime is required") :type
                         (common-lisp:or synthetic-timestamp-date-time
                                         common-lisp:null)
                         :accessor
                         struct-shape-training-dataset-summary-update-time
                         :shape "SyntheticTimestamp_date_time" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-training-dataset-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'training-dataset-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'training-dataset-summary 'make-training-dataset-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          training-dataset-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          training-dataset-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-time))
      (common-lisp:list
       (common-lisp:cons "createTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-dataset-arn))
      (common-lisp:list
       (common-lisp:cons "trainingDatasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'update-time))
      (common-lisp:list
       (common-lisp:cons "updateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          training-dataset-summary))
   common-lisp:nil))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or taggable-arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "TaggableArn" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         struct-shape-untag-resource-request-tag-keys :shape
                         "TagKeys" :location "querystring" :location-name
                         "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configured-audience-model-request common-lisp:nil
                       ((audience-model-arn :initarg :audience-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audience-model-arn common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-audience-model-arn
                         :shape "AudienceModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audience-size-config :initarg :audience-size-config
                         :initform common-lisp:nil :type
                         (common-lisp:or audience-size-config common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-audience-size-config
                         :shape "AudienceSizeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location "uri"
                         :location-name "configuredAudienceModelArn")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-description common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-description
                         :shape "ResourceDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-matching-seed-size :initarg
                         :min-matching-seed-size :initform common-lisp:nil
                         :type
                         (common-lisp:or min-matching-seed-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-min-matching-seed-size
                         :shape "MinMatchingSeedSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-config :initarg :output-config :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          configured-audience-model-output-config
                          common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-output-config
                         :shape "ConfiguredAudienceModelOutputConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (shared-audience-metrics :initarg
                         :shared-audience-metrics :initform common-lisp:nil
                         :type (common-lisp:or metrics-list common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-request-shared-audience-metrics
                         :shape "MetricsList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configured-audience-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configured-audience-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configured-audience-model-request
                    'make-update-configured-audience-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "audienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audience-size-config))
      (common-lisp:list
       (common-lisp:cons "audienceSizeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-matching-seed-size))
      (common-lisp:list
       (common-lisp:cons "minMatchingSeedSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-config))
      (common-lisp:list
       (common-lisp:cons "outputConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'shared-audience-metrics))
      (common-lisp:list
       (common-lisp:cons "sharedAudienceMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configured-audience-model-response
                       common-lisp:nil
                       ((configured-audience-model-arn :initarg
                         :configured-audience-model-arn :initform
                         (common-lisp:error
                          ":configuredaudiencemodelarn is required")
                         :type
                         (common-lisp:or configured-audience-model-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configured-audience-model-response-configured-audience-model-arn
                         :shape "ConfiguredAudienceModelArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configured-audience-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configured-audience-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configured-audience-model-response
                    'make-update-configured-audience-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configured-audience-model-arn))
      (common-lisp:list
       (common-lisp:cons "configuredAudienceModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configured-audience-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (cleanroomsml-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:defun create-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description kms-key-arn name tags
                     training-data-end-time training-data-start-time
                     training-dataset-arn)
   (common-lisp:declare
    (common-lisp:ignorable description kms-key-arn name tags
     training-data-end-time training-data-start-time training-dataset-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-audience-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/audience-model"
                                                        "CreateAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-audience-model))
(common-lisp:progn
 (common-lisp:defun create-configured-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-model-arn audience-size-config
                     child-resource-tag-on-create-policy description
                     min-matching-seed-size name output-config
                     shared-audience-metrics tags)
   (common-lisp:declare
    (common-lisp:ignorable audience-model-arn audience-size-config
     child-resource-tag-on-create-policy description min-matching-seed-size
     name output-config shared-audience-metrics tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configured-audience-model-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/configured-audience-model"
                                                        "CreateConfiguredAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configured-audience-model))
(common-lisp:progn
 (common-lisp:defun create-training-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description name role-arn tags
                     training-data)
   (common-lisp:declare
    (common-lisp:ignorable description name role-arn tags training-data))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-training-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/training-dataset"
                                                        "CreateTrainingDataset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-training-dataset))
(common-lisp:progn
 (common-lisp:defun delete-audience-generation-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-generation-job-arn)
   (common-lisp:declare (common-lisp:ignorable audience-generation-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-audience-generation-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audience-generation-job/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'audience-generation-job-arn))))
                                                        "DeleteAudienceGenerationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-audience-generation-job))
(common-lisp:progn
 (common-lisp:defun delete-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-audience-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audience-model/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'audience-model-arn))))
                                                        "DeleteAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-audience-model))
(common-lisp:progn
 (common-lisp:defun delete-configured-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configured-audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable configured-audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configured-audience-model-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "DeleteConfiguredAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configured-audience-model))
(common-lisp:progn
 (common-lisp:defun delete-configured-audience-model-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configured-audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable configured-audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configured-audience-model-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "DeleteConfiguredAudienceModelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configured-audience-model-policy))
(common-lisp:progn
 (common-lisp:defun delete-training-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key training-dataset-arn)
   (common-lisp:declare (common-lisp:ignorable training-dataset-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-training-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/training-dataset/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'training-dataset-arn))))
                                                        "DeleteTrainingDataset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-training-dataset))
(common-lisp:progn
 (common-lisp:defun get-audience-generation-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-generation-job-arn)
   (common-lisp:declare (common-lisp:ignorable audience-generation-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-audience-generation-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audience-generation-job/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'audience-generation-job-arn))))
                                                        "GetAudienceGenerationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-audience-generation-job))
(common-lisp:progn
 (common-lisp:defun get-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-audience-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/audience-model/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'audience-model-arn))))
                                                        "GetAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-audience-model))
(common-lisp:progn
 (common-lisp:defun get-configured-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configured-audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable configured-audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configured-audience-model-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "GetConfiguredAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-configured-audience-model))
(common-lisp:progn
 (common-lisp:defun get-configured-audience-model-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configured-audience-model-arn)
   (common-lisp:declare (common-lisp:ignorable configured-audience-model-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configured-audience-model-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "GetConfiguredAudienceModelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-configured-audience-model-policy))
(common-lisp:progn
 (common-lisp:defun get-training-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key training-dataset-arn)
   (common-lisp:declare (common-lisp:ignorable training-dataset-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-training-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/training-dataset/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'training-dataset-arn))))
                                                        "GetTrainingDataset"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-training-dataset))
(common-lisp:progn
 (common-lisp:defun list-audience-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-generation-job-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable audience-generation-job-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-audience-export-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/audience-export-job"
                                                        "ListAudienceExportJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-audience-export-jobs))
(common-lisp:progn
 (common-lisp:defun list-audience-generation-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key collaboration-id
                     configured-audience-model-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable collaboration-id configured-audience-model-arn
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-audience-generation-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/audience-generation-job"
                                                        "ListAudienceGenerationJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-audience-generation-jobs))
(common-lisp:progn
 (common-lisp:defun list-audience-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-audience-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/audience-model"
                                                        "ListAudienceModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-audience-models))
(common-lisp:progn
 (common-lisp:defun list-configured-audience-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-configured-audience-models-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/configured-audience-model"
                                                        "ListConfiguredAudienceModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-configured-audience-models))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-training-datasets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-training-datasets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/training-dataset"
                                                        "ListTrainingDatasets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-training-datasets))
(common-lisp:progn
 (common-lisp:defun put-configured-audience-model-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configured-audience-model-arn
                     configured-audience-model-policy
                     policy-existence-condition previous-policy-hash)
   (common-lisp:declare
    (common-lisp:ignorable configured-audience-model-arn
     configured-audience-model-policy policy-existence-condition
     previous-policy-hash))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configured-audience-model-policy-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A/policy"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "PutConfiguredAudienceModelPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-configured-audience-model-policy))
(common-lisp:progn
 (common-lisp:defun start-audience-export-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-generation-job-arn audience-size
                     description name)
   (common-lisp:declare
    (common-lisp:ignorable audience-generation-job-arn audience-size
     description name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-audience-export-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/audience-export-job"
                                                        "StartAudienceExportJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-audience-export-job))
(common-lisp:progn
 (common-lisp:defun start-audience-generation-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key collaboration-id
                     configured-audience-model-arn description
                     include-seed-in-output name seed-audience tags)
   (common-lisp:declare
    (common-lisp:ignorable collaboration-id configured-audience-model-arn
     description include-seed-in-output name seed-audience tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-audience-generation-job-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/audience-generation-job"
                                                        "StartAudienceGenerationJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-audience-generation-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-configured-audience-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key audience-model-arn audience-size-config
                     configured-audience-model-arn description
                     min-matching-seed-size output-config
                     shared-audience-metrics)
   (common-lisp:declare
    (common-lisp:ignorable audience-model-arn audience-size-config
     configured-audience-model-arn description min-matching-seed-size
     output-config shared-audience-metrics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configured-audience-model-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'cleanroomsml-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/configured-audience-model/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configured-audience-model-arn))))
                                                        "UpdateConfiguredAudienceModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-configured-audience-model))
