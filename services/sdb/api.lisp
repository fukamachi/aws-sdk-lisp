;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/sdb/api (:use)
                             (:nicknames #:aws/sdb)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sdb/api)
(common-lisp:progn
 (common-lisp:define-condition sdb-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sdb-error))
(common-lisp:progn
 (common-lisp:defclass sdb-request (aws-sdk/query-request:query-request)
                       common-lisp:nil
                       (:default-initargs :service "sdb" :api-version
                        "2009-04-15" :host-prefix "sdb" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'sdb-request))
(common-lisp:defvar *error-map*
  '(("AttributeDoesNotExist" . attribute-does-not-exist)
    ("DuplicateItemName" . duplicate-item-name)
    ("InvalidNextToken" . invalid-next-token)
    ("InvalidNumberPredicates" . invalid-number-predicates)
    ("InvalidNumberValueTests" . invalid-number-value-tests)
    ("InvalidParameterValue" . invalid-parameter-value)
    ("InvalidQueryExpression" . invalid-query-expression)
    ("MissingParameter" . missing-parameter) ("NoSuchDomain" . no-such-domain)
    ("NumberDomainAttributesExceeded" . number-domain-attributes-exceeded)
    ("NumberDomainBytesExceeded" . number-domain-bytes-exceeded)
    ("NumberDomainsExceeded" . number-domains-exceeded)
    ("NumberItemAttributesExceeded" . number-item-attributes-exceeded)
    ("NumberSubmittedAttributesExceeded"
     . number-submitted-attributes-exceeded)
    ("NumberSubmittedItemsExceeded" . number-submitted-items-exceeded)
    ("RequestTimeout" . request-timeout)
    ("TooManyRequestedAttributes" . too-many-requested-attributes)))
(common-lisp:progn
 (common-lisp:defclass attribute common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-attribute-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (alternate-name-encoding :initarg
                         :alternate-name-encoding :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-attribute-alternate-name-encoding :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-attribute-value :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (alternate-value-encoding :initarg
                         :alternate-value-encoding :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-attribute-alternate-value-encoding :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alternate-name-encoding))
      (common-lisp:list
       (common-lisp:cons "AlternateNameEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alternate-value-encoding))
      (common-lisp:list
       (common-lisp:cons "AlternateValueEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition attribute-does-not-exist
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       attribute-does-not-exist-box-usage)))
 (common-lisp:export
  (common-lisp:list 'attribute-does-not-exist
                    'attribute-does-not-exist-box-usage)))
(common-lisp:progn
 (common-lisp:deftype attribute-list () '(trivial-types:proper-list attribute))
 (common-lisp:defun make-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attribute-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun make-attribute-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-delete-attributes-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-delete-attributes-request-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform
                         (common-lisp:error ":items is required") :type
                         (common-lisp:or deletable-item-list common-lisp:null)
                         :accessor
                         struct-shape-batch-delete-attributes-request-items
                         :shape "DeletableItemList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-delete-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-delete-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-delete-attributes-request
                    'make-batch-delete-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-delete-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-put-attributes-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-put-attributes-request-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform
                         (common-lisp:error ":items is required") :type
                         (common-lisp:or replaceable-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-put-attributes-request-items :shape
                         "ReplaceableItemList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-put-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-put-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-put-attributes-request
                    'make-batch-put-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-put-attributes-request))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass create-domain-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-request-domain-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deletable-attribute common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deletable-attribute-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deletable-attribute-value :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deletable-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deletable-attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deletable-attribute 'make-deletable-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deletable-attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deletable-attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deletable-attribute))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deletable-attribute-list ()
   '(trivial-types:proper-list deletable-attribute))
 (common-lisp:defun make-deletable-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deletable-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass deletable-item common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deletable-item-name :shape "String"
                         :location common-lisp:nil :location-name "ItemName")
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or deletable-attribute-list
                                         common-lisp:null)
                         :accessor struct-shape-deletable-item-attributes
                         :shape "DeletableAttributeList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deletable-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deletable-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deletable-item 'make-deletable-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deletable-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deletable-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deletable-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deletable-item-list ()
   '(trivial-types:proper-list deletable-item))
 (common-lisp:defun make-deletable-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deletable-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-attributes-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-attributes-request-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (item-name :initarg :item-name :initform
                         (common-lisp:error ":item-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-attributes-request-item-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or deletable-attribute-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-attributes-request-attributes
                         :shape "DeletableAttributeList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (expected :initarg :expected :initform common-lisp:nil
                         :type
                         (common-lisp:or update-condition common-lisp:null)
                         :accessor
                         struct-shape-delete-attributes-request-expected :shape
                         "UpdateCondition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-attributes-request
                    'make-delete-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-name))
      (common-lisp:list
       (common-lisp:cons "ItemName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expected))
      (common-lisp:list
       (common-lisp:cons "Expected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-domain-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-domain-request-domain-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-domain-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-domain-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-metadata-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-metadata-request-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-metadata-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-metadata-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-metadata-request 'make-domain-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-metadata-result common-lisp:nil
                       ((item-count :initarg :item-count :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-item-count :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (item-names-size-bytes :initarg :item-names-size-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-item-names-size-bytes
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attribute-name-count :initarg :attribute-name-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-attribute-name-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-names-size-bytes :initarg
                         :attribute-names-size-bytes :initform common-lisp:nil
                         :type (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-attribute-names-size-bytes
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attribute-value-count :initarg :attribute-value-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-attribute-value-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attribute-values-size-bytes :initarg
                         :attribute-values-size-bytes :initform common-lisp:nil
                         :type (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-attribute-values-size-bytes
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-domain-metadata-result-timestamp :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-metadata-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-metadata-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-metadata-result 'make-domain-metadata-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-count))
      (common-lisp:list
       (common-lisp:cons "ItemCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'item-names-size-bytes))
      (common-lisp:list
       (common-lisp:cons "ItemNamesSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attribute-name-count))
      (common-lisp:list
       (common-lisp:cons "AttributeNameCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attribute-names-size-bytes))
      (common-lisp:list
       (common-lisp:cons "AttributeNamesSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attribute-value-count))
      (common-lisp:list
       (common-lisp:cons "AttributeValueCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'attribute-values-size-bytes))
      (common-lisp:list
       (common-lisp:cons "AttributeValuesSizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-metadata-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-name-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-domain-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition duplicate-item-name
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       duplicate-item-name-box-usage)))
 (common-lisp:export
  (common-lisp:list 'duplicate-item-name 'duplicate-item-name-box-usage)))
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defclass get-attributes-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-attributes-request-domain-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (item-name :initarg :item-name :initform
                         (common-lisp:error ":item-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-attributes-request-item-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attribute-names :initarg :attribute-names :initform
                         common-lisp:nil :type
                         (common-lisp:or attribute-name-list common-lisp:null)
                         :accessor
                         struct-shape-get-attributes-request-attribute-names
                         :shape "AttributeNameList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (consistent-read :initarg :consistent-read :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-get-attributes-request-consistent-read
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-attributes-request 'make-get-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-name))
      (common-lisp:list
       (common-lisp:cons "ItemName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consistent-read))
      (common-lisp:list
       (common-lisp:cons "ConsistentRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-attributes-result common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or attribute-list common-lisp:null)
                         :accessor
                         struct-shape-get-attributes-result-attributes :shape
                         "AttributeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-attributes-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-attributes-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-attributes-result 'make-get-attributes-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-attributes-result))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition invalid-next-token
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       invalid-next-token-box-usage)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token 'invalid-next-token-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition invalid-number-predicates
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       invalid-number-predicates-box-usage)))
 (common-lisp:export
  (common-lisp:list 'invalid-number-predicates
                    'invalid-number-predicates-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition invalid-number-value-tests
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       invalid-number-value-tests-box-usage)))
 (common-lisp:export
  (common-lisp:list 'invalid-number-value-tests
                    'invalid-number-value-tests-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       invalid-parameter-value-box-usage)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value
                    'invalid-parameter-value-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition invalid-query-expression
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       invalid-query-expression-box-usage)))
 (common-lisp:export
  (common-lisp:list 'invalid-query-expression
                    'invalid-query-expression-box-usage)))
(common-lisp:progn
 (common-lisp:defclass item common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-item-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (alternate-name-encoding :initarg
                         :alternate-name-encoding :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-item-alternate-name-encoding
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or attribute-list common-lisp:null)
                         :accessor struct-shape-item-attributes :shape
                         "AttributeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-item (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'item 'make-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alternate-name-encoding))
      (common-lisp:list
       (common-lisp:cons "AlternateNameEncoding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype item-list () '(trivial-types:proper-list item))
 (common-lisp:defun make-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-domains-request common-lisp:nil
                       ((max-number-of-domains :initarg :max-number-of-domains
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-list-domains-request-max-number-of-domains
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-domains-request-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-domains-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-domains-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-domains-request 'make-list-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-domains-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-number-of-domains))
      (common-lisp:list
       (common-lisp:cons "MaxNumberOfDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-domains-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-domains-result common-lisp:nil
                       ((domain-names :initarg :domain-names :initform
                         common-lisp:nil :type
                         (common-lisp:or domain-name-list common-lisp:null)
                         :accessor
                         struct-shape-list-domains-result-domain-names :shape
                         "DomainNameList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-domains-result-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-domains-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-domains-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-domains-result 'make-list-domains-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-domains-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-domains-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-names))
      (common-lisp:list
       (common-lisp:cons "DomainNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-domains-result))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition missing-parameter
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       missing-parameter-box-usage)))
 (common-lisp:export
  (common-lisp:list 'missing-parameter 'missing-parameter-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition no-such-domain
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       no-such-domain-box-usage)))
 (common-lisp:export
  (common-lisp:list 'no-such-domain 'no-such-domain-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-domain-attributes-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-domain-attributes-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-domain-attributes-exceeded
                    'number-domain-attributes-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-domain-bytes-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-domain-bytes-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-domain-bytes-exceeded
                    'number-domain-bytes-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-domains-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-domains-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-domains-exceeded
                    'number-domains-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-item-attributes-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-item-attributes-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-item-attributes-exceeded
                    'number-item-attributes-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-submitted-attributes-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-submitted-attributes-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-submitted-attributes-exceeded
                    'number-submitted-attributes-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:define-condition number-submitted-items-exceeded
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       number-submitted-items-exceeded-box-usage)))
 (common-lisp:export
  (common-lisp:list 'number-submitted-items-exceeded
                    'number-submitted-items-exceeded-box-usage)))
(common-lisp:progn
 (common-lisp:defclass put-attributes-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-attributes-request-domain-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (item-name :initarg :item-name :initform
                         (common-lisp:error ":item-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-attributes-request-item-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or replaceable-attribute-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-attributes-request-attributes :shape
                         "ReplaceableAttributeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expected :initarg :expected :initform common-lisp:nil
                         :type
                         (common-lisp:or update-condition common-lisp:null)
                         :accessor struct-shape-put-attributes-request-expected
                         :shape "UpdateCondition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-attributes-request 'make-put-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-name))
      (common-lisp:list
       (common-lisp:cons "ItemName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expected))
      (common-lisp:list
       (common-lisp:cons "Expected"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass replaceable-attribute common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-replaceable-attribute-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-replaceable-attribute-value :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (replace :initarg :replace :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-replaceable-attribute-replace
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replaceable-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replaceable-attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'replaceable-attribute 'make-replaceable-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          replaceable-attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          replaceable-attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replace))
      (common-lisp:list
       (common-lisp:cons "Replace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          replaceable-attribute))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype replaceable-attribute-list ()
   '(trivial-types:proper-list replaceable-attribute))
 (common-lisp:defun make-replaceable-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replaceable-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass replaceable-item common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-replaceable-item-name :shape "String"
                         :location common-lisp:nil :location-name "ItemName")
                        (attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or replaceable-attribute-list
                                         common-lisp:null)
                         :accessor struct-shape-replaceable-item-attributes
                         :shape "ReplaceableAttributeList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replaceable-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replaceable-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'replaceable-item 'make-replaceable-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replaceable-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replaceable-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replaceable-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype replaceable-item-list ()
   '(trivial-types:proper-list replaceable-item))
 (common-lisp:defun make-replaceable-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replaceable-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition request-timeout
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       request-timeout-box-usage)))
 (common-lisp:export
  (common-lisp:list 'request-timeout 'request-timeout-box-usage)))
(common-lisp:progn
 (common-lisp:defclass select-request common-lisp:nil
                       ((select-expression :initarg :select-expression
                         :initform
                         (common-lisp:error ":select-expression is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-select-request-select-expression :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-select-request-next-token :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (consistent-read :initarg :consistent-read :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-select-request-consistent-read :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-select-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'select-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'select-request 'make-select-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input select-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input select-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'select-expression))
      (common-lisp:list
       (common-lisp:cons "SelectExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consistent-read))
      (common-lisp:list
       (common-lisp:cons "ConsistentRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input select-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass select-result common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or item-list common-lisp:null) :accessor
                         struct-shape-select-result-items :shape "ItemList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-select-result-next-token :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-select-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'select-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'select-result 'make-select-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input select-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input select-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "Items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input select-result))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requested-attributes
     (sdb-error)
     ((box-usage :initarg :box-usage :initform common-lisp:nil :reader
       too-many-requested-attributes-box-usage)))
 (common-lisp:export
  (common-lisp:list 'too-many-requested-attributes
                    'too-many-requested-attributes-box-usage)))
(common-lisp:progn
 (common-lisp:defclass update-condition common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-condition-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-condition-value :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (exists :initarg :exists :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-update-condition-exists :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-condition 'make-update-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exists))
      (common-lisp:list
       (common-lisp:cons "Exists"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun batch-delete-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name items)
   (common-lisp:declare (common-lisp:ignorable domain-name items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-delete-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchDeleteAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'batch-delete-attributes))
(common-lisp:progn
 (common-lisp:defun batch-put-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name items)
   (common-lisp:declare (common-lisp:ignorable domain-name items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-put-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "BatchPutAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'batch-put-attributes))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateDomain"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun delete-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attributes
                     expected)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attributes expected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'delete-attributes))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteDomain"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun domain-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-domain-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DomainMetadata"))
      common-lisp:nil "DomainMetadataResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'domain-metadata))
(common-lisp:progn
 (common-lisp:defun get-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attribute-names
                     consistent-read)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attribute-names
     consistent-read))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GetAttributes"))
      common-lisp:nil "GetAttributesResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'get-attributes))
(common-lisp:progn
 (common-lisp:defun list-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-number-of-domains next-token)
   (common-lisp:declare
    (common-lisp:ignorable max-number-of-domains next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDomains"))
      common-lisp:nil "ListDomainsResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'list-domains))
(common-lisp:progn
 (common-lisp:defun put-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attributes
                     expected)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attributes expected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutAttributes"))
      common-lisp:nil common-lisp:nil *error-map* common-lisp:nil)))
 (common-lisp:export 'put-attributes))
(common-lisp:progn
 (common-lisp:defun select
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key select-expression next-token
                     consistent-read)
   (common-lisp:declare
    (common-lisp:ignorable select-expression next-token consistent-read))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-select-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sdb-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "Select"))
      common-lisp:nil "SelectResult" *error-map* common-lisp:nil)))
 (common-lisp:export 'select))
