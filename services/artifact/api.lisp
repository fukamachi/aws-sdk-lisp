;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/artifact/api
  (:use)
  (:nicknames #:aws/artifact)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/artifact/api)
(common-lisp:progn
 (common-lisp:define-condition artifact-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'artifact-error))
(common-lisp:progn
 (common-lisp:defclass artifact-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "artifact" :api-version
                        "2018-05-10" :host-prefix "artifact" :signing-name
                        "artifact" :global-host common-lisp:nil))
 (common-lisp:export 'artifact-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype acceptance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass account-settings common-lisp:nil
                       ((notification-subscription-status :initarg
                         :notification-subscription-status :initform
                         common-lisp:nil :type
                         (common-lisp:or notification-subscription-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-settings-notification-subscription-status
                         :shape "NotificationSubscriptionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-settings 'make-account-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-subscription-status))
      (common-lisp:list
       (common-lisp:cons "notificationSubscriptionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-request
                    'make-get-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-settings-response common-lisp:nil
                       ((account-settings :initarg :account-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or account-settings common-lisp:null)
                         :accessor
                         struct-shape-get-account-settings-response-account-settings
                         :shape "AccountSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-settings-response
                    'make-get-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-settings))
      (common-lisp:list
       (common-lisp:cons "accountSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-report-metadata-request common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         (common-lisp:error ":reportid is required") :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-get-report-metadata-request-report-id
                         :shape "ReportId" :location "querystring"
                         :location-name "reportId")
                        (report-version :initarg :report-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version-attribute common-lisp:null)
                         :accessor
                         struct-shape-get-report-metadata-request-report-version
                         :shape "VersionAttribute" :location "querystring"
                         :location-name "reportVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-report-metadata-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-report-metadata-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-report-metadata-request
                    'make-get-report-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-report-metadata-response common-lisp:nil
                       ((report-details :initarg :report-details :initform
                         common-lisp:nil :type
                         (common-lisp:or report-detail common-lisp:null)
                         :accessor
                         struct-shape-get-report-metadata-response-report-details
                         :shape "ReportDetail" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-report-metadata-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-report-metadata-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-report-metadata-response
                    'make-get-report-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-details))
      (common-lisp:list
       (common-lisp:cons "reportDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-report-metadata-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-report-request common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         (common-lisp:error ":reportid is required") :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-get-report-request-report-id :shape
                         "ReportId" :location "querystring" :location-name
                         "reportId")
                        (report-version :initarg :report-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version-attribute common-lisp:null)
                         :accessor
                         struct-shape-get-report-request-report-version :shape
                         "VersionAttribute" :location "querystring"
                         :location-name "reportVersion")
                        (term-token :initarg :term-token :initform
                         (common-lisp:error ":termtoken is required") :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-get-report-request-term-token
                         :shape "ShortStringAttribute" :location "querystring"
                         :location-name "termToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-report-request 'make-get-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-report-response common-lisp:nil
                       ((document-presigned-url :initarg
                         :document-presigned-url :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          get-report-response-document-presigned-url-string
                          common-lisp:null)
                         :accessor
                         struct-shape-get-report-response-document-presigned-url
                         :shape "GetReportResponseDocumentPresignedUrlString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-report-response 'make-get-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-presigned-url))
      (common-lisp:list
       (common-lisp:cons "documentPresignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-report-response))
   common-lisp:nil))
(common-lisp:deftype get-report-response-document-presigned-url-string ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-term-for-report-request common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         (common-lisp:error ":reportid is required") :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-get-term-for-report-request-report-id
                         :shape "ReportId" :location "querystring"
                         :location-name "reportId")
                        (report-version :initarg :report-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version-attribute common-lisp:null)
                         :accessor
                         struct-shape-get-term-for-report-request-report-version
                         :shape "VersionAttribute" :location "querystring"
                         :location-name "reportVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-term-for-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-term-for-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-term-for-report-request
                    'make-get-term-for-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-term-for-report-response common-lisp:nil
                       ((document-presigned-url :initarg
                         :document-presigned-url :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          get-term-for-report-response-document-presigned-url-string
                          common-lisp:null)
                         :accessor
                         struct-shape-get-term-for-report-response-document-presigned-url
                         :shape
                         "GetTermForReportResponseDocumentPresignedUrlString"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (term-token :initarg :term-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-term-for-report-response-term-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-term-for-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-term-for-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-term-for-report-response
                    'make-get-term-for-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'document-presigned-url))
      (common-lisp:list
       (common-lisp:cons "documentPresignedUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'term-token))
      (common-lisp:list
       (common-lisp:cons "termToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-term-for-report-response))
   common-lisp:nil))
(common-lisp:deftype get-term-for-report-response-document-presigned-url-string
                     ()
  'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defclass list-reports-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results-attribute
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-reports-request-max-results :shape
                         "MaxResultsAttribute" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-attribute common-lisp:null)
                         :accessor struct-shape-list-reports-request-next-token
                         :shape "NextTokenAttribute" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-reports-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-reports-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-reports-request 'make-list-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-reports-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-attribute common-lisp:null)
                         :accessor
                         struct-shape-list-reports-response-next-token :shape
                         "NextTokenAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reports :initarg :reports :initform common-lisp:nil
                         :type (common-lisp:or reports-list common-lisp:null)
                         :accessor struct-shape-list-reports-response-reports
                         :shape "ReportsList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-reports-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-reports-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-reports-response 'make-list-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reports))
      (common-lisp:list
       (common-lisp:cons "reports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-reports-response))
   common-lisp:nil))
(common-lisp:deftype long-string-attribute () 'common-lisp:string)
(common-lisp:deftype max-results-attribute () 'common-lisp:integer)
(common-lisp:deftype next-token-attribute () 'common-lisp:string)
(common-lisp:deftype notification-subscription-status () 'common-lisp:string)
(common-lisp:deftype published-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-account-settings-request common-lisp:nil
                       ((notification-subscription-status :initarg
                         :notification-subscription-status :initform
                         common-lisp:nil :type
                         (common-lisp:or notification-subscription-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-account-settings-request-notification-subscription-status
                         :shape "NotificationSubscriptionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-account-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-settings-request
                    'make-put-account-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-subscription-status))
      (common-lisp:list
       (common-lisp:cons "notificationSubscriptionStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-account-settings-response common-lisp:nil
                       ((account-settings :initarg :account-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or account-settings common-lisp:null)
                         :accessor
                         struct-shape-put-account-settings-response-account-settings
                         :shape "AccountSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-account-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-settings-response
                    'make-put-account-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-settings))
      (common-lisp:list
       (common-lisp:cons "accountSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass report-detail common-lisp:nil
                       ((acceptance-type :initarg :acceptance-type :initform
                         common-lisp:nil :type
                         (common-lisp:or acceptance-type common-lisp:null)
                         :accessor struct-shape-report-detail-acceptance-type
                         :shape "AcceptanceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or long-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-arn :shape
                         "LongStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-category :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (company-name :initarg :company-name :initform
                         common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-company-name
                         :shape "ShortStringAttribute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-created-at :shape
                         "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deleted-at :initarg :deleted-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-deleted-at :shape
                         "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or long-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-description
                         :shape "LongStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-report-detail-id :shape "ReportId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-at :initarg :last-modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-last-modified-at
                         :shape "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-name :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-end :initarg :period-end :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-period-end :shape
                         "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-start :initarg :period-start :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-period-start
                         :shape "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-name :initarg :product-name :initform
                         common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-product-name
                         :shape "ShortStringAttribute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sequence-number :initarg :sequence-number :initform
                         common-lisp:nil :type
                         (common-lisp:or sequence-number-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-sequence-number
                         :shape "SequenceNumberAttribute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (series :initarg :series :initform common-lisp:nil
                         :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-series :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or published-state common-lisp:null)
                         :accessor struct-shape-report-detail-state :shape
                         "PublishedState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or status-message common-lisp:null)
                         :accessor struct-shape-report-detail-status-message
                         :shape "StatusMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (term-arn :initarg :term-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or long-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-detail-term-arn :shape
                         "LongStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (upload-state :initarg :upload-state :initform
                         common-lisp:nil :type
                         (common-lisp:or upload-state common-lisp:null)
                         :accessor struct-shape-report-detail-upload-state
                         :shape "UploadState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or version-attribute common-lisp:null)
                         :accessor struct-shape-report-detail-version :shape
                         "VersionAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'report-detail 'make-report-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acceptance-type))
      (common-lisp:list
       (common-lisp:cons "acceptanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'company-name))
      (common-lisp:list
       (common-lisp:cons "companyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deleted-at))
      (common-lisp:list
       (common-lisp:cons "deletedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-at))
      (common-lisp:list
       (common-lisp:cons "lastModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-end))
      (common-lisp:list
       (common-lisp:cons "periodEnd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-start))
      (common-lisp:list
       (common-lisp:cons "periodStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-name))
      (common-lisp:list
       (common-lisp:cons "productName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sequence-number))
      (common-lisp:list
       (common-lisp:cons "sequenceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'series))
      (common-lisp:list
       (common-lisp:cons "series"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'term-arn))
      (common-lisp:list
       (common-lisp:cons "termArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upload-state))
      (common-lisp:list
       (common-lisp:cons "uploadState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-detail))
   common-lisp:nil))
(common-lisp:deftype report-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass report-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or long-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-arn :shape
                         "LongStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-category :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (company-name :initarg :company-name :initform
                         common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-company-name
                         :shape "ShortStringAttribute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or long-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-description
                         :shape "LongStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-report-summary-id :shape "ReportId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-name :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-end :initarg :period-end :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-summary-period-end
                         :shape "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period-start :initarg :period-start :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp-attribute common-lisp:null)
                         :accessor struct-shape-report-summary-period-start
                         :shape "TimestampAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-name :initarg :product-name :initform
                         common-lisp:nil :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-product-name
                         :shape "ShortStringAttribute" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (series :initarg :series :initform common-lisp:nil
                         :type
                         (common-lisp:or short-string-attribute
                                         common-lisp:null)
                         :accessor struct-shape-report-summary-series :shape
                         "ShortStringAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or published-state common-lisp:null)
                         :accessor struct-shape-report-summary-state :shape
                         "PublishedState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or status-message common-lisp:null)
                         :accessor struct-shape-report-summary-status-message
                         :shape "StatusMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (upload-state :initarg :upload-state :initform
                         common-lisp:nil :type
                         (common-lisp:or upload-state common-lisp:null)
                         :accessor struct-shape-report-summary-upload-state
                         :shape "UploadState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type
                         (common-lisp:or version-attribute common-lisp:null)
                         :accessor struct-shape-report-summary-version :shape
                         "VersionAttribute" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'report-summary 'make-report-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'company-name))
      (common-lisp:list
       (common-lisp:cons "companyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-end))
      (common-lisp:list
       (common-lisp:cons "periodEnd"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-start))
      (common-lisp:list
       (common-lisp:cons "periodStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-name))
      (common-lisp:list
       (common-lisp:cons "productName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'series))
      (common-lisp:list
       (common-lisp:cons "series"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upload-state))
      (common-lisp:list
       (common-lisp:cons "uploadState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype reports-list ()
   '(trivial-types:proper-list report-summary))
 (common-lisp:defun make-reports-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list report-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype sequence-number-attribute () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-quota-code
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code)))
(common-lisp:deftype short-string-attribute () 'common-lisp:string)
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (artifact-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       throttling-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-quota-code
                    'throttling-exception-retry-after-seconds
                    'throttling-exception-service-code)))
(common-lisp:deftype timestamp-attribute () 'common-lisp:string)
(common-lisp:deftype upload-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (artifact-error)
     ((field-list :initarg :field-list :initform common-lisp:nil :reader
       validation-exception-field-list)
      (message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-field-list
                    'validation-exception-message
                    'validation-exception-reason)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:deftype version-attribute () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defun get-account-settings ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'artifact-request :method "GET" :path
                                "/v1/account-settings/get" :operation
                                "GetAccountSettings"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-settings))
(common-lisp:progn
 (common-lisp:defun get-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id report-version term-token)
   (common-lisp:declare
    (common-lisp:ignorable report-id report-version term-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-report-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'artifact-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/report/get"
                                                        "GetReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-report))
(common-lisp:progn
 (common-lisp:defun get-report-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id report-version)
   (common-lisp:declare (common-lisp:ignorable report-id report-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-report-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'artifact-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/report/getMetadata"
                                                        "GetReportMetadata"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-report-metadata))
(common-lisp:progn
 (common-lisp:defun get-term-for-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id report-version)
   (common-lisp:declare (common-lisp:ignorable report-id report-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-term-for-report-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'artifact-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/report/getTermForReport"
                                                        "GetTermForReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-term-for-report))
(common-lisp:progn
 (common-lisp:defun list-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-reports-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'artifact-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/report/list"
                                                        "ListReports"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-reports))
(common-lisp:progn
 (common-lisp:defun put-account-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key notification-subscription-status)
   (common-lisp:declare
    (common-lisp:ignorable notification-subscription-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-account-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'artifact-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/account-settings/put"
                                                        "PutAccountSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-account-settings))
