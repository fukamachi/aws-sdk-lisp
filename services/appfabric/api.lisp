;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/appfabric/api (:use)
                             (:nicknames #:aws/appfabric)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/appfabric/api)
(common-lisp:progn
 (common-lisp:define-condition appfabric-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'appfabric-error))
(common-lisp:progn
 (common-lisp:defclass appfabric-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "appfabric" :api-version
                        "2023-05-19" :host-prefix "appfabric" :signing-name
                        "appfabric" :global-host common-lisp:nil))
 (common-lisp:export 'appfabric-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass api-key-credential common-lisp:nil
                       ((api-key :initarg :api-key :initform
                         (common-lisp:error ":apikey is required") :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor struct-shape-api-key-credential-api-key
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-key-credential
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-key-credential
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'api-key-credential 'make-api-key-credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key-credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key-credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "apiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key-credential))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-authorization common-lisp:nil
                       ((app-authorization-arn :initarg :app-authorization-arn
                         :initform
                         (common-lisp:error ":appauthorizationarn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-authorization-app-authorization-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-bundle-arn :initarg :app-bundle-arn :initform
                         (common-lisp:error ":appbundlearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-authorization-app-bundle-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-app-authorization-app :shape "String255"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant :initarg :tenant :initform
                         (common-lisp:error ":tenant is required") :type
                         (common-lisp:or tenant common-lisp:null) :accessor
                         struct-shape-app-authorization-tenant :shape "Tenant"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (auth-type :initarg :auth-type :initform
                         (common-lisp:error ":authtype is required") :type
                         (common-lisp:or auth-type common-lisp:null) :accessor
                         struct-shape-app-authorization-auth-type :shape
                         "AuthType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or app-authorization-status
                                         common-lisp:null)
                         :accessor struct-shape-app-authorization-status :shape
                         "AppAuthorizationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-app-authorization-created-at :shape
                         "DateTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-app-authorization-updated-at :shape
                         "DateTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (persona :initarg :persona :initform common-lisp:nil
                         :type (common-lisp:or persona common-lisp:null)
                         :accessor struct-shape-app-authorization-persona
                         :shape "Persona" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auth-url :initarg :auth-url :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-app-authorization-auth-url
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-authorization
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-authorization
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-authorization 'make-app-authorization))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-authorization))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-authorization))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-authorization-arn))
      (common-lisp:list
       (common-lisp:cons "appAuthorizationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-bundle-arn))
      (common-lisp:list
       (common-lisp:cons "appBundleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant))
      (common-lisp:list
       (common-lisp:cons "tenant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'persona))
      (common-lisp:list
       (common-lisp:cons "persona"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-url))
      (common-lisp:list
       (common-lisp:cons "authUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-authorization))
   common-lisp:nil))
(common-lisp:deftype app-authorization-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass app-authorization-summary common-lisp:nil
                       ((app-authorization-arn :initarg :app-authorization-arn
                         :initform
                         (common-lisp:error ":appauthorizationarn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-authorization-summary-app-authorization-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-bundle-arn :initarg :app-bundle-arn :initform
                         (common-lisp:error ":appbundlearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-authorization-summary-app-bundle-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-app-authorization-summary-app :shape
                         "String255" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant :initarg :tenant :initform
                         (common-lisp:error ":tenant is required") :type
                         (common-lisp:or tenant common-lisp:null) :accessor
                         struct-shape-app-authorization-summary-tenant :shape
                         "Tenant" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or app-authorization-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-authorization-summary-status :shape
                         "AppAuthorizationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-app-authorization-summary-updated-at
                         :shape "DateTime" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-authorization-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-authorization-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-authorization-summary
                    'make-app-authorization-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-authorization-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-authorization-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-authorization-arn))
      (common-lisp:list
       (common-lisp:cons "appAuthorizationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-bundle-arn))
      (common-lisp:list
       (common-lisp:cons "appBundleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant))
      (common-lisp:list
       (common-lisp:cons "tenant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-authorization-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-authorization-summary-list ()
   '(trivial-types:proper-list app-authorization-summary))
 (common-lisp:defun make-app-authorization-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-authorization-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass app-bundle common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-bundle-arn :shape "Arn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (customer-managed-key-arn :initarg
                         :customer-managed-key-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-bundle-customer-managed-key-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-bundle
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-bundle
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'app-bundle 'make-app-bundle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-bundle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-bundle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-key-arn))
      (common-lisp:list
       (common-lisp:cons "customerManagedKeyArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-bundle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass app-bundle-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-app-bundle-summary-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-bundle-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-bundle-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-bundle-summary 'make-app-bundle-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-bundle-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-bundle-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-bundle-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype app-bundle-summary-list ()
   '(trivial-types:proper-list app-bundle-summary))
 (common-lisp:defun make-app-bundle-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list app-bundle-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass audit-log-destination-configuration common-lisp:nil
                       ((destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor
                         struct-shape-audit-log-destination-configuration-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audit-log-destination-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'audit-log-destination-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audit-log-destination-configuration
                    'make-audit-log-destination-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-destination-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-destination-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-destination-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass audit-log-processing-configuration common-lisp:nil
                       ((schema :initarg :schema :initform
                         (common-lisp:error ":schema is required") :type
                         (common-lisp:or schema common-lisp:null) :accessor
                         struct-shape-audit-log-processing-configuration-schema
                         :shape "Schema" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or format common-lisp:null) :accessor
                         struct-shape-audit-log-processing-configuration-format
                         :shape "Format" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-audit-log-processing-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'audit-log-processing-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'audit-log-processing-configuration
                    'make-audit-log-processing-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-processing-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-processing-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          audit-log-processing-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass auth-request common-lisp:nil
                       ((redirect-uri :initarg :redirect-uri :initform
                         (common-lisp:error ":redirecturi is required") :type
                         (common-lisp:or redirect-uri common-lisp:null)
                         :accessor struct-shape-auth-request-redirect-uri
                         :shape "RedirectUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code :initarg :code :initform
                         (common-lisp:error ":code is required") :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor struct-shape-auth-request-code :shape
                         "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auth-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'auth-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'auth-request 'make-auth-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input auth-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input auth-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redirect-uri))
      (common-lisp:list
       (common-lisp:cons "redirectUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input auth-request))
   common-lisp:nil))
(common-lisp:deftype auth-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass batch-get-user-access-tasks-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-batch-get-user-access-tasks-request-app-bundle-identifier
                         :shape "Identifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-id-list :initarg :task-id-list :initform
                         (common-lisp:error ":taskidlist is required") :type
                         (common-lisp:or task-id-list common-lisp:null)
                         :accessor
                         struct-shape-batch-get-user-access-tasks-request-task-id-list
                         :shape "TaskIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-user-access-tasks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-user-access-tasks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-user-access-tasks-request
                    'make-batch-get-user-access-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-bundle-identifier))
      (common-lisp:list
       (common-lisp:cons "appBundleIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-id-list))
      (common-lisp:list
       (common-lisp:cons "taskIdList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-get-user-access-tasks-response common-lisp:nil
                       ((user-access-results-list :initarg
                         :user-access-results-list :initform common-lisp:nil
                         :type
                         (common-lisp:or user-access-results-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-get-user-access-tasks-response-user-access-results-list
                         :shape "UserAccessResultsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-get-user-access-tasks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-get-user-access-tasks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-get-user-access-tasks-response
                    'make-batch-get-user-access-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-access-results-list))
      (common-lisp:list
       (common-lisp:cons "userAccessResultsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-get-user-access-tasks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defclass connect-app-authorization-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-connect-app-authorization-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app-authorization-identifier :initarg
                         :app-authorization-identifier :initform
                         (common-lisp:error
                          ":appauthorizationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-connect-app-authorization-request-app-authorization-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appAuthorizationIdentifier")
                        (auth-request :initarg :auth-request :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-request common-lisp:null)
                         :accessor
                         struct-shape-connect-app-authorization-request-auth-request
                         :shape "AuthRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connect-app-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connect-app-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connect-app-authorization-request
                    'make-connect-app-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-request))
      (common-lisp:list
       (common-lisp:cons "authRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connect-app-authorization-response common-lisp:nil
                       ((app-authorization-summary :initarg
                         :app-authorization-summary :initform
                         (common-lisp:error
                          ":appauthorizationsummary is required")
                         :type
                         (common-lisp:or app-authorization-summary
                                         common-lisp:null)
                         :accessor
                         struct-shape-connect-app-authorization-response-app-authorization-summary
                         :shape "AppAuthorizationSummary" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connect-app-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connect-app-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connect-app-authorization-response
                    'make-connect-app-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-authorization-summary))
      (common-lisp:list
       (common-lisp:cons "appAuthorizationSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connect-app-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-authorization-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-create-app-authorization-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-app
                         :shape "String255" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (credential :initarg :credential :initform
                         (common-lisp:error ":credential is required") :type
                         (common-lisp:or credential common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-credential
                         :shape "Credential" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant :initarg :tenant :initform
                         (common-lisp:error ":tenant is required") :type
                         (common-lisp:or tenant common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-tenant
                         :shape "Tenant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auth-type :initarg :auth-type :initform
                         (common-lisp:error ":authtype is required") :type
                         (common-lisp:or auth-type common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-auth-type
                         :shape "AuthType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-client-token
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-authorization-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-authorization-request
                    'make-create-app-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credential))
      (common-lisp:list
       (common-lisp:cons "credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant))
      (common-lisp:list
       (common-lisp:cons "tenant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-authorization-response common-lisp:nil
                       ((app-authorization :initarg :app-authorization
                         :initform
                         (common-lisp:error ":appauthorization is required")
                         :type
                         (common-lisp:or app-authorization common-lisp:null)
                         :accessor
                         struct-shape-create-app-authorization-response-app-authorization
                         :shape "AppAuthorization" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-app-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-authorization-response
                    'make-create-app-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-authorization))
      (common-lisp:list
       (common-lisp:cons "appAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-bundle-request common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-app-bundle-request-client-token
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (customer-managed-key-identifier :initarg
                         :customer-managed-key-identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         struct-shape-create-app-bundle-request-customer-managed-key-identifier
                         :shape "Identifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-app-bundle-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-bundle-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-bundle-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-bundle-request
                    'make-create-app-bundle-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'customer-managed-key-identifier))
      (common-lisp:list
       (common-lisp:cons "customerManagedKeyIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-app-bundle-response common-lisp:nil
                       ((app-bundle :initarg :app-bundle :initform
                         (common-lisp:error ":appbundle is required") :type
                         (common-lisp:or app-bundle common-lisp:null) :accessor
                         struct-shape-create-app-bundle-response-app-bundle
                         :shape "AppBundle" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-bundle-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-bundle-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-bundle-response
                    'make-create-app-bundle-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-bundle))
      (common-lisp:list
       (common-lisp:cons "appBundle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-app-bundle-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-ingestion-destination-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-destination-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-destination-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (processing-configuration :initarg
                         :processing-configuration :initform
                         (common-lisp:error
                          ":processingconfiguration is required")
                         :type
                         (common-lisp:or processing-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-destination-request-processing-configuration
                         :shape "ProcessingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-destination-request-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-ingestion-destination-request-client-token
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-ingestion-destination-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-ingestion-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-ingestion-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-ingestion-destination-request
                    'make-create-ingestion-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'processing-configuration))
      (common-lisp:list
       (common-lisp:cons "processingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-ingestion-destination-response common-lisp:nil
                       ((ingestion-destination :initarg :ingestion-destination
                         :initform
                         (common-lisp:error
                          ":ingestiondestination is required")
                         :type
                         (common-lisp:or ingestion-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-destination-response-ingestion-destination
                         :shape "IngestionDestination" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-ingestion-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-ingestion-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-ingestion-destination-response
                    'make-create-ingestion-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingestion-destination))
      (common-lisp:list
       (common-lisp:cons "ingestionDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-ingestion-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-create-ingestion-request-app :shape
                         "String255" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenantid is required") :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-request-tenant-id :shape
                         "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingestion-type :initarg :ingestion-type :initform
                         (common-lisp:error ":ingestiontype is required") :type
                         (common-lisp:or ingestion-type common-lisp:null)
                         :accessor
                         struct-shape-create-ingestion-request-ingestion-type
                         :shape "IngestionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-ingestion-request-client-token
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-ingestion-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-ingestion-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-ingestion-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-ingestion-request 'make-create-ingestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "tenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestion-type))
      (common-lisp:list
       (common-lisp:cons "ingestionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-ingestion-response common-lisp:nil
                       ((ingestion :initarg :ingestion :initform
                         (common-lisp:error ":ingestion is required") :type
                         (common-lisp:or ingestion common-lisp:null) :accessor
                         struct-shape-create-ingestion-response-ingestion
                         :shape "Ingestion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-ingestion-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-ingestion-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-ingestion-response
                    'make-create-ingestion-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestion))
      (common-lisp:list
       (common-lisp:cons "ingestion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-ingestion-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass credential common-lisp:nil
                       ((oauth2credential :initarg :oauth2credential :initform
                         common-lisp:nil :type
                         (common-lisp:or oauth2credential common-lisp:null)
                         :accessor struct-shape-credential-oauth2credential
                         :shape "Oauth2Credential" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-key-credential :initarg :api-key-credential
                         :initform common-lisp:nil :type
                         (common-lisp:or api-key-credential common-lisp:null)
                         :accessor struct-shape-credential-api-key-credential
                         :shape "ApiKeyCredential" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-credential
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'credential
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'credential 'make-credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth2credential))
      (common-lisp:list
       (common-lisp:cons "oauth2Credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-credential))
      (common-lisp:list
       (common-lisp:cons "apiKeyCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credential))
   common-lisp:nil))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-app-authorization-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-app-authorization-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app-authorization-identifier :initarg
                         :app-authorization-identifier :initform
                         (common-lisp:error
                          ":appauthorizationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-app-authorization-request-app-authorization-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appAuthorizationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-authorization-request
                    'make-delete-app-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-authorization-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-app-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-authorization-response
                    'make-delete-app-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-bundle-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-app-bundle-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-bundle-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-bundle-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-bundle-request
                    'make-delete-app-bundle-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-bundle-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-bundle-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-bundle-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-bundle-response
                    'make-delete-app-bundle-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-app-bundle-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-ingestion-destination-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-ingestion-destination-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-ingestion-destination-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (ingestion-destination-identifier :initarg
                         :ingestion-destination-identifier :initform
                         (common-lisp:error
                          ":ingestiondestinationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-ingestion-destination-request-ingestion-destination-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionDestinationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-ingestion-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-ingestion-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-ingestion-destination-request
                    'make-delete-ingestion-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-ingestion-destination-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-ingestion-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-ingestion-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-ingestion-destination-response
                    'make-delete-ingestion-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-ingestion-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-ingestion-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-ingestion-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-ingestion-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-ingestion-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-ingestion-request 'make-delete-ingestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-ingestion-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-ingestion-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-ingestion-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-ingestion-response
                    'make-delete-ingestion-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-ingestion-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination common-lisp:nil
                       ((s3bucket :initarg :s3bucket :initform common-lisp:nil
                         :type (common-lisp:or s3bucket common-lisp:null)
                         :accessor struct-shape-destination-s3bucket :shape
                         "S3Bucket" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (firehose-stream :initarg :firehose-stream :initform
                         common-lisp:nil :type
                         (common-lisp:or firehose-stream common-lisp:null)
                         :accessor struct-shape-destination-firehose-stream
                         :shape "FirehoseStream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket))
      (common-lisp:list
       (common-lisp:cons "s3Bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firehose-stream))
      (common-lisp:list
       (common-lisp:cons "firehoseStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination-configuration common-lisp:nil
                       ((audit-log :initarg :audit-log :initform
                         common-lisp:nil :type
                         (common-lisp:or audit-log-destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-destination-configuration-audit-log
                         :shape "AuditLogDestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-destination-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'destination-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'destination-configuration
                    'make-destination-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit-log))
      (common-lisp:list
       (common-lisp:cons "auditLog"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          destination-configuration))
   common-lisp:nil))
(common-lisp:deftype email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass firehose-stream common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         (common-lisp:error ":streamname is required") :type
                         (common-lisp:or string64 common-lisp:null) :accessor
                         struct-shape-firehose-stream-stream-name :shape
                         "String64" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-firehose-stream
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'firehose-stream
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'firehose-stream 'make-firehose-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firehose-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firehose-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "streamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firehose-stream))
   common-lisp:nil))
(common-lisp:deftype format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-app-authorization-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-app-authorization-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app-authorization-identifier :initarg
                         :app-authorization-identifier :initform
                         (common-lisp:error
                          ":appauthorizationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-app-authorization-request-app-authorization-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appAuthorizationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-authorization-request
                    'make-get-app-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-authorization-response common-lisp:nil
                       ((app-authorization :initarg :app-authorization
                         :initform
                         (common-lisp:error ":appauthorization is required")
                         :type
                         (common-lisp:or app-authorization common-lisp:null)
                         :accessor
                         struct-shape-get-app-authorization-response-app-authorization
                         :shape "AppAuthorization" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-app-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-authorization-response
                    'make-get-app-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-authorization))
      (common-lisp:list
       (common-lisp:cons "appAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-bundle-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-app-bundle-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-bundle-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-app-bundle-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-bundle-request 'make-get-app-bundle-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-bundle-response common-lisp:nil
                       ((app-bundle :initarg :app-bundle :initform
                         (common-lisp:error ":appbundle is required") :type
                         (common-lisp:or app-bundle common-lisp:null) :accessor
                         struct-shape-get-app-bundle-response-app-bundle :shape
                         "AppBundle" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-bundle-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-app-bundle-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-bundle-response 'make-get-app-bundle-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-bundle))
      (common-lisp:list
       (common-lisp:cons "appBundle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-app-bundle-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ingestion-destination-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-destination-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-destination-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (ingestion-destination-identifier :initarg
                         :ingestion-destination-identifier :initform
                         (common-lisp:error
                          ":ingestiondestinationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-destination-request-ingestion-destination-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionDestinationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ingestion-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ingestion-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ingestion-destination-request
                    'make-get-ingestion-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ingestion-destination-response common-lisp:nil
                       ((ingestion-destination :initarg :ingestion-destination
                         :initform
                         (common-lisp:error
                          ":ingestiondestination is required")
                         :type
                         (common-lisp:or ingestion-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-destination-response-ingestion-destination
                         :shape "IngestionDestination" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ingestion-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ingestion-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ingestion-destination-response
                    'make-get-ingestion-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingestion-destination))
      (common-lisp:list
       (common-lisp:cons "ingestionDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ingestion-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-get-ingestion-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ingestion-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-ingestion-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ingestion-request 'make-get-ingestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ingestion-response common-lisp:nil
                       ((ingestion :initarg :ingestion :initform
                         (common-lisp:error ":ingestion is required") :type
                         (common-lisp:or ingestion common-lisp:null) :accessor
                         struct-shape-get-ingestion-response-ingestion :shape
                         "Ingestion" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ingestion-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-ingestion-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ingestion-response 'make-get-ingestion-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestion))
      (common-lisp:list
       (common-lisp:cons "ingestion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ingestion-response))
   common-lisp:nil))
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ingestion common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-arn :shape "Arn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (app-bundle-arn :initarg :app-bundle-arn :initform
                         (common-lisp:error ":appbundlearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-app-bundle-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-ingestion-app :shape "String255"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenantid is required") :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor struct-shape-ingestion-tenant-id :shape
                         "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-ingestion-created-at :shape "DateTime"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         (common-lisp:error ":updatedat is required") :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-ingestion-updated-at :shape "DateTime"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or ingestion-state common-lisp:null)
                         :accessor struct-shape-ingestion-state :shape
                         "IngestionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ingestion-type :initarg :ingestion-type :initform
                         (common-lisp:error ":ingestiontype is required") :type
                         (common-lisp:or ingestion-type common-lisp:null)
                         :accessor struct-shape-ingestion-ingestion-type :shape
                         "IngestionType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingestion
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingestion
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ingestion 'make-ingestion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingestion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingestion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-bundle-arn))
      (common-lisp:list
       (common-lisp:cons "appBundleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "tenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestion-type))
      (common-lisp:list
       (common-lisp:cons "ingestionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingestion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ingestion-destination common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-destination-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (ingestion-arn :initarg :ingestion-arn :initform
                         (common-lisp:error ":ingestionarn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-destination-ingestion-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (processing-configuration :initarg
                         :processing-configuration :initform
                         (common-lisp:error
                          ":processingconfiguration is required")
                         :type
                         (common-lisp:or processing-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-ingestion-destination-processing-configuration
                         :shape "ProcessingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-ingestion-destination-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or ingestion-destination-status
                                         common-lisp:null)
                         :accessor struct-shape-ingestion-destination-status
                         :shape "IngestionDestinationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ingestion-destination-status-reason
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-ingestion-destination-created-at :shape
                         "DateTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-at :initarg :updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or date-time common-lisp:null) :accessor
                         struct-shape-ingestion-destination-updated-at :shape
                         "DateTime" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingestion-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingestion-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ingestion-destination 'make-ingestion-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestion-arn))
      (common-lisp:list
       (common-lisp:cons "ingestionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'processing-configuration))
      (common-lisp:list
       (common-lisp:cons "processingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-at))
      (common-lisp:list
       (common-lisp:cons "updatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ingestion-destination-list ()
   '(trivial-types:proper-list ingestion-destination-summary))
 (common-lisp:defun make-ingestion-destination-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ingestion-destination-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ingestion-destination-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ingestion-destination-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-destination-summary-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingestion-destination-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ingestion-destination-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ingestion-destination-summary
                    'make-ingestion-destination-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ingestion-destination-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ingestion-list ()
   '(trivial-types:proper-list ingestion-summary))
 (common-lisp:defun make-ingestion-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ingestion-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ingestion-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ingestion-summary common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ingestion-summary-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-ingestion-summary-app :shape "String255"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenantid is required") :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor struct-shape-ingestion-summary-tenant-id
                         :shape "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or ingestion-state common-lisp:null)
                         :accessor struct-shape-ingestion-summary-state :shape
                         "IngestionState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingestion-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingestion-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ingestion-summary 'make-ingestion-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingestion-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingestion-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "tenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingestion-summary))
   common-lisp:nil))
(common-lisp:deftype ingestion-type () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defclass list-app-authorizations-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-list-app-authorizations-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-authorizations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-list-app-authorizations-request-next-token
                         :shape "String2048" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-authorizations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-authorizations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-authorizations-request
                    'make-list-app-authorizations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-authorizations-response common-lisp:nil
                       ((app-authorization-summary-list :initarg
                         :app-authorization-summary-list :initform
                         (common-lisp:error
                          ":appauthorizationsummarylist is required")
                         :type
                         (common-lisp:or app-authorization-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-authorizations-response-app-authorization-summary-list
                         :shape "AppAuthorizationSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-list-app-authorizations-response-next-token
                         :shape "String2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-authorizations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-app-authorizations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-authorizations-response
                    'make-list-app-authorizations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-authorization-summary-list))
      (common-lisp:list
       (common-lisp:cons "appAuthorizationSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-authorizations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-bundles-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-app-bundles-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-list-app-bundles-request-next-token
                         :shape "String2048" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-bundles-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-bundles-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-bundles-request 'make-list-app-bundles-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-app-bundles-response common-lisp:nil
                       ((app-bundle-summary-list :initarg
                         :app-bundle-summary-list :initform
                         (common-lisp:error
                          ":appbundlesummarylist is required")
                         :type
                         (common-lisp:or app-bundle-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-app-bundles-response-app-bundle-summary-list
                         :shape "AppBundleSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-list-app-bundles-response-next-token
                         :shape "String2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-app-bundles-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-app-bundles-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-app-bundles-response
                    'make-list-app-bundles-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-bundle-summary-list))
      (common-lisp:list
       (common-lisp:cons "appBundleSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-app-bundles-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-ingestion-destinations-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-list-ingestion-destinations-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-list-ingestion-destinations-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-ingestion-destinations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-ingestion-destinations-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-ingestion-destinations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-ingestion-destinations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-ingestion-destinations-request
                    'make-list-ingestion-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-ingestion-destinations-response common-lisp:nil
                       ((ingestion-destinations :initarg
                         :ingestion-destinations :initform
                         (common-lisp:error
                          ":ingestiondestinations is required")
                         :type
                         (common-lisp:or ingestion-destination-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-ingestion-destinations-response-ingestion-destinations
                         :shape "IngestionDestinationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-ingestion-destinations-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-ingestion-destinations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-ingestion-destinations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-ingestion-destinations-response
                    'make-list-ingestion-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingestion-destinations))
      (common-lisp:list
       (common-lisp:cons "ingestionDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestion-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-ingestions-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-list-ingestions-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-ingestions-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-ingestions-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-ingestions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-ingestions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-ingestions-request 'make-list-ingestions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-ingestions-response common-lisp:nil
                       ((ingestions :initarg :ingestions :initform
                         (common-lisp:error ":ingestions is required") :type
                         (common-lisp:or ingestion-list common-lisp:null)
                         :accessor
                         struct-shape-list-ingestions-response-ingestions
                         :shape "IngestionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-ingestions-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-ingestions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-ingestions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-ingestions-response 'make-list-ingestions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingestions))
      (common-lisp:list
       (common-lisp:cons "ingestions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-ingestions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass oauth2credential common-lisp:nil
                       ((client-id :initarg :client-id :initform
                         (common-lisp:error ":clientid is required") :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-oauth2credential-client-id :shape
                         "String2048" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-secret :initarg :client-secret :initform
                         (common-lisp:error ":clientsecret is required") :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor struct-shape-oauth2credential-client-secret
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-oauth2credential
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'oauth2credential
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'oauth2credential 'make-oauth2credential))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input oauth2credential))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input oauth2credential))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "clientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "clientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input oauth2credential))
   common-lisp:nil))
(common-lisp:deftype persona () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass processing-configuration common-lisp:nil
                       ((audit-log :initarg :audit-log :initform
                         common-lisp:nil :type
                         (common-lisp:or audit-log-processing-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-processing-configuration-audit-log :shape
                         "AuditLogProcessingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-processing-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'processing-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'processing-configuration 'make-processing-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          processing-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          processing-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'audit-log))
      (common-lisp:list
       (common-lisp:cons "auditLog"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          processing-configuration))
   common-lisp:nil))
(common-lisp:deftype redirect-uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype result-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3bucket common-lisp:nil
                       ((bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucketname is required") :type
                         (common-lisp:or string63 common-lisp:null) :accessor
                         struct-shape-s3bucket-bucket-name :shape "String63"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (prefix :initarg :prefix :initform common-lisp:nil
                         :type (common-lisp:or string120 common-lisp:null)
                         :accessor struct-shape-s3bucket-prefix :shape
                         "String120" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3bucket
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3bucket
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3bucket 'make-s3bucket))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3bucket))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3bucket))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3bucket))
   common-lisp:nil))
(common-lisp:deftype schema () 'common-lisp:string)
(common-lisp:deftype sensitive-string2048 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-quota-exceeded-exception-resource-type)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-service-code)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       service-quota-exceeded-exception-quota-code)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-resource-id
                    'service-quota-exceeded-exception-resource-type
                    'service-quota-exceeded-exception-service-code
                    'service-quota-exceeded-exception-quota-code)))
(common-lisp:progn
 (common-lisp:defclass start-ingestion-request common-lisp:nil
                       ((ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-start-ingestion-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-start-ingestion-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-ingestion-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-ingestion-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-ingestion-request 'make-start-ingestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-ingestion-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-ingestion-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-ingestion-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-ingestion-response 'make-start-ingestion-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-ingestion-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-user-access-tasks-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-start-user-access-tasks-request-app-bundle-identifier
                         :shape "Identifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email :initarg :email :initform
                         (common-lisp:error ":email is required") :type
                         (common-lisp:or email common-lisp:null) :accessor
                         struct-shape-start-user-access-tasks-request-email
                         :shape "Email" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-user-access-tasks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-user-access-tasks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-user-access-tasks-request
                    'make-start-user-access-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-bundle-identifier))
      (common-lisp:list
       (common-lisp:cons "appBundleIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-user-access-tasks-response common-lisp:nil
                       ((user-access-tasks-list :initarg
                         :user-access-tasks-list :initform common-lisp:nil
                         :type
                         (common-lisp:or user-access-tasks-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-user-access-tasks-response-user-access-tasks-list
                         :shape "UserAccessTasksList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-user-access-tasks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-user-access-tasks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-user-access-tasks-response
                    'make-start-user-access-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-access-tasks-list))
      (common-lisp:list
       (common-lisp:cons "userAccessTasksList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-user-access-tasks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-ingestion-request common-lisp:nil
                       ((ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-stop-ingestion-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-stop-ingestion-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-ingestion-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-ingestion-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-ingestion-request 'make-stop-ingestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-ingestion-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-ingestion-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-ingestion-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-ingestion-response 'make-stop-ingestion-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-ingestion-response))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string120 () 'common-lisp:string)
(common-lisp:deftype string2048 () 'common-lisp:string)
(common-lisp:deftype string255 () 'common-lisp:string)
(common-lisp:deftype string63 () 'common-lisp:string)
(common-lisp:deftype string64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location "uri" :location-name "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass task-error common-lisp:nil
                       ((error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-task-error-error-code :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-task-error-error-message :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'task-error 'make-task-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype task-id-list () '(trivial-types:proper-list uuid))
 (common-lisp:defun make-task-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uuid))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tenant common-lisp:nil
                       ((tenant-identifier :initarg :tenant-identifier
                         :initform
                         (common-lisp:error ":tenantidentifier is required")
                         :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor struct-shape-tenant-tenant-identifier :shape
                         "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant-display-name :initarg :tenant-display-name
                         :initform
                         (common-lisp:error ":tenantdisplayname is required")
                         :type (common-lisp:or string2048 common-lisp:null)
                         :accessor struct-shape-tenant-tenant-display-name
                         :shape "String2048" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tenant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tenant
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tenant 'make-tenant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tenant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tenant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-identifier))
      (common-lisp:list
       (common-lisp:cons "tenantIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-display-name))
      (common-lisp:list
       (common-lisp:cons "tenantDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tenant))
   common-lisp:nil))
(common-lisp:deftype tenant-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       throttling-exception-service-code)
      (quota-code :initarg :quota-code :initform common-lisp:nil :reader
       throttling-exception-quota-code)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-service-code
                    'throttling-exception-quota-code
                    'throttling-exception-retry-after-seconds)))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-authorization-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-update-app-authorization-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (app-authorization-identifier :initarg
                         :app-authorization-identifier :initform
                         (common-lisp:error
                          ":appauthorizationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-update-app-authorization-request-app-authorization-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appAuthorizationIdentifier")
                        (credential :initarg :credential :initform
                         common-lisp:nil :type
                         (common-lisp:or credential common-lisp:null) :accessor
                         struct-shape-update-app-authorization-request-credential
                         :shape "Credential" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant :initarg :tenant :initform common-lisp:nil
                         :type (common-lisp:or tenant common-lisp:null)
                         :accessor
                         struct-shape-update-app-authorization-request-tenant
                         :shape "Tenant" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-authorization-request
                    'make-update-app-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credential))
      (common-lisp:list
       (common-lisp:cons "credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant))
      (common-lisp:list
       (common-lisp:cons "tenant"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-app-authorization-response common-lisp:nil
                       ((app-authorization :initarg :app-authorization
                         :initform
                         (common-lisp:error ":appauthorization is required")
                         :type
                         (common-lisp:or app-authorization common-lisp:null)
                         :accessor
                         struct-shape-update-app-authorization-response-app-authorization
                         :shape "AppAuthorization" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-app-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-app-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-app-authorization-response
                    'make-update-app-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-authorization))
      (common-lisp:list
       (common-lisp:cons "appAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-app-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-ingestion-destination-request common-lisp:nil
                       ((app-bundle-identifier :initarg :app-bundle-identifier
                         :initform
                         (common-lisp:error ":appbundleidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-update-ingestion-destination-request-app-bundle-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "appBundleIdentifier")
                        (ingestion-identifier :initarg :ingestion-identifier
                         :initform
                         (common-lisp:error ":ingestionidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-update-ingestion-destination-request-ingestion-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionIdentifier")
                        (ingestion-destination-identifier :initarg
                         :ingestion-destination-identifier :initform
                         (common-lisp:error
                          ":ingestiondestinationidentifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-update-ingestion-destination-request-ingestion-destination-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "ingestionDestinationIdentifier")
                        (destination-configuration :initarg
                         :destination-configuration :initform
                         (common-lisp:error
                          ":destinationconfiguration is required")
                         :type
                         (common-lisp:or destination-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-ingestion-destination-request-destination-configuration
                         :shape "DestinationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-ingestion-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-ingestion-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-ingestion-destination-request
                    'make-update-ingestion-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-configuration))
      (common-lisp:list
       (common-lisp:cons "destinationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-ingestion-destination-response common-lisp:nil
                       ((ingestion-destination :initarg :ingestion-destination
                         :initform
                         (common-lisp:error
                          ":ingestiondestination is required")
                         :type
                         (common-lisp:or ingestion-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-ingestion-destination-response-ingestion-destination
                         :shape "IngestionDestination" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-ingestion-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-ingestion-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-ingestion-destination-response
                    'make-update-ingestion-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ingestion-destination))
      (common-lisp:list
       (common-lisp:cons "ingestionDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-ingestion-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass user-access-result-item common-lisp:nil
                       ((app :initarg :app :initform common-lisp:nil :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-user-access-result-item-app :shape
                         "String255" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         common-lisp:nil :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor
                         struct-shape-user-access-result-item-tenant-id :shape
                         "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant-display-name :initarg :tenant-display-name
                         :initform common-lisp:nil :type
                         (common-lisp:or string2048 common-lisp:null) :accessor
                         struct-shape-user-access-result-item-tenant-display-name
                         :shape "String2048" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-id :initarg :task-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-user-access-result-item-task-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (result-status :initarg :result-status :initform
                         common-lisp:nil :type
                         (common-lisp:or result-status common-lisp:null)
                         :accessor
                         struct-shape-user-access-result-item-result-status
                         :shape "ResultStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or email common-lisp:null) :accessor
                         struct-shape-user-access-result-item-email :shape
                         "Email" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor struct-shape-user-access-result-item-user-id
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-full-name :initarg :user-full-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor
                         struct-shape-user-access-result-item-user-full-name
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-first-name :initarg :user-first-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor
                         struct-shape-user-access-result-item-user-first-name
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-last-name :initarg :user-last-name :initform
                         common-lisp:nil :type
                         (common-lisp:or sensitive-string2048 common-lisp:null)
                         :accessor
                         struct-shape-user-access-result-item-user-last-name
                         :shape "SensitiveString2048" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-status :initarg :user-status :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-user-access-result-item-user-status
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-error :initarg :task-error :initform
                         common-lisp:nil :type
                         (common-lisp:or task-error common-lisp:null) :accessor
                         struct-shape-user-access-result-item-task-error :shape
                         "TaskError" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-access-result-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-access-result-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'user-access-result-item 'make-user-access-result-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-access-result-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-access-result-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "tenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-display-name))
      (common-lisp:list
       (common-lisp:cons "tenantDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-id))
      (common-lisp:list
       (common-lisp:cons "taskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result-status))
      (common-lisp:list
       (common-lisp:cons "resultStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "email"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-full-name))
      (common-lisp:list
       (common-lisp:cons "userFullName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-first-name))
      (common-lisp:list
       (common-lisp:cons "userFirstName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-last-name))
      (common-lisp:list
       (common-lisp:cons "userLastName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-status))
      (common-lisp:list
       (common-lisp:cons "userStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-error))
      (common-lisp:list
       (common-lisp:cons "taskError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-access-result-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-access-results-list ()
   '(trivial-types:proper-list user-access-result-item))
 (common-lisp:defun make-user-access-results-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-access-result-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass user-access-task-item common-lisp:nil
                       ((app :initarg :app :initform
                         (common-lisp:error ":app is required") :type
                         (common-lisp:or string255 common-lisp:null) :accessor
                         struct-shape-user-access-task-item-app :shape
                         "String255" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenantid is required") :type
                         (common-lisp:or tenant-identifier common-lisp:null)
                         :accessor struct-shape-user-access-task-item-tenant-id
                         :shape "TenantIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-id :initarg :task-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-user-access-task-item-task-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error :initarg :error :initform common-lisp:nil :type
                         (common-lisp:or task-error common-lisp:null) :accessor
                         struct-shape-user-access-task-item-error :shape
                         "TaskError" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user-access-task-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user-access-task-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'user-access-task-item 'make-user-access-task-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          user-access-task-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          user-access-task-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app))
      (common-lisp:list
       (common-lisp:cons "app"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "tenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-id))
      (common-lisp:list
       (common-lisp:cons "taskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          user-access-task-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-access-tasks-list ()
   '(trivial-types:proper-list user-access-task-item))
 (common-lisp:defun make-user-access-tasks-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-access-task-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (appfabric-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (field-list :initarg :field-list :initform common-lisp:nil :reader
       validation-exception-field-list)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason
                    'validation-exception-field-list)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-user-access-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier task-id-list)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier task-id-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-get-user-access-tasks-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/useraccess/batchget"
                                                        "BatchGetUserAccessTasks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-get-user-access-tasks))
(common-lisp:progn
 (common-lisp:defun connect-app-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     app-authorization-identifier auth-request)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app-authorization-identifier
     auth-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-connect-app-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations/~A/connect"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-authorization-identifier))))
                                                        "ConnectAppAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'connect-app-authorization))
(common-lisp:progn
 (common-lisp:defun create-app-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier app credential
                     tenant auth-type client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app credential tenant
     auth-type client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-authorization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "CreateAppAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-authorization))
(common-lisp:progn
 (common-lisp:defun create-app-bundle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token
                     customer-managed-key-identifier tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token customer-managed-key-identifier tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-bundle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/appbundles"
                                                        "CreateAppBundle"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app-bundle))
(common-lisp:progn
 (common-lisp:defun create-ingestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier app tenant-id
                     ingestion-type client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app tenant-id ingestion-type
     client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-ingestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "CreateIngestion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-ingestion))
(common-lisp:progn
 (common-lisp:defun create-ingestion-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier processing-configuration
                     destination-configuration client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier
     processing-configuration destination-configuration client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-ingestion-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/ingestiondestinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "CreateIngestionDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-ingestion-destination))
(common-lisp:progn
 (common-lisp:defun delete-app-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     app-authorization-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app-authorization-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-authorization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-authorization-identifier))))
                                                        "DeleteAppAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-authorization))
(common-lisp:progn
 (common-lisp:defun delete-app-bundle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier)
   (common-lisp:declare (common-lisp:ignorable app-bundle-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-bundle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "DeleteAppBundle"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app-bundle))
(common-lisp:progn
 (common-lisp:defun delete-ingestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-ingestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "DeleteIngestion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-ingestion))
(common-lisp:progn
 (common-lisp:defun delete-ingestion-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier ingestion-destination-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier
     ingestion-destination-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-ingestion-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/ingestiondestinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-destination-identifier))))
                                                        "DeleteIngestionDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-ingestion-destination))
(common-lisp:progn
 (common-lisp:defun get-app-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     app-authorization-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app-authorization-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-app-authorization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-authorization-identifier))))
                                                        "GetAppAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app-authorization))
(common-lisp:progn
 (common-lisp:defun get-app-bundle
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier)
   (common-lisp:declare (common-lisp:ignorable app-bundle-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-app-bundle-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "GetAppBundle"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app-bundle))
(common-lisp:progn
 (common-lisp:defun get-ingestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-ingestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "GetIngestion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ingestion))
(common-lisp:progn
 (common-lisp:defun get-ingestion-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier ingestion-destination-identifier)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier
     ingestion-destination-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ingestion-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/ingestiondestinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-destination-identifier))))
                                                        "GetIngestionDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ingestion-destination))
(common-lisp:progn
 (common-lisp:defun list-app-authorizations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-authorizations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "ListAppAuthorizations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-authorizations))
(common-lisp:progn
 (common-lisp:defun list-app-bundles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-app-bundles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/appbundles"
                                                        "ListAppBundles"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-app-bundles))
(common-lisp:progn
 (common-lisp:defun list-ingestion-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-ingestion-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/ingestiondestinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "ListIngestionDestinations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-ingestion-destinations))
(common-lisp:progn
 (common-lisp:defun list-ingestions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-ingestions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))))
                                                        "ListIngestions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-ingestions))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-ingestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ingestion-identifier
                     app-bundle-identifier)
   (common-lisp:declare
    (common-lisp:ignorable ingestion-identifier app-bundle-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-ingestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/start"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "StartIngestion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-ingestion))
(common-lisp:progn
 (common-lisp:defun start-user-access-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier email)
   (common-lisp:declare (common-lisp:ignorable app-bundle-identifier email))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-user-access-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/useraccess/start"
                                                        "StartUserAccessTasks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-user-access-tasks))
(common-lisp:progn
 (common-lisp:defun stop-ingestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ingestion-identifier
                     app-bundle-identifier)
   (common-lisp:declare
    (common-lisp:ignorable ingestion-identifier app-bundle-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-ingestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/stop"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))))
                                                        "StopIngestion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-ingestion))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-app-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     app-authorization-identifier credential tenant)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier app-authorization-identifier
     credential tenant))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-authorization-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/appauthorizations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-authorization-identifier))))
                                                        "UpdateAppAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-app-authorization))
(common-lisp:progn
 (common-lisp:defun update-ingestion-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-bundle-identifier
                     ingestion-identifier ingestion-destination-identifier
                     destination-configuration)
   (common-lisp:declare
    (common-lisp:ignorable app-bundle-identifier ingestion-identifier
     ingestion-destination-identifier destination-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-ingestion-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'appfabric-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/appbundles/~A/ingestions/~A/ingestiondestinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'app-bundle-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-identifier))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingestion-destination-identifier))))
                                                        "UpdateIngestionDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-ingestion-destination))
