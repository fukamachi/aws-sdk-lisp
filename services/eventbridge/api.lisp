;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/eventbridge/api
  (:use)
  (:nicknames #:aws/eventbridge)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/eventbridge/api)
(common-lisp:progn
 (common-lisp:define-condition eventbridge-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'eventbridge-error))
(common-lisp:progn
 (common-lisp:defclass eventbridge-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "eventbridge" :api-version
                        "2015-10-07" :host-prefix "events" :signing-name
                        common-lisp:nil :global-host common-lisp:nil
                        :target-prefix "AWSEvents" :json-version "1.1"))
 (common-lisp:export 'eventbridge-request))
(common-lisp:defvar *error-map*
  '(("ConcurrentModificationException" . concurrent-modification-exception)
    ("IllegalStatusException" . illegal-status-exception)
    ("InternalException" . internal-exception)
    ("InvalidEventPatternException" . invalid-event-pattern-exception)
    ("InvalidStateException" . invalid-state-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("ManagedRuleException" . managed-rule-exception)
    ("OperationDisabledException" . operation-disabled-exception)
    ("PolicyLengthExceededException" . policy-length-exceeded-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass activate-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-activate-event-source-request-name :shape
                         "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activate-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'activate-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'activate-event-source-request
                    'make-activate-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-destination common-lisp:nil
                       ((api-destination-arn :initarg :api-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-arn common-lisp:null)
                         :accessor
                         struct-shape-api-destination-api-destination-arn
                         :shape "ApiDestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor struct-shape-api-destination-name :shape
                         "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-destination-state :initarg :api-destination-state
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-api-destination-api-destination-state
                         :shape "ApiDestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor struct-shape-api-destination-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invocation-endpoint :initarg :invocation-endpoint
                         :initform common-lisp:nil :type
                         (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-api-destination-invocation-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-http-method
                                         common-lisp:null)
                         :accessor struct-shape-api-destination-http-method
                         :shape "ApiDestinationHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (invocation-rate-limit-per-second :initarg
                         :invocation-rate-limit-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          api-destination-invocation-rate-limit-per-second
                          common-lisp:null)
                         :accessor
                         struct-shape-api-destination-invocation-rate-limit-per-second
                         :shape "ApiDestinationInvocationRateLimitPerSecond"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-api-destination-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-api-destination-last-modified-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-destination 'make-api-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-destination-arn))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-destination-state))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invocation-endpoint))
      (common-lisp:list
       (common-lisp:cons "InvocationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-rate-limit-per-second))
      (common-lisp:list
       (common-lisp:cons "InvocationRateLimitPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-destination))
   common-lisp:nil))
(common-lisp:deftype api-destination-arn () 'common-lisp:string)
(common-lisp:deftype api-destination-description () 'common-lisp:string)
(common-lisp:deftype api-destination-http-method () 'common-lisp:string)
(common-lisp:deftype api-destination-invocation-rate-limit-per-second ()
  'common-lisp:integer)
(common-lisp:deftype api-destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype api-destination-response-list ()
   '(trivial-types:proper-list api-destination))
 (common-lisp:defun make-api-destination-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype api-destination-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass app-sync-parameters common-lisp:nil
                       ((graph-qloperation :initarg :graph-qloperation
                         :initform common-lisp:nil :type
                         (common-lisp:or graph-qloperation common-lisp:null)
                         :accessor
                         struct-shape-app-sync-parameters-graph-qloperation
                         :shape "GraphQLOperation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-sync-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'app-sync-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-sync-parameters 'make-app-sync-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input app-sync-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input app-sync-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'graph-qloperation))
      (common-lisp:list
       (common-lisp:cons "GraphQLOperation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input app-sync-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass archive common-lisp:nil
                       ((archive-name :initarg :archive-name :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor struct-shape-archive-archive-name :shape
                         "ArchiveName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-archive-event-source-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or archive-state common-lisp:null)
                         :accessor struct-shape-archive-state :shape
                         "ArchiveState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-state-reason common-lisp:null)
                         :accessor struct-shape-archive-state-reason :shape
                         "ArchiveStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor struct-shape-archive-retention-days :shape
                         "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (size-bytes :initarg :size-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-archive-size-bytes :shape "Long"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-count :initarg :event-count :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-archive-event-count :shape "Long"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-archive-creation-time :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-archive
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'archive
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'archive 'make-archive))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input archive))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input archive))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-bytes))
      (common-lisp:list
       (common-lisp:cons "SizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-count))
      (common-lisp:list
       (common-lisp:cons "EventCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input archive))
   common-lisp:nil))
(common-lisp:deftype archive-arn () 'common-lisp:string)
(common-lisp:deftype archive-description () 'common-lisp:string)
(common-lisp:deftype archive-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype archive-response-list ()
   '(trivial-types:proper-list archive))
 (common-lisp:defun make-archive-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list archive))
   aws-sdk/generator/shape::members))
(common-lisp:deftype archive-state () 'common-lisp:string)
(common-lisp:deftype archive-state-reason () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype assign-public-ip () 'common-lisp:string)
(common-lisp:deftype auth-header-parameters () 'common-lisp:string)
(common-lisp:deftype auth-header-parameters-sensitive () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass aws-vpc-configuration common-lisp:nil
                       ((subnets :initarg :subnets :initform
                         (common-lisp:error ":subnets is required") :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor struct-shape-aws-vpc-configuration-subnets
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-groups :initarg :security-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor
                         struct-shape-aws-vpc-configuration-security-groups
                         :shape "StringList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (assign-public-ip :initarg :assign-public-ip :initform
                         common-lisp:nil :type
                         (common-lisp:or assign-public-ip common-lisp:null)
                         :accessor
                         struct-shape-aws-vpc-configuration-assign-public-ip
                         :shape "AssignPublicIp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-aws-vpc-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'aws-vpc-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'aws-vpc-configuration 'make-aws-vpc-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          aws-vpc-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          aws-vpc-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnets))
      (common-lisp:list
       (common-lisp:cons "Subnets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-groups))
      (common-lisp:list
       (common-lisp:cons "SecurityGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'assign-public-ip))
      (common-lisp:list
       (common-lisp:cons "AssignPublicIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          aws-vpc-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-array-properties common-lisp:nil
                       ((size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-batch-array-properties-size :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-array-properties
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-array-properties
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-array-properties 'make-batch-array-properties))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-array-properties))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-array-properties))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-array-properties))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-parameters common-lisp:nil
                       ((job-definition :initarg :job-definition :initform
                         (common-lisp:error ":job-definition is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-batch-parameters-job-definition
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-name :initarg :job-name :initform
                         (common-lisp:error ":job-name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-parameters-job-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (array-properties :initarg :array-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or batch-array-properties
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-parameters-array-properties :shape
                         "BatchArrayProperties" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retry-strategy :initarg :retry-strategy :initform
                         common-lisp:nil :type
                         (common-lisp:or batch-retry-strategy common-lisp:null)
                         :accessor struct-shape-batch-parameters-retry-strategy
                         :shape "BatchRetryStrategy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-parameters 'make-batch-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-definition))
      (common-lisp:list
       (common-lisp:cons "JobDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-name))
      (common-lisp:list
       (common-lisp:cons "JobName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'array-properties))
      (common-lisp:list
       (common-lisp:cons "ArrayProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retry-strategy))
      (common-lisp:list
       (common-lisp:cons "RetryStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-retry-strategy common-lisp:nil
                       ((attempts :initarg :attempts :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor struct-shape-batch-retry-strategy-attempts
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-retry-strategy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-retry-strategy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-retry-strategy 'make-batch-retry-strategy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input batch-retry-strategy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input batch-retry-strategy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attempts))
      (common-lisp:list
       (common-lisp:cons "Attempts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input batch-retry-strategy))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass cancel-replay-request common-lisp:nil
                       ((replay-name :initarg :replay-name :initform
                         (common-lisp:error ":replay-name is required") :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor
                         struct-shape-cancel-replay-request-replay-name :shape
                         "ReplayName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-replay-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-replay-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-replay-request 'make-cancel-replay-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-name))
      (common-lisp:list
       (common-lisp:cons "ReplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-replay-response common-lisp:nil
                       ((replay-arn :initarg :replay-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-arn common-lisp:null) :accessor
                         struct-shape-cancel-replay-response-replay-arn :shape
                         "ReplayArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replay-state common-lisp:null)
                         :accessor struct-shape-cancel-replay-response-state
                         :shape "ReplayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-state-reason common-lisp:null)
                         :accessor
                         struct-shape-cancel-replay-response-state-reason
                         :shape "ReplayStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-replay-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-replay-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-replay-response 'make-cancel-replay-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-arn))
      (common-lisp:list
       (common-lisp:cons "ReplayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-replay-response))
   common-lisp:nil))
(common-lisp:deftype capacity-provider () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype capacity-provider-strategy ()
   '(trivial-types:proper-list capacity-provider-strategy-item))
 (common-lisp:defun make-capacity-provider-strategy
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            capacity-provider-strategy-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass capacity-provider-strategy-item common-lisp:nil
                       ((capacity-provider :initarg :capacity-provider
                         :initform
                         (common-lisp:error ":capacityprovider is required")
                         :type
                         (common-lisp:or capacity-provider common-lisp:null)
                         :accessor
                         struct-shape-capacity-provider-strategy-item-capacity-provider
                         :shape "CapacityProvider" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (weight :initarg :weight :initform common-lisp:nil
                         :type
                         (common-lisp:or capacity-provider-strategy-item-weight
                                         common-lisp:null)
                         :accessor
                         struct-shape-capacity-provider-strategy-item-weight
                         :shape "CapacityProviderStrategyItemWeight" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (base :initarg :base :initform common-lisp:nil :type
                         (common-lisp:or capacity-provider-strategy-item-base
                                         common-lisp:null)
                         :accessor
                         struct-shape-capacity-provider-strategy-item-base
                         :shape "CapacityProviderStrategyItemBase" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-capacity-provider-strategy-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'capacity-provider-strategy-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'capacity-provider-strategy-item
                    'make-capacity-provider-strategy-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          capacity-provider-strategy-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          capacity-provider-strategy-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-provider))
      (common-lisp:list
       (common-lisp:cons "capacityProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'weight))
      (common-lisp:list
       (common-lisp:cons "weight"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base))
      (common-lisp:list
       (common-lisp:cons "base"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          capacity-provider-strategy-item))
   common-lisp:nil))
(common-lisp:deftype capacity-provider-strategy-item-base ()
  'common-lisp:integer)
(common-lisp:deftype capacity-provider-strategy-item-weight ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'concurrent-modification-exception)))
(common-lisp:progn
 (common-lisp:defclass condition common-lisp:nil
                       ((type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-condition-type :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-condition-key :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-condition-value :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connection common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor struct-shape-connection-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor struct-shape-connection-name :shape
                         "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor struct-shape-connection-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state-reason
                                         common-lisp:null)
                         :accessor struct-shape-connection-state-reason :shape
                         "ConnectionStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-authorization-type
                                         common-lisp:null)
                         :accessor struct-shape-connection-authorization-type
                         :shape "ConnectionAuthorizationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-connection-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-connection-last-modified-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-authorized-time :initarg :last-authorized-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-connection-last-authorized-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'connection
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'connection 'make-connection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input connection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-authorized-time))
      (common-lisp:list
       (common-lisp:cons "LastAuthorizedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input connection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connection-api-key-auth-response-parameters
                       common-lisp:nil
                       ((api-key-name :initarg :api-key-name :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-api-key-auth-response-parameters-api-key-name
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-api-key-auth-response-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-api-key-auth-response-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-api-key-auth-response-parameters
                    'make-connection-api-key-auth-response-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-api-key-auth-response-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-api-key-auth-response-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-name))
      (common-lisp:list
       (common-lisp:cons "ApiKeyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-api-key-auth-response-parameters))
   common-lisp:nil))
(common-lisp:deftype connection-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connection-auth-response-parameters common-lisp:nil
                       ((basic-auth-parameters :initarg :basic-auth-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          connection-basic-auth-response-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-connection-auth-response-parameters-basic-auth-parameters
                         :shape "ConnectionBasicAuthResponseParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (oauth-parameters :initarg :oauth-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-oauth-response-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-auth-response-parameters-oauth-parameters
                         :shape "ConnectionOAuthResponseParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (api-key-auth-parameters :initarg
                         :api-key-auth-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          connection-api-key-auth-response-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-connection-auth-response-parameters-api-key-auth-parameters
                         :shape "ConnectionApiKeyAuthResponseParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (invocation-http-parameters :initarg
                         :invocation-http-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-auth-response-parameters-invocation-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-auth-response-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-auth-response-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-auth-response-parameters
                    'make-connection-auth-response-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-auth-response-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-auth-response-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'basic-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "BasicAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "ApiKeyAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-http-parameters))
      (common-lisp:list
       (common-lisp:cons "InvocationHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-auth-response-parameters))
   common-lisp:nil))
(common-lisp:deftype connection-authorization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connection-basic-auth-response-parameters
                       common-lisp:nil
                       ((username :initarg :username :initform common-lisp:nil
                         :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-basic-auth-response-parameters-username
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-basic-auth-response-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-basic-auth-response-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-basic-auth-response-parameters
                    'make-connection-basic-auth-response-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-basic-auth-response-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-basic-auth-response-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-basic-auth-response-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connection-body-parameter common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-connection-body-parameter-key :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-connection-body-parameter-value
                         :shape "SensitiveString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-value-secret :initarg :is-value-secret :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-connection-body-parameter-is-value-secret
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-body-parameter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'connection-body-parameter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-body-parameter
                    'make-connection-body-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-body-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-body-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-value-secret))
      (common-lisp:list
       (common-lisp:cons "IsValueSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-body-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype connection-body-parameters-list ()
   '(trivial-types:proper-list connection-body-parameter))
 (common-lisp:defun make-connection-body-parameters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            connection-body-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype connection-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connection-header-parameter common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or header-key common-lisp:null) :accessor
                         struct-shape-connection-header-parameter-key :shape
                         "HeaderKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or header-value-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-header-parameter-value :shape
                         "HeaderValueSensitive" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-value-secret :initarg :is-value-secret :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-connection-header-parameter-is-value-secret
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-header-parameter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'connection-header-parameter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-header-parameter
                    'make-connection-header-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-header-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-header-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-value-secret))
      (common-lisp:list
       (common-lisp:cons "IsValueSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-header-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype connection-header-parameters-list ()
   '(trivial-types:proper-list connection-header-parameter))
 (common-lisp:defun make-connection-header-parameters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            connection-header-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass connection-http-parameters common-lisp:nil
                       ((header-parameters :initarg :header-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-header-parameters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-http-parameters-header-parameters
                         :shape "ConnectionHeaderParametersList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (query-string-parameters :initarg
                         :query-string-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          connection-query-string-parameters-list
                          common-lisp:null)
                         :accessor
                         struct-shape-connection-http-parameters-query-string-parameters
                         :shape "ConnectionQueryStringParametersList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (body-parameters :initarg :body-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-body-parameters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-http-parameters-body-parameters
                         :shape "ConnectionBodyParametersList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-http-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'connection-http-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-http-parameters
                    'make-connection-http-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-http-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-http-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-parameters))
      (common-lisp:list
       (common-lisp:cons "HeaderParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'query-string-parameters))
      (common-lisp:list
       (common-lisp:cons "QueryStringParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body-parameters))
      (common-lisp:list
       (common-lisp:cons "BodyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-http-parameters))
   common-lisp:nil))
(common-lisp:deftype connection-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connection-oauth-client-response-parameters
                       common-lisp:nil
                       ((client-id :initarg :client-id :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-oauth-client-response-parameters-client-id
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-oauth-client-response-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-oauth-client-response-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-oauth-client-response-parameters
                    'make-connection-oauth-client-response-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-client-response-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-client-response-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-client-response-parameters))
   common-lisp:nil))
(common-lisp:deftype connection-oauth-http-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass connection-oauth-response-parameters common-lisp:nil
                       ((client-parameters :initarg :client-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          connection-oauth-client-response-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-connection-oauth-response-parameters-client-parameters
                         :shape "ConnectionOAuthClientResponseParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorization-endpoint :initarg
                         :authorization-endpoint :initform common-lisp:nil
                         :type (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-connection-oauth-response-parameters-authorization-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-oauth-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-oauth-response-parameters-http-method
                         :shape "ConnectionOAuthHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (oauth-http-parameters :initarg :oauth-http-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-oauth-response-parameters-oauth-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-oauth-response-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-oauth-response-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-oauth-response-parameters
                    'make-connection-oauth-response-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-response-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-response-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-parameters))
      (common-lisp:list
       (common-lisp:cons "ClientParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-endpoint))
      (common-lisp:list
       (common-lisp:cons "AuthorizationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oauth-http-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-oauth-response-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass connection-query-string-parameter common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or query-string-key common-lisp:null)
                         :accessor
                         struct-shape-connection-query-string-parameter-key
                         :shape "QueryStringKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or query-string-value-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-connection-query-string-parameter-value
                         :shape "QueryStringValueSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (is-value-secret :initarg :is-value-secret :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-connection-query-string-parameter-is-value-secret
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-connection-query-string-parameter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'connection-query-string-parameter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'connection-query-string-parameter
                    'make-connection-query-string-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          connection-query-string-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          connection-query-string-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-value-secret))
      (common-lisp:list
       (common-lisp:cons "IsValueSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          connection-query-string-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype connection-query-string-parameters-list ()
   '(trivial-types:proper-list connection-query-string-parameter))
 (common-lisp:defun make-connection-query-string-parameters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            connection-query-string-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype connection-response-list ()
   '(trivial-types:proper-list connection))
 (common-lisp:defun make-connection-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list connection))
   aws-sdk/generator/shape::members))
(common-lisp:deftype connection-state () 'common-lisp:string)
(common-lisp:deftype connection-state-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-api-destination-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-name
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-description
                         :shape "ApiDestinationDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (connection-arn :initarg :connection-arn :initform
                         (common-lisp:error ":connection-arn is required")
                         :type (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invocation-endpoint :initarg :invocation-endpoint
                         :initform
                         (common-lisp:error ":invocation-endpoint is required")
                         :type (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-invocation-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":http-method is required") :type
                         (common-lisp:or api-destination-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-http-method
                         :shape "ApiDestinationHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (invocation-rate-limit-per-second :initarg
                         :invocation-rate-limit-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          api-destination-invocation-rate-limit-per-second
                          common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-request-invocation-rate-limit-per-second
                         :shape "ApiDestinationInvocationRateLimitPerSecond"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-api-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-destination-request
                    'make-create-api-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invocation-endpoint))
      (common-lisp:list
       (common-lisp:cons "InvocationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-rate-limit-per-second))
      (common-lisp:list
       (common-lisp:cons "InvocationRateLimitPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-api-destination-response common-lisp:nil
                       ((api-destination-arn :initarg :api-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-arn common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-response-api-destination-arn
                         :shape "ApiDestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-destination-state :initarg :api-destination-state
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-api-destination-response-api-destination-state
                         :shape "ApiDestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-api-destination-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-api-destination-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-api-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-destination-response
                    'make-create-api-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-destination-arn))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-destination-state))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-archive-request common-lisp:nil
                       ((archive-name :initarg :archive-name :initform
                         (common-lisp:error ":archive-name is required") :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-create-archive-request-archive-name
                         :shape "ArchiveName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         (common-lisp:error ":event-source-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-archive-request-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-description common-lisp:null)
                         :accessor
                         struct-shape-create-archive-request-description :shape
                         "ArchiveDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor
                         struct-shape-create-archive-request-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-create-archive-request-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-archive-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-archive-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-archive-request 'make-create-archive-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-archive-response common-lisp:nil
                       ((archive-arn :initarg :archive-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-arn common-lisp:null)
                         :accessor
                         struct-shape-create-archive-response-archive-arn
                         :shape "ArchiveArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or archive-state common-lisp:null)
                         :accessor struct-shape-create-archive-response-state
                         :shape "ArchiveState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-state-reason common-lisp:null)
                         :accessor
                         struct-shape-create-archive-response-state-reason
                         :shape "ArchiveStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-archive-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-archive-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-archive-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-archive-response 'make-create-archive-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-arn))
      (common-lisp:list
       (common-lisp:cons "ArchiveArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-archive-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-api-key-auth-request-parameters
                       common-lisp:nil
                       ((api-key-name :initarg :api-key-name :initform
                         (common-lisp:error ":api-key-name is required") :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-api-key-auth-request-parameters-api-key-name
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (api-key-value :initarg :api-key-value :initform
                         (common-lisp:error ":api-key-value is required") :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-api-key-auth-request-parameters-api-key-value
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-api-key-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connection-api-key-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-api-key-auth-request-parameters
                    'make-create-connection-api-key-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-api-key-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-api-key-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-name))
      (common-lisp:list
       (common-lisp:cons "ApiKeyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-value))
      (common-lisp:list
       (common-lisp:cons "ApiKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-api-key-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-auth-request-parameters
                       common-lisp:nil
                       ((basic-auth-parameters :initarg :basic-auth-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          create-connection-basic-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-connection-auth-request-parameters-basic-auth-parameters
                         :shape "CreateConnectionBasicAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (oauth-parameters :initarg :oauth-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          create-connection-oauth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-connection-auth-request-parameters-oauth-parameters
                         :shape "CreateConnectionOAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-key-auth-parameters :initarg
                         :api-key-auth-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          create-connection-api-key-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-connection-auth-request-parameters-api-key-auth-parameters
                         :shape "CreateConnectionApiKeyAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (invocation-http-parameters :initarg
                         :invocation-http-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-auth-request-parameters-invocation-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connection-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-auth-request-parameters
                    'make-create-connection-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'basic-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "BasicAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "ApiKeyAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-http-parameters))
      (common-lisp:list
       (common-lisp:cons "InvocationHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-basic-auth-request-parameters
                       common-lisp:nil
                       ((username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-basic-auth-request-parameters-username
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-basic-auth-request-parameters-password
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-basic-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connection-basic-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-basic-auth-request-parameters
                    'make-create-connection-basic-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-basic-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-basic-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-basic-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-oauth-client-request-parameters
                       common-lisp:nil
                       ((client-id :initarg :client-id :initform
                         (common-lisp:error ":client-id is required") :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-client-request-parameters-client-id
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-secret :initarg :client-secret :initform
                         (common-lisp:error ":client-secret is required") :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-client-request-parameters-client-secret
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-oauth-client-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connection-oauth-client-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-oauth-client-request-parameters
                    'make-create-connection-oauth-client-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-client-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-client-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "ClientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-client-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-oauth-request-parameters
                       common-lisp:nil
                       ((client-parameters :initarg :client-parameters
                         :initform
                         (common-lisp:error ":client-parameters is required")
                         :type
                         (common-lisp:or
                          create-connection-oauth-client-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-request-parameters-client-parameters
                         :shape "CreateConnectionOAuthClientRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorization-endpoint :initarg
                         :authorization-endpoint :initform
                         (common-lisp:error
                          ":authorization-endpoint is required")
                         :type (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-request-parameters-authorization-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":http-method is required") :type
                         (common-lisp:or connection-oauth-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-request-parameters-http-method
                         :shape "ConnectionOAuthHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (oauth-http-parameters :initarg :oauth-http-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-oauth-request-parameters-oauth-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-oauth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-connection-oauth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-oauth-request-parameters
                    'make-create-connection-oauth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-parameters))
      (common-lisp:list
       (common-lisp:cons "ClientParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-endpoint))
      (common-lisp:list
       (common-lisp:cons "AuthorizationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oauth-http-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-oauth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor struct-shape-create-connection-request-name
                         :shape "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-request-description
                         :shape "ConnectionDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authorization-type :initarg :authorization-type
                         :initform
                         (common-lisp:error ":authorization-type is required")
                         :type
                         (common-lisp:or connection-authorization-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-connection-request-authorization-type
                         :shape "ConnectionAuthorizationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (auth-parameters :initarg :auth-parameters :initform
                         (common-lisp:error ":auth-parameters is required")
                         :type
                         (common-lisp:or
                          create-connection-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-connection-request-auth-parameters
                         :shape "CreateConnectionAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-connection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-request
                    'make-create-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-parameters))
      (common-lisp:list
       (common-lisp:cons "AuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-connection-response common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-create-connection-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-create-connection-response-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-connection-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-connection-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-connection-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-connection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-connection-response
                    'make-create-connection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-connection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-endpoint-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-create-endpoint-request-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-description common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-description
                         :shape "EndpointDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         (common-lisp:error ":routing-config is required")
                         :type (common-lisp:or routing-config common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-routing-config
                         :shape "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         (common-lisp:error ":event-buses is required") :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-event-buses
                         :shape "EndpointEventBusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-request-role-arn :shape
                         "IamRoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-request 'make-create-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-endpoint-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-create-endpoint-response-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or endpoint-arn common-lisp:null)
                         :accessor struct-shape-create-endpoint-response-arn
                         :shape "EndpointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-config common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-routing-config
                         :shape "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-event-buses
                         :shape "EndpointEventBusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-endpoint-response-role-arn :shape
                         "IamRoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor struct-shape-create-endpoint-response-state
                         :shape "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-endpoint-response 'make-create-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-bus-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-bus-name common-lisp:null)
                         :accessor struct-shape-create-event-bus-request-name
                         :shape "EventBusName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-name :initarg :event-source-name
                         :initform common-lisp:nil :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-create-event-bus-request-event-source-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-event-bus-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-event-bus-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-event-bus-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-event-bus-request 'make-create-event-bus-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-name))
      (common-lisp:list
       (common-lisp:cons "EventSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-bus-response common-lisp:nil
                       ((event-bus-arn :initarg :event-bus-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-event-bus-response-event-bus-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-event-bus-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-event-bus-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-event-bus-response
                    'make-create-event-bus-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-arn))
      (common-lisp:list
       (common-lisp:cons "EventBusArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-bus-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-partner-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-create-partner-event-source-request-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account :initarg :account :initform
                         (common-lisp:error ":account is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-partner-event-source-request-account
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-partner-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-partner-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-partner-event-source-request
                    'make-create-partner-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-partner-event-source-response common-lisp:nil
                       ((event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-partner-event-source-response-event-source-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-partner-event-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-partner-event-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-partner-event-source-response
                    'make-create-partner-event-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-partner-event-source-response))
   common-lisp:nil))
(common-lisp:deftype created-by () 'common-lisp:string)
(common-lisp:deftype database () 'common-lisp:string)
(common-lisp:deftype db-user () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deactivate-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-deactivate-event-source-request-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deactivate-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deactivate-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deactivate-event-source-request
                    'make-deactivate-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deactivate-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dead-letter-config common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-dead-letter-config-arn :shape
                         "ResourceArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dead-letter-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dead-letter-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dead-letter-config 'make-dead-letter-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dead-letter-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dead-letter-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dead-letter-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deauthorize-connection-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor
                         struct-shape-deauthorize-connection-request-name
                         :shape "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deauthorize-connection-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deauthorize-connection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deauthorize-connection-request
                    'make-deauthorize-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deauthorize-connection-response common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-deauthorize-connection-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-deauthorize-connection-response-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deauthorize-connection-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deauthorize-connection-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-authorized-time :initarg :last-authorized-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deauthorize-connection-response-last-authorized-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deauthorize-connection-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'deauthorize-connection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deauthorize-connection-response
                    'make-deauthorize-connection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-authorized-time))
      (common-lisp:list
       (common-lisp:cons "LastAuthorizedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deauthorize-connection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-destination-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-delete-api-destination-request-name
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-api-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-api-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-api-destination-request
                    'make-delete-api-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-destination-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-api-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-api-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-api-destination-response
                    'make-delete-api-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-archive-request common-lisp:nil
                       ((archive-name :initarg :archive-name :initform
                         (common-lisp:error ":archive-name is required") :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-delete-archive-request-archive-name
                         :shape "ArchiveName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-archive-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-archive-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-archive-request 'make-delete-archive-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-archive-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-archive-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-archive-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-archive-response 'make-delete-archive-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-archive-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-connection-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor struct-shape-delete-connection-request-name
                         :shape "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-connection-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-connection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-connection-request
                    'make-delete-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-connection-response common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-connection-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-delete-connection-response-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-delete-connection-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-delete-connection-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-authorized-time :initarg :last-authorized-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-delete-connection-response-last-authorized-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-connection-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-connection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-connection-response
                    'make-delete-connection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-authorized-time))
      (common-lisp:list
       (common-lisp:cons "LastAuthorizedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-connection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-delete-endpoint-request-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-request 'make-delete-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-response 'make-delete-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-bus-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-bus-name common-lisp:null)
                         :accessor struct-shape-delete-event-bus-request-name
                         :shape "EventBusName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-event-bus-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-event-bus-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-event-bus-request 'make-delete-event-bus-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-bus-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-bus-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-bus-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-partner-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-delete-partner-event-source-request-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account :initarg :account :initform
                         (common-lisp:error ":account is required") :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-delete-partner-event-source-request-account
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-partner-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-partner-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-partner-event-source-request
                    'make-delete-partner-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-partner-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-partner-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-partner-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-delete-rule-request-name :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-rule-request-event-bus-name :shape
                         "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (force :initarg :force :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-delete-rule-request-force :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-rule-request 'make-delete-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force))
      (common-lisp:list
       (common-lisp:cons "Force"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-api-destination-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-request-name
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-api-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-api-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-api-destination-request
                    'make-describe-api-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-api-destination-response common-lisp:nil
                       ((api-destination-arn :initarg :api-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-api-destination-arn
                         :shape "ApiDestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-name
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-description
                         :shape "ApiDestinationDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (api-destination-state :initarg :api-destination-state
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-api-destination-state
                         :shape "ApiDestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invocation-endpoint :initarg :invocation-endpoint
                         :initform common-lisp:nil :type
                         (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-invocation-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-http-method
                         :shape "ApiDestinationHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (invocation-rate-limit-per-second :initarg
                         :invocation-rate-limit-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          api-destination-invocation-rate-limit-per-second
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-api-destination-response-invocation-rate-limit-per-second
                         :shape "ApiDestinationInvocationRateLimitPerSecond"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-api-destination-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-api-destination-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-api-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-api-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-api-destination-response
                    'make-describe-api-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-destination-arn))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-destination-state))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invocation-endpoint))
      (common-lisp:list
       (common-lisp:cons "InvocationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-rate-limit-per-second))
      (common-lisp:list
       (common-lisp:cons "InvocationRateLimitPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-api-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-archive-request common-lisp:nil
                       ((archive-name :initarg :archive-name :initform
                         (common-lisp:error ":archive-name is required") :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-request-archive-name
                         :shape "ArchiveName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-archive-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-archive-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-archive-request 'make-describe-archive-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-archive-response common-lisp:nil
                       ((archive-arn :initarg :archive-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-archive-arn
                         :shape "ArchiveArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (archive-name :initarg :archive-name :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-archive-name
                         :shape "ArchiveName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-describe-archive-response-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-description common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-description
                         :shape "ArchiveDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or archive-state common-lisp:null)
                         :accessor struct-shape-describe-archive-response-state
                         :shape "ArchiveState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-state-reason common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-state-reason
                         :shape "ArchiveStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-describe-archive-response-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (size-bytes :initarg :size-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-describe-archive-response-size-bytes
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-count :initarg :event-count :initform
                         common-lisp:nil :type
                         (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-describe-archive-response-event-count
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-archive-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-archive-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-archive-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-archive-response
                    'make-describe-archive-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-arn))
      (common-lisp:list
       (common-lisp:cons "ArchiveArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-bytes))
      (common-lisp:list
       (common-lisp:cons "SizeBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-count))
      (common-lisp:list
       (common-lisp:cons "EventCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-archive-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-connection-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-request-name :shape
                         "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-connection-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-connection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-connection-request
                    'make-describe-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-connection-response common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-name :shape
                         "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-description
                         :shape "ConnectionDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-state-reason
                         :shape "ConnectionStateReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-authorization-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-authorization-type
                         :shape "ConnectionAuthorizationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (secret-arn :initarg :secret-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or secrets-manager-secret-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-secret-arn
                         :shape "SecretsManagerSecretArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (auth-parameters :initarg :auth-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-auth-response-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-connection-response-auth-parameters
                         :shape "ConnectionAuthResponseParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-connection-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-connection-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-authorized-time :initarg :last-authorized-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-connection-response-last-authorized-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-connection-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-connection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-connection-response
                    'make-describe-connection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-arn))
      (common-lisp:list
       (common-lisp:cons "SecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-parameters))
      (common-lisp:list
       (common-lisp:cons "AuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-authorized-time))
      (common-lisp:list
       (common-lisp:cons "LastAuthorizedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-connection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-endpoint-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-describe-endpoint-request-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (home-region :initarg :home-region :initform
                         common-lisp:nil :type
                         (common-lisp:or home-region common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-request-home-region
                         :shape "HomeRegion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-request
                    'make-describe-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'home-region))
      (common-lisp:list
       (common-lisp:cons "HomeRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-endpoint-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-describe-endpoint-response-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-description common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-description
                         :shape "EndpointDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or endpoint-arn common-lisp:null)
                         :accessor struct-shape-describe-endpoint-response-arn
                         :shape "EndpointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-config common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-routing-config
                         :shape "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-event-buses
                         :shape "EndpointEventBusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-id common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-endpoint-id
                         :shape "EndpointId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-url :initarg :endpoint-url :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-url common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-endpoint-url
                         :shape "EndpointUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-state :shape
                         "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-state-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-endpoint-response-state-reason
                         :shape "EndpointStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-endpoint-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-endpoint-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-endpoint-response
                    'make-describe-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-url))
      (common-lisp:list
       (common-lisp:cons "EndpointUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-bus-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor struct-shape-describe-event-bus-request-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-bus-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-event-bus-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-bus-request
                    'make-describe-event-bus-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-bus-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-event-bus-response-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-event-bus-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-describe-event-bus-response-policy :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-bus-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-event-bus-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-bus-response
                    'make-describe-event-bus-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-bus-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-describe-event-source-request-name :shape
                         "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-source-request
                    'make-describe-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-event-source-response-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-event-source-response-created-by
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-event-source-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-time :initarg :expiration-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-event-source-response-expiration-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-event-source-response-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or event-source-state common-lisp:null)
                         :accessor
                         struct-shape-describe-event-source-response-state
                         :shape "EventSourceState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-source-response
                    'make-describe-event-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-partner-event-source-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-describe-partner-event-source-request-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-partner-event-source-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-partner-event-source-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-partner-event-source-request
                    'make-describe-partner-event-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-partner-event-source-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-partner-event-source-response-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-describe-partner-event-source-response-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-partner-event-source-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-partner-event-source-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-partner-event-source-response
                    'make-describe-partner-event-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-partner-event-source-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-replay-request common-lisp:nil
                       ((replay-name :initarg :replay-name :initform
                         (common-lisp:error ":replay-name is required") :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-request-replay-name
                         :shape "ReplayName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-replay-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-replay-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-replay-request 'make-describe-replay-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-name))
      (common-lisp:list
       (common-lisp:cons "ReplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-replay-response common-lisp:nil
                       ((replay-name :initarg :replay-name :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-response-replay-name
                         :shape "ReplayName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replay-arn :initarg :replay-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-arn common-lisp:null) :accessor
                         struct-shape-describe-replay-response-replay-arn
                         :shape "ReplayArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-description common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-response-description
                         :shape "ReplayDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replay-state common-lisp:null)
                         :accessor struct-shape-describe-replay-response-state
                         :shape "ReplayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-state-reason common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-response-state-reason
                         :shape "ReplayStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-describe-replay-response-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-destination common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-response-destination
                         :shape "ReplayDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-start-time :initarg :event-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-replay-response-event-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-end-time :initarg :event-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-replay-response-event-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-last-replayed-time :initarg
                         :event-last-replayed-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-describe-replay-response-event-last-replayed-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replay-start-time :initarg :replay-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-replay-response-replay-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replay-end-time :initarg :replay-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-replay-response-replay-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-replay-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-replay-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-replay-response 'make-describe-replay-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-name))
      (common-lisp:list
       (common-lisp:cons "ReplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-arn))
      (common-lisp:list
       (common-lisp:cons "ReplayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-start-time))
      (common-lisp:list
       (common-lisp:cons "EventStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-end-time))
      (common-lisp:list
       (common-lisp:cons "EventEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-last-replayed-time))
      (common-lisp:list
       (common-lisp:cons "EventLastReplayedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-start-time))
      (common-lisp:list
       (common-lisp:cons "ReplayStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-end-time))
      (common-lisp:list
       (common-lisp:cons "ReplayEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-replay-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-describe-rule-request-name :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-rule-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-rule-request 'make-describe-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-rule-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-describe-rule-response-name :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or rule-arn common-lisp:null) :accessor
                         struct-shape-describe-rule-response-arn :shape
                         "RuleArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor
                         struct-shape-describe-rule-response-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-expression :initarg :schedule-expression
                         :initform common-lisp:nil :type
                         (common-lisp:or schedule-expression common-lisp:null)
                         :accessor
                         struct-shape-describe-rule-response-schedule-expression
                         :shape "ScheduleExpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or rule-state common-lisp:null) :accessor
                         struct-shape-describe-rule-response-state :shape
                         "RuleState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-description common-lisp:null)
                         :accessor
                         struct-shape-describe-rule-response-description :shape
                         "RuleDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor struct-shape-describe-rule-response-role-arn
                         :shape "RoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (managed-by :initarg :managed-by :initform
                         common-lisp:nil :type
                         (common-lisp:or managed-by common-lisp:null) :accessor
                         struct-shape-describe-rule-response-managed-by :shape
                         "ManagedBy" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name common-lisp:null)
                         :accessor
                         struct-shape-describe-rule-response-event-bus-name
                         :shape "EventBusName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or created-by common-lisp:null) :accessor
                         struct-shape-describe-rule-response-created-by :shape
                         "CreatedBy" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-rule-response 'make-describe-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-by))
      (common-lisp:list
       (common-lisp:cons "ManagedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-disable-rule-request-name :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-disable-rule-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disable-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-rule-request 'make-disable-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input disable-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input disable-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input disable-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ecs-parameters common-lisp:nil
                       ((task-definition-arn :initarg :task-definition-arn
                         :initform
                         (common-lisp:error ":task-definition-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-ecs-parameters-task-definition-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (task-count :initarg :task-count :initform
                         common-lisp:nil :type
                         (common-lisp:or limit-min1 common-lisp:null) :accessor
                         struct-shape-ecs-parameters-task-count :shape
                         "LimitMin1" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (launch-type :initarg :launch-type :initform
                         common-lisp:nil :type
                         (common-lisp:or launch-type common-lisp:null)
                         :accessor struct-shape-ecs-parameters-launch-type
                         :shape "LaunchType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (network-configuration :initarg :network-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or network-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-network-configuration
                         :shape "NetworkConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (platform-version :initarg :platform-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ecs-parameters-platform-version :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (group :initarg :group :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ecs-parameters-group :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (capacity-provider-strategy :initarg
                         :capacity-provider-strategy :initform common-lisp:nil
                         :type
                         (common-lisp:or capacity-provider-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-capacity-provider-strategy
                         :shape "CapacityProviderStrategy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enable-ecsmanaged-tags :initarg
                         :enable-ecsmanaged-tags :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-enable-ecsmanaged-tags
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enable-execute-command :initarg
                         :enable-execute-command :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-enable-execute-command
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (placement-constraints :initarg :placement-constraints
                         :initform common-lisp:nil :type
                         (common-lisp:or placement-constraints
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-placement-constraints
                         :shape "PlacementConstraints" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (placement-strategy :initarg :placement-strategy
                         :initform common-lisp:nil :type
                         (common-lisp:or placement-strategies common-lisp:null)
                         :accessor
                         struct-shape-ecs-parameters-placement-strategy :shape
                         "PlacementStrategies" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (propagate-tags :initarg :propagate-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or propagate-tags common-lisp:null)
                         :accessor struct-shape-ecs-parameters-propagate-tags
                         :shape "PropagateTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reference-id :initarg :reference-id :initform
                         common-lisp:nil :type
                         (common-lisp:or reference-id common-lisp:null)
                         :accessor struct-shape-ecs-parameters-reference-id
                         :shape "ReferenceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-ecs-parameters-tags :shape "TagList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecs-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ecs-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ecs-parameters 'make-ecs-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ecs-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ecs-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "TaskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-count))
      (common-lisp:list
       (common-lisp:cons "TaskCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'launch-type))
      (common-lisp:list
       (common-lisp:cons "LaunchType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-configuration))
      (common-lisp:list
       (common-lisp:cons "NetworkConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-version))
      (common-lisp:list
       (common-lisp:cons "PlatformVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group))
      (common-lisp:list
       (common-lisp:cons "Group"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'capacity-provider-strategy))
      (common-lisp:list
       (common-lisp:cons "CapacityProviderStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-ecsmanaged-tags))
      (common-lisp:list
       (common-lisp:cons "EnableECSManagedTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enable-execute-command))
      (common-lisp:list
       (common-lisp:cons "EnableExecuteCommand"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-constraints))
      (common-lisp:list
       (common-lisp:cons "PlacementConstraints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'placement-strategy))
      (common-lisp:list
       (common-lisp:cons "PlacementStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'propagate-tags))
      (common-lisp:list
       (common-lisp:cons "PropagateTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference-id))
      (common-lisp:list
       (common-lisp:cons "ReferenceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ecs-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass enable-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-enable-rule-request-name :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-enable-rule-request-event-bus-name :shape
                         "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enable-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'enable-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enable-rule-request 'make-enable-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enable-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enable-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enable-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-endpoint-name :shape
                         "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-description common-lisp:null)
                         :accessor struct-shape-endpoint-description :shape
                         "EndpointDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or endpoint-arn common-lisp:null)
                         :accessor struct-shape-endpoint-arn :shape
                         "EndpointArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-config common-lisp:null)
                         :accessor struct-shape-endpoint-routing-config :shape
                         "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor struct-shape-endpoint-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-event-buses :shape
                         "EndpointEventBusList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor struct-shape-endpoint-role-arn :shape
                         "IamRoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-id common-lisp:null)
                         :accessor struct-shape-endpoint-endpoint-id :shape
                         "EndpointId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-url :initarg :endpoint-url :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-url common-lisp:null)
                         :accessor struct-shape-endpoint-endpoint-url :shape
                         "EndpointUrl" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor struct-shape-endpoint-state :shape
                         "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-state-reason
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-state-reason :shape
                         "EndpointStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-creation-time :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-endpoint-last-modified-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'endpoint 'make-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-url))
      (common-lisp:list
       (common-lisp:cons "EndpointUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint))
   common-lisp:nil))
(common-lisp:deftype endpoint-arn () 'common-lisp:string)
(common-lisp:deftype endpoint-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass endpoint-event-bus common-lisp:nil
                       ((event-bus-arn :initarg :event-bus-arn :initform
                         (common-lisp:error ":event-bus-arn is required") :type
                         (common-lisp:or non-partner-event-bus-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-event-bus-event-bus-arn :shape
                         "NonPartnerEventBusArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-event-bus
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-event-bus
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-event-bus 'make-endpoint-event-bus))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-event-bus))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-event-bus))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-arn))
      (common-lisp:list
       (common-lisp:cons "EventBusArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-event-bus))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype endpoint-event-bus-list ()
   '(trivial-types:proper-list endpoint-event-bus))
 (common-lisp:defun make-endpoint-event-bus-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-event-bus))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype endpoint-list () '(trivial-types:proper-list endpoint))
 (common-lisp:defun make-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint-name () 'common-lisp:string)
(common-lisp:deftype endpoint-state () 'common-lisp:string)
(common-lisp:deftype endpoint-state-reason () 'common-lisp:string)
(common-lisp:deftype endpoint-url () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event-bus common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-bus-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-bus-arn :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-event-bus-policy :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-bus
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-bus
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-bus 'make-event-bus))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-bus))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-bus))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-bus))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-bus-list () '(trivial-types:proper-list event-bus))
 (common-lisp:defun make-event-bus-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-bus))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-bus-name () 'common-lisp:string)
(common-lisp:deftype event-bus-name-or-arn () 'common-lisp:string)
(common-lisp:deftype event-id () 'common-lisp:string)
(common-lisp:deftype event-pattern () 'common-lisp:string)
(common-lisp:deftype event-resource () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-resource-list ()
   '(trivial-types:proper-list event-resource))
 (common-lisp:defun make-event-resource-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-source common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-source-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-source-created-by :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-event-source-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (expiration-time :initarg :expiration-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-event-source-expiration-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-source-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or event-source-state common-lisp:null)
                         :accessor struct-shape-event-source-state :shape
                         "EventSourceState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-source 'make-event-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-source-list ()
   '(trivial-types:proper-list event-source))
 (common-lisp:defun make-event-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-source))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-source-name () 'common-lisp:string)
(common-lisp:deftype event-source-name-prefix () 'common-lisp:string)
(common-lisp:deftype event-source-state () 'common-lisp:string)
(common-lisp:deftype event-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass failover-config common-lisp:nil
                       ((primary :initarg :primary :initform
                         (common-lisp:error ":primary is required") :type
                         (common-lisp:or primary common-lisp:null) :accessor
                         struct-shape-failover-config-primary :shape "Primary"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (secondary :initarg :secondary :initform
                         (common-lisp:error ":secondary is required") :type
                         (common-lisp:or secondary common-lisp:null) :accessor
                         struct-shape-failover-config-secondary :shape
                         "Secondary" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-failover-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'failover-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'failover-config 'make-failover-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failover-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failover-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary))
      (common-lisp:list
       (common-lisp:cons "Primary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secondary))
      (common-lisp:list
       (common-lisp:cons "Secondary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failover-config))
   common-lisp:nil))
(common-lisp:deftype graph-qloperation () 'common-lisp:string)
(common-lisp:deftype header-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype header-parameters-map () 'common-lisp:hash-table)
 (common-lisp:defun make-header-parameters-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype header-value () 'common-lisp:string)
(common-lisp:deftype header-value-sensitive () 'common-lisp:string)
(common-lisp:deftype health-check () 'common-lisp:string)
(common-lisp:deftype home-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass http-parameters common-lisp:nil
                       ((path-parameter-values :initarg :path-parameter-values
                         :initform common-lisp:nil :type
                         (common-lisp:or path-parameter-list common-lisp:null)
                         :accessor
                         struct-shape-http-parameters-path-parameter-values
                         :shape "PathParameterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (header-parameters :initarg :header-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or header-parameters-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-http-parameters-header-parameters :shape
                         "HeaderParametersMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (query-string-parameters :initarg
                         :query-string-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or query-string-parameters-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-http-parameters-query-string-parameters
                         :shape "QueryStringParametersMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-http-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'http-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'http-parameters 'make-http-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input http-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input http-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-parameter-values))
      (common-lisp:list
       (common-lisp:cons "PathParameterValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-parameters))
      (common-lisp:list
       (common-lisp:cons "HeaderParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'query-string-parameters))
      (common-lisp:list
       (common-lisp:cons "QueryStringParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input http-parameters))
   common-lisp:nil))
(common-lisp:deftype https-endpoint () 'common-lisp:string)
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition illegal-status-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'illegal-status-exception)))
(common-lisp:progn
 (common-lisp:defclass input-transformer common-lisp:nil
                       ((input-paths-map :initarg :input-paths-map :initform
                         common-lisp:nil :type
                         (common-lisp:or transformer-paths common-lisp:null)
                         :accessor
                         struct-shape-input-transformer-input-paths-map :shape
                         "TransformerPaths" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-template :initarg :input-template :initform
                         (common-lisp:error ":input-template is required")
                         :type
                         (common-lisp:or transformer-input common-lisp:null)
                         :accessor
                         struct-shape-input-transformer-input-template :shape
                         "TransformerInput" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-transformer
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-transformer
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'input-transformer 'make-input-transformer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-transformer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-transformer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-paths-map))
      (common-lisp:list
       (common-lisp:cons "InputPathsMap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-template))
      (common-lisp:list
       (common-lisp:cons "InputTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-transformer))
   common-lisp:nil))
(common-lisp:deftype input-transformer-path-key () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'internal-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-event-pattern-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-event-pattern-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-state-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-state-exception)))
(common-lisp:progn
 (common-lisp:defclass kinesis-parameters common-lisp:nil
                       ((partition-key-path :initarg :partition-key-path
                         :initform
                         (common-lisp:error ":partition-key-path is required")
                         :type
                         (common-lisp:or target-partition-key-path
                                         common-lisp:null)
                         :accessor
                         struct-shape-kinesis-parameters-partition-key-path
                         :shape "TargetPartitionKeyPath" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-kinesis-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'kinesis-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'kinesis-parameters 'make-kinesis-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input kinesis-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input kinesis-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'partition-key-path))
      (common-lisp:list
       (common-lisp:cons "PartitionKeyPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input kinesis-parameters))
   common-lisp:nil))
(common-lisp:deftype launch-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:deftype limit-max100 () 'common-lisp:integer)
(common-lisp:deftype limit-min1 () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-api-destinations-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-list-api-destinations-request-name-prefix
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-list-api-destinations-request-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-api-destinations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-api-destinations-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-api-destinations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-api-destinations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-api-destinations-request
                    'make-list-api-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-api-destinations-response common-lisp:nil
                       ((api-destinations :initarg :api-destinations :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-response-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-api-destinations-response-api-destinations
                         :shape "ApiDestinationResponseList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-api-destinations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-api-destinations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-api-destinations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-api-destinations-response
                    'make-list-api-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-destinations))
      (common-lisp:list
       (common-lisp:cons "ApiDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-api-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-archives-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-list-archives-request-name-prefix :shape
                         "ArchiveName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-archives-request-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or archive-state common-lisp:null)
                         :accessor struct-shape-list-archives-request-state
                         :shape "ArchiveState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-archives-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor struct-shape-list-archives-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-archives-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-archives-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-archives-request 'make-list-archives-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-archives-response common-lisp:nil
                       ((archives :initarg :archives :initform common-lisp:nil
                         :type
                         (common-lisp:or archive-response-list
                                         common-lisp:null)
                         :accessor struct-shape-list-archives-response-archives
                         :shape "ArchiveResponseList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-archives-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-archives-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-archives-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-archives-response 'make-list-archives-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archives))
      (common-lisp:list
       (common-lisp:cons "Archives"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-archives-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connections-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor
                         struct-shape-list-connections-request-name-prefix
                         :shape "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-list-connections-request-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-connections-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor struct-shape-list-connections-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-connections-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-connections-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-connections-request 'make-list-connections-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-connections-response common-lisp:nil
                       ((connections :initarg :connections :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-response-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-connections-response-connections
                         :shape "ConnectionResponseList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-connections-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-connections-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-connections-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-connections-response
                    'make-list-connections-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connections))
      (common-lisp:list
       (common-lisp:cons "Connections"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-connections-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-endpoints-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-request-name-prefix :shape
                         "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (home-region :initarg :home-region :initform
                         common-lisp:nil :type
                         (common-lisp:or home-region common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-request-home-region :shape
                         "HomeRegion" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-endpoints-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-request-max-results :shape
                         "LimitMax100" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-request 'make-list-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'home-region))
      (common-lisp:list
       (common-lisp:cons "HomeRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-endpoints-response common-lisp:nil
                       ((endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-list common-lisp:null)
                         :accessor
                         struct-shape-list-endpoints-response-endpoints :shape
                         "EndpointList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-endpoints-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-endpoints-response 'make-list-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-buses-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name common-lisp:null)
                         :accessor
                         struct-shape-list-event-buses-request-name-prefix
                         :shape "EventBusName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-buses-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor struct-shape-list-event-buses-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-buses-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-event-buses-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-buses-request 'make-list-event-buses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-buses-response common-lisp:nil
                       ((event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-list common-lisp:null)
                         :accessor
                         struct-shape-list-event-buses-response-event-buses
                         :shape "EventBusList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-buses-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-buses-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-event-buses-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-buses-response
                    'make-list-event-buses-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-buses-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-sources-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or event-source-name-prefix
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-event-sources-request-name-prefix
                         :shape "EventSourceNamePrefix" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-sources-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-event-sources-request-limit :shape
                         "LimitMax100" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-sources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-event-sources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-sources-request
                    'make-list-event-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-sources-response common-lisp:nil
                       ((event-sources :initarg :event-sources :initform
                         common-lisp:nil :type
                         (common-lisp:or event-source-list common-lisp:null)
                         :accessor
                         struct-shape-list-event-sources-response-event-sources
                         :shape "EventSourceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-sources-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-sources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-event-sources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-sources-response
                    'make-list-event-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-sources))
      (common-lisp:list
       (common-lisp:cons "EventSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-partner-event-source-accounts-request
                       common-lisp:nil
                       ((event-source-name :initarg :event-source-name
                         :initform
                         (common-lisp:error ":event-source-name is required")
                         :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-source-accounts-request-event-source-name
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-partner-event-source-accounts-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-source-accounts-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-partner-event-source-accounts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-partner-event-source-accounts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-partner-event-source-accounts-request
                    'make-list-partner-event-source-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-name))
      (common-lisp:list
       (common-lisp:cons "EventSourceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-partner-event-source-accounts-response
                       common-lisp:nil
                       ((partner-event-source-accounts :initarg
                         :partner-event-source-accounts :initform
                         common-lisp:nil :type
                         (common-lisp:or partner-event-source-account-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-source-accounts-response-partner-event-source-accounts
                         :shape "PartnerEventSourceAccountList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-partner-event-source-accounts-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-partner-event-source-accounts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-partner-event-source-accounts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-partner-event-source-accounts-response
                    'make-list-partner-event-source-accounts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partner-event-source-accounts))
      (common-lisp:list
       (common-lisp:cons "PartnerEventSourceAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-source-accounts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-partner-event-sources-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         (common-lisp:error ":name-prefix is required") :type
                         (common-lisp:or partner-event-source-name-prefix
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-sources-request-name-prefix
                         :shape "PartnerEventSourceNamePrefix" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-partner-event-sources-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-sources-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-partner-event-sources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-partner-event-sources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-partner-event-sources-request
                    'make-list-partner-event-sources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-partner-event-sources-response common-lisp:nil
                       ((partner-event-sources :initarg :partner-event-sources
                         :initform common-lisp:nil :type
                         (common-lisp:or partner-event-source-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-partner-event-sources-response-partner-event-sources
                         :shape "PartnerEventSourceList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-partner-event-sources-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-partner-event-sources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-partner-event-sources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-partner-event-sources-response
                    'make-list-partner-event-sources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'partner-event-sources))
      (common-lisp:list
       (common-lisp:cons "PartnerEventSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-partner-event-sources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-replays-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor
                         struct-shape-list-replays-request-name-prefix :shape
                         "ReplayName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replay-state common-lisp:null)
                         :accessor struct-shape-list-replays-request-state
                         :shape "ReplayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-replays-request-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-replays-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor struct-shape-list-replays-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-replays-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-replays-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-replays-request 'make-list-replays-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-replays-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-replays-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-replays-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-replays-response common-lisp:nil
                       ((replays :initarg :replays :initform common-lisp:nil
                         :type (common-lisp:or replay-list common-lisp:null)
                         :accessor struct-shape-list-replays-response-replays
                         :shape "ReplayList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-replays-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-replays-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-replays-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-replays-response 'make-list-replays-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-replays-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-replays-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replays))
      (common-lisp:list
       (common-lisp:cons "Replays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-replays-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rule-names-by-target-request common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-list-rule-names-by-target-request-target-arn
                         :shape "TargetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-rule-names-by-target-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rule-names-by-target-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-rule-names-by-target-request-limit
                         :shape "LimitMax100" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rule-names-by-target-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-rule-names-by-target-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rule-names-by-target-request
                    'make-list-rule-names-by-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rule-names-by-target-response common-lisp:nil
                       ((rule-names :initarg :rule-names :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-name-list common-lisp:null)
                         :accessor
                         struct-shape-list-rule-names-by-target-response-rule-names
                         :shape "RuleNameList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rule-names-by-target-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rule-names-by-target-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-rule-names-by-target-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rule-names-by-target-response
                    'make-list-rule-names-by-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-names))
      (common-lisp:list
       (common-lisp:cons "RuleNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-rule-names-by-target-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-request common-lisp:nil
                       ((name-prefix :initarg :name-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-list-rules-request-name-prefix :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-rules-request-event-bus-name :shape
                         "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rules-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor struct-shape-list-rules-request-limit :shape
                         "LimitMax100" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-prefix))
      (common-lisp:list
       (common-lisp:cons "NamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-response common-lisp:nil
                       ((rules :initarg :rules :initform common-lisp:nil :type
                         (common-lisp:or rule-response-list common-lisp:null)
                         :accessor struct-shape-list-rules-response-rules
                         :shape "RuleResponseList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rules-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-targets-by-rule-request common-lisp:nil
                       ((rule :initarg :rule :initform
                         (common-lisp:error ":rule is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-list-targets-by-rule-request-rule :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-targets-by-rule-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-targets-by-rule-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or limit-max100 common-lisp:null)
                         :accessor
                         struct-shape-list-targets-by-rule-request-limit :shape
                         "LimitMax100" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-targets-by-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-targets-by-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-targets-by-rule-request
                    'make-list-targets-by-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule))
      (common-lisp:list
       (common-lisp:cons "Rule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-targets-by-rule-response common-lisp:nil
                       ((targets :initarg :targets :initform common-lisp:nil
                         :type (common-lisp:or target-list common-lisp:null)
                         :accessor
                         struct-shape-list-targets-by-rule-response-targets
                         :shape "TargetList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-targets-by-rule-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-targets-by-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-targets-by-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-targets-by-rule-response
                    'make-list-targets-by-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'targets))
      (common-lisp:list
       (common-lisp:cons "Targets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-targets-by-rule-response))
   common-lisp:nil))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype managed-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition managed-rule-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'managed-rule-exception)))
(common-lisp:deftype maximum-event-age-in-seconds () 'common-lisp:integer)
(common-lisp:deftype maximum-retry-attempts () 'common-lisp:integer)
(common-lisp:deftype message-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass network-configuration common-lisp:nil
                       ((awsvpc-configuration :initarg :awsvpc-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or aws-vpc-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-network-configuration-awsvpc-configuration
                         :shape "AwsVpcConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-network-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'network-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'network-configuration 'make-network-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          network-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          network-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'awsvpc-configuration))
      (common-lisp:list
       (common-lisp:cons "awsvpcConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          network-configuration))
   common-lisp:nil))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-partner-event-bus-arn () 'common-lisp:string)
(common-lisp:deftype non-partner-event-bus-name () 'common-lisp:string)
(common-lisp:deftype non-partner-event-bus-name-or-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition operation-disabled-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'operation-disabled-exception)))
(common-lisp:progn
 (common-lisp:defclass partner-event-source common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-partner-event-source-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-partner-event-source-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-partner-event-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'partner-event-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'partner-event-source 'make-partner-event-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input partner-event-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input partner-event-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input partner-event-source))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass partner-event-source-account common-lisp:nil
                       ((account :initarg :account :initform common-lisp:nil
                         :type (common-lisp:or account-id common-lisp:null)
                         :accessor
                         struct-shape-partner-event-source-account-account
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-partner-event-source-account-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-time :initarg :expiration-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-partner-event-source-account-expiration-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or event-source-state common-lisp:null)
                         :accessor
                         struct-shape-partner-event-source-account-state :shape
                         "EventSourceState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-partner-event-source-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'partner-event-source-account
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'partner-event-source-account
                    'make-partner-event-source-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          partner-event-source-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          partner-event-source-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account))
      (common-lisp:list
       (common-lisp:cons "Account"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-time))
      (common-lisp:list
       (common-lisp:cons "ExpirationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          partner-event-source-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype partner-event-source-account-list ()
   '(trivial-types:proper-list partner-event-source-account))
 (common-lisp:defun make-partner-event-source-account-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            partner-event-source-account))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype partner-event-source-list ()
   '(trivial-types:proper-list partner-event-source))
 (common-lisp:defun make-partner-event-source-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list partner-event-source))
   aws-sdk/generator/shape::members))
(common-lisp:deftype partner-event-source-name-prefix () 'common-lisp:string)
(common-lisp:deftype path-parameter () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype path-parameter-list ()
   '(trivial-types:proper-list path-parameter))
 (common-lisp:defun make-path-parameter-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list path-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass placement-constraint common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or placement-constraint-type
                                         common-lisp:null)
                         :accessor struct-shape-placement-constraint-type
                         :shape "PlacementConstraintType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (expression :initarg :expression :initform
                         common-lisp:nil :type
                         (common-lisp:or placement-constraint-expression
                                         common-lisp:null)
                         :accessor struct-shape-placement-constraint-expression
                         :shape "PlacementConstraintExpression" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-placement-constraint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'placement-constraint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'placement-constraint 'make-placement-constraint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-constraint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-constraint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expression))
      (common-lisp:list
       (common-lisp:cons "expression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-constraint))
   common-lisp:nil))
(common-lisp:deftype placement-constraint-expression () 'common-lisp:string)
(common-lisp:deftype placement-constraint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype placement-constraints ()
   '(trivial-types:proper-list placement-constraint))
 (common-lisp:defun make-placement-constraints
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list placement-constraint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype placement-strategies ()
   '(trivial-types:proper-list placement-strategy))
 (common-lisp:defun make-placement-strategies
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list placement-strategy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass placement-strategy common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or placement-strategy-type
                                         common-lisp:null)
                         :accessor struct-shape-placement-strategy-type :shape
                         "PlacementStrategyType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (field :initarg :field :initform common-lisp:nil :type
                         (common-lisp:or placement-strategy-field
                                         common-lisp:null)
                         :accessor struct-shape-placement-strategy-field :shape
                         "PlacementStrategyField" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-placement-strategy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'placement-strategy
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'placement-strategy 'make-placement-strategy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-strategy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-strategy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'field))
      (common-lisp:list
       (common-lisp:cons "field"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-strategy))
   common-lisp:nil))
(common-lisp:deftype placement-strategy-field () 'common-lisp:string)
(common-lisp:deftype placement-strategy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition policy-length-exceeded-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'policy-length-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defclass primary common-lisp:nil
                       ((health-check :initarg :health-check :initform
                         (common-lisp:error ":health-check is required") :type
                         (common-lisp:or health-check common-lisp:null)
                         :accessor struct-shape-primary-health-check :shape
                         "HealthCheck" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-primary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'primary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'primary 'make-primary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input primary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input primary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'health-check))
      (common-lisp:list
       (common-lisp:cons "HealthCheck"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input primary))
   common-lisp:nil))
(common-lisp:deftype principal () 'common-lisp:string)
(common-lisp:deftype propagate-tags () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-events-request common-lisp:nil
                       ((entries :initarg :entries :initform
                         (common-lisp:error ":entries is required") :type
                         (common-lisp:or put-events-request-entry-list
                                         common-lisp:null)
                         :accessor struct-shape-put-events-request-entries
                         :shape "PutEventsRequestEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-id common-lisp:null)
                         :accessor struct-shape-put-events-request-endpoint-id
                         :shape "EndpointId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-request 'make-put-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-events-request-entry common-lisp:nil
                       ((time :initarg :time :initform common-lisp:nil :type
                         (common-lisp:or event-time common-lisp:null) :accessor
                         struct-shape-put-events-request-entry-time :shape
                         "EventTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source :initarg :source :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-put-events-request-entry-source
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or event-resource-list common-lisp:null)
                         :accessor
                         struct-shape-put-events-request-entry-resources :shape
                         "EventResourceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detail-type :initarg :detail-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-events-request-entry-detail-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detail :initarg :detail :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-put-events-request-entry-detail
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or non-partner-event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-events-request-entry-event-bus-name
                         :shape "NonPartnerEventBusNameOrArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trace-header :initarg :trace-header :initform
                         common-lisp:nil :type
                         (common-lisp:or trace-header common-lisp:null)
                         :accessor
                         struct-shape-put-events-request-entry-trace-header
                         :shape "TraceHeader" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-request-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-request-entry 'make-put-events-request-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-events-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-events-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time))
      (common-lisp:list
       (common-lisp:cons "Time"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detail-type))
      (common-lisp:list
       (common-lisp:cons "DetailType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detail))
      (common-lisp:list
       (common-lisp:cons "Detail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-header))
      (common-lisp:list
       (common-lisp:cons "TraceHeader"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-events-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype put-events-request-entry-list ()
   '(trivial-types:proper-list put-events-request-entry))
 (common-lisp:defun make-put-events-request-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-events-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-events-response common-lisp:nil
                       ((failed-entry-count :initarg :failed-entry-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-put-events-response-failed-entry-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entries :initarg :entries :initform common-lisp:nil
                         :type
                         (common-lisp:or put-events-result-entry-list
                                         common-lisp:null)
                         :accessor struct-shape-put-events-response-entries
                         :shape "PutEventsResultEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-response 'make-put-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entry-count))
      (common-lisp:list
       (common-lisp:cons "FailedEntryCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-events-result-entry common-lisp:nil
                       ((event-id :initarg :event-id :initform common-lisp:nil
                         :type (common-lisp:or event-id common-lisp:null)
                         :accessor
                         struct-shape-put-events-result-entry-event-id :shape
                         "EventId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-put-events-result-entry-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         struct-shape-put-events-result-entry-error-message
                         :shape "ErrorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-result-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-result-entry 'make-put-events-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-events-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-events-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "EventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-events-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype put-events-result-entry-list ()
   '(trivial-types:proper-list put-events-result-entry))
 (common-lisp:defun make-put-events-result-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list put-events-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-partner-events-request common-lisp:nil
                       ((entries :initarg :entries :initform
                         (common-lisp:error ":entries is required") :type
                         (common-lisp:or put-partner-events-request-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-request-entries :shape
                         "PutPartnerEventsRequestEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-partner-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-partner-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-partner-events-request
                    'make-put-partner-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-partner-events-request-entry common-lisp:nil
                       ((time :initarg :time :initform common-lisp:nil :type
                         (common-lisp:or event-time common-lisp:null) :accessor
                         struct-shape-put-partner-events-request-entry-time
                         :shape "EventTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or event-source-name common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-request-entry-source
                         :shape "EventSourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or event-resource-list common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-request-entry-resources
                         :shape "EventResourceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detail-type :initarg :detail-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-partner-events-request-entry-detail-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detail :initarg :detail :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-request-entry-detail
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-partner-events-request-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-partner-events-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-partner-events-request-entry
                    'make-put-partner-events-request-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time))
      (common-lisp:list
       (common-lisp:cons "Time"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detail-type))
      (common-lisp:list
       (common-lisp:cons "DetailType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detail))
      (common-lisp:list
       (common-lisp:cons "Detail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype put-partner-events-request-entry-list ()
   '(trivial-types:proper-list put-partner-events-request-entry))
 (common-lisp:defun make-put-partner-events-request-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-partner-events-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-partner-events-response common-lisp:nil
                       ((failed-entry-count :initarg :failed-entry-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-put-partner-events-response-failed-entry-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entries :initarg :entries :initform common-lisp:nil
                         :type
                         (common-lisp:or put-partner-events-result-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-response-entries
                         :shape "PutPartnerEventsResultEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-partner-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-partner-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-partner-events-response
                    'make-put-partner-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entry-count))
      (common-lisp:list
       (common-lisp:cons "FailedEntryCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-partner-events-result-entry common-lisp:nil
                       ((event-id :initarg :event-id :initform common-lisp:nil
                         :type (common-lisp:or event-id common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-result-entry-event-id
                         :shape "EventId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-put-partner-events-result-entry-error-code
                         :shape "ErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         struct-shape-put-partner-events-result-entry-error-message
                         :shape "ErrorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-partner-events-result-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-partner-events-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-partner-events-result-entry
                    'make-put-partner-events-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "EventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-partner-events-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype put-partner-events-result-entry-list ()
   '(trivial-types:proper-list put-partner-events-result-entry))
 (common-lisp:defun make-put-partner-events-result-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-partner-events-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-permission-request common-lisp:nil
                       ((event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or non-partner-event-bus-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-permission-request-event-bus-name
                         :shape "NonPartnerEventBusName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-put-permission-request-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (principal :initarg :principal :initform
                         common-lisp:nil :type
                         (common-lisp:or principal common-lisp:null) :accessor
                         struct-shape-put-permission-request-principal :shape
                         "Principal" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (statement-id :initarg :statement-id :initform
                         common-lisp:nil :type
                         (common-lisp:or statement-id common-lisp:null)
                         :accessor
                         struct-shape-put-permission-request-statement-id
                         :shape "StatementId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (condition :initarg :condition :initform
                         common-lisp:nil :type
                         (common-lisp:or condition common-lisp:null) :accessor
                         struct-shape-put-permission-request-condition :shape
                         "Condition" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-put-permission-request-policy
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-permission-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-permission-request 'make-put-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal))
      (common-lisp:list
       (common-lisp:cons "Principal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statement-id))
      (common-lisp:list
       (common-lisp:cons "StatementId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "Condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "Policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-rule-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-put-rule-request-name :shape "RuleName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule-expression :initarg :schedule-expression
                         :initform common-lisp:nil :type
                         (common-lisp:or schedule-expression common-lisp:null)
                         :accessor
                         struct-shape-put-rule-request-schedule-expression
                         :shape "ScheduleExpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor struct-shape-put-rule-request-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or rule-state common-lisp:null) :accessor
                         struct-shape-put-rule-request-state :shape "RuleState"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-description common-lisp:null)
                         :accessor struct-shape-put-rule-request-description
                         :shape "RuleDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor struct-shape-put-rule-request-role-arn
                         :shape "RoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-put-rule-request-tags :shape "TagList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor struct-shape-put-rule-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-rule-request 'make-put-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-rule-response common-lisp:nil
                       ((rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-put-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-rule-response 'make-put-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-targets-request common-lisp:nil
                       ((rule :initarg :rule :initform
                         (common-lisp:error ":rule is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-put-targets-request-rule :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-targets-request-event-bus-name :shape
                         "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (targets :initarg :targets :initform
                         (common-lisp:error ":targets is required") :type
                         (common-lisp:or target-list common-lisp:null)
                         :accessor struct-shape-put-targets-request-targets
                         :shape "TargetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-targets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-targets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-targets-request 'make-put-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-targets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-targets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule))
      (common-lisp:list
       (common-lisp:cons "Rule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'targets))
      (common-lisp:list
       (common-lisp:cons "Targets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-targets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-targets-response common-lisp:nil
                       ((failed-entry-count :initarg :failed-entry-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-put-targets-response-failed-entry-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-entries :initarg :failed-entries :initform
                         common-lisp:nil :type
                         (common-lisp:or put-targets-result-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-targets-response-failed-entries
                         :shape "PutTargetsResultEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-targets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-targets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-targets-response 'make-put-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-targets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-targets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entry-count))
      (common-lisp:list
       (common-lisp:cons "FailedEntryCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entries))
      (common-lisp:list
       (common-lisp:cons "FailedEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-targets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-targets-result-entry common-lisp:nil
                       ((target-id :initarg :target-id :initform
                         common-lisp:nil :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-put-targets-result-entry-target-id :shape
                         "TargetId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-put-targets-result-entry-error-code
                         :shape "ErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         struct-shape-put-targets-result-entry-error-message
                         :shape "ErrorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-targets-result-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-targets-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-targets-result-entry 'make-put-targets-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-targets-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-targets-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-targets-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype put-targets-result-entry-list ()
   '(trivial-types:proper-list put-targets-result-entry))
 (common-lisp:defun make-put-targets-result-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-targets-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype query-string-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype query-string-parameters-map () 'common-lisp:hash-table)
 (common-lisp:defun make-query-string-parameters-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype query-string-value () 'common-lisp:string)
(common-lisp:deftype query-string-value-sensitive () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass redshift-data-parameters common-lisp:nil
                       ((secret-manager-arn :initarg :secret-manager-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or redshift-secret-manager-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-redshift-data-parameters-secret-manager-arn
                         :shape "RedshiftSecretManagerArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (database :initarg :database :initform
                         (common-lisp:error ":database is required") :type
                         (common-lisp:or database common-lisp:null) :accessor
                         struct-shape-redshift-data-parameters-database :shape
                         "Database" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (db-user :initarg :db-user :initform common-lisp:nil
                         :type (common-lisp:or db-user common-lisp:null)
                         :accessor
                         struct-shape-redshift-data-parameters-db-user :shape
                         "DbUser" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sql :initarg :sql :initform common-lisp:nil :type
                         (common-lisp:or sql common-lisp:null) :accessor
                         struct-shape-redshift-data-parameters-sql :shape "Sql"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (statement-name :initarg :statement-name :initform
                         common-lisp:nil :type
                         (common-lisp:or statement-name common-lisp:null)
                         :accessor
                         struct-shape-redshift-data-parameters-statement-name
                         :shape "StatementName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (with-event :initarg :with-event :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-redshift-data-parameters-with-event
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sqls :initarg :sqls :initform common-lisp:nil :type
                         (common-lisp:or sqls common-lisp:null) :accessor
                         struct-shape-redshift-data-parameters-sqls :shape
                         "Sqls" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redshift-data-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'redshift-data-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redshift-data-parameters 'make-redshift-data-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-manager-arn))
      (common-lisp:list
       (common-lisp:cons "SecretManagerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'database))
      (common-lisp:list
       (common-lisp:cons "Database"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'db-user))
      (common-lisp:list
       (common-lisp:cons "DbUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sql))
      (common-lisp:list
       (common-lisp:cons "Sql"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statement-name))
      (common-lisp:list
       (common-lisp:cons "StatementName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'with-event))
      (common-lisp:list
       (common-lisp:cons "WithEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqls))
      (common-lisp:list
       (common-lisp:cons "Sqls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redshift-data-parameters))
   common-lisp:nil))
(common-lisp:deftype redshift-secret-manager-arn () 'common-lisp:string)
(common-lisp:deftype reference-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass remove-permission-request common-lisp:nil
                       ((statement-id :initarg :statement-id :initform
                         common-lisp:nil :type
                         (common-lisp:or statement-id common-lisp:null)
                         :accessor
                         struct-shape-remove-permission-request-statement-id
                         :shape "StatementId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (remove-all-permissions :initarg
                         :remove-all-permissions :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-remove-permission-request-remove-all-permissions
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or non-partner-event-bus-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-remove-permission-request-event-bus-name
                         :shape "NonPartnerEventBusName" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-permission-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-permission-request
                    'make-remove-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statement-id))
      (common-lisp:list
       (common-lisp:cons "StatementId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'remove-all-permissions))
      (common-lisp:list
       (common-lisp:cons "RemoveAllPermissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-targets-request common-lisp:nil
                       ((rule :initarg :rule :initform
                         (common-lisp:error ":rule is required") :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-remove-targets-request-rule :shape
                         "RuleName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name-or-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-remove-targets-request-event-bus-name
                         :shape "EventBusNameOrArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ids :initarg :ids :initform
                         (common-lisp:error ":ids is required") :type
                         (common-lisp:or target-id-list common-lisp:null)
                         :accessor struct-shape-remove-targets-request-ids
                         :shape "TargetIdList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (force :initarg :force :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-remove-targets-request-force :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-targets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-targets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-targets-request 'make-remove-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule))
      (common-lisp:list
       (common-lisp:cons "Rule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "Ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force))
      (common-lisp:list
       (common-lisp:cons "Force"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-targets-response common-lisp:nil
                       ((failed-entry-count :initarg :failed-entry-count
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-remove-targets-response-failed-entry-count
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-entries :initarg :failed-entries :initform
                         common-lisp:nil :type
                         (common-lisp:or remove-targets-result-entry-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-remove-targets-response-failed-entries
                         :shape "RemoveTargetsResultEntryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-targets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-targets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-targets-response 'make-remove-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entry-count))
      (common-lisp:list
       (common-lisp:cons "FailedEntryCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-entries))
      (common-lisp:list
       (common-lisp:cons "FailedEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-targets-result-entry common-lisp:nil
                       ((target-id :initarg :target-id :initform
                         common-lisp:nil :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-remove-targets-result-entry-target-id
                         :shape "TargetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-remove-targets-result-entry-error-code
                         :shape "ErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         struct-shape-remove-targets-result-entry-error-message
                         :shape "ErrorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-targets-result-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-targets-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-targets-result-entry
                    'make-remove-targets-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-id))
      (common-lisp:list
       (common-lisp:cons "TargetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-targets-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype remove-targets-result-entry-list ()
   '(trivial-types:proper-list remove-targets-result-entry))
 (common-lisp:defun make-remove-targets-result-entry-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            remove-targets-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass replay common-lisp:nil
                       ((replay-name :initarg :replay-name :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor struct-shape-replay-replay-name :shape
                         "ReplayName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-replay-event-source-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replay-state common-lisp:null)
                         :accessor struct-shape-replay-state :shape
                         "ReplayState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-state-reason common-lisp:null)
                         :accessor struct-shape-replay-state-reason :shape
                         "ReplayStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-start-time :initarg :event-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-replay-event-start-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-end-time :initarg :event-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-replay-event-end-time :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-last-replayed-time :initarg
                         :event-last-replayed-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-replay-event-last-replayed-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replay-start-time :initarg :replay-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-replay-replay-start-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (replay-end-time :initarg :replay-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-replay-replay-end-time :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replay
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replay
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'replay 'make-replay))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replay))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replay))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-name))
      (common-lisp:list
       (common-lisp:cons "ReplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-start-time))
      (common-lisp:list
       (common-lisp:cons "EventStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-end-time))
      (common-lisp:list
       (common-lisp:cons "EventEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-last-replayed-time))
      (common-lisp:list
       (common-lisp:cons "EventLastReplayedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-start-time))
      (common-lisp:list
       (common-lisp:cons "ReplayStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-end-time))
      (common-lisp:list
       (common-lisp:cons "ReplayEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replay))
   common-lisp:nil))
(common-lisp:deftype replay-arn () 'common-lisp:string)
(common-lisp:deftype replay-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass replay-destination common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-replay-destination-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-arns :initarg :filter-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-destination-filters
                                         common-lisp:null)
                         :accessor struct-shape-replay-destination-filter-arns
                         :shape "ReplayDestinationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replay-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replay-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'replay-destination 'make-replay-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replay-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replay-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-arns))
      (common-lisp:list
       (common-lisp:cons "FilterArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replay-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype replay-destination-filters ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun make-replay-destination-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype replay-list () '(trivial-types:proper-list replay))
 (common-lisp:defun make-replay-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replay))
   aws-sdk/generator/shape::members))
(common-lisp:deftype replay-name () 'common-lisp:string)
(common-lisp:deftype replay-state () 'common-lisp:string)
(common-lisp:deftype replay-state-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass replication-config common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replication-state common-lisp:null)
                         :accessor struct-shape-replication-config-state :shape
                         "ReplicationState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-replication-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'replication-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'replication-config 'make-replication-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input replication-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input replication-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input replication-config))
   common-lisp:nil))
(common-lisp:deftype replication-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-already-exists-exception)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (eventbridge-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-not-found-exception)))
(common-lisp:deftype retention-days () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass retry-policy common-lisp:nil
                       ((maximum-retry-attempts :initarg
                         :maximum-retry-attempts :initform common-lisp:nil
                         :type
                         (common-lisp:or maximum-retry-attempts
                                         common-lisp:null)
                         :accessor
                         struct-shape-retry-policy-maximum-retry-attempts
                         :shape "MaximumRetryAttempts" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (maximum-event-age-in-seconds :initarg
                         :maximum-event-age-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or maximum-event-age-in-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-retry-policy-maximum-event-age-in-seconds
                         :shape "MaximumEventAgeInSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retry-policy
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retry-policy
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'retry-policy 'make-retry-policy))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input retry-policy))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input retry-policy))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-retry-attempts))
      (common-lisp:list
       (common-lisp:cons "MaximumRetryAttempts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-event-age-in-seconds))
      (common-lisp:list
       (common-lisp:cons "MaximumEventAgeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input retry-policy))
   common-lisp:nil))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:deftype route () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass routing-config common-lisp:nil
                       ((failover-config :initarg :failover-config :initform
                         (common-lisp:error ":failover-config is required")
                         :type
                         (common-lisp:or failover-config common-lisp:null)
                         :accessor struct-shape-routing-config-failover-config
                         :shape "FailoverConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-routing-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'routing-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'routing-config 'make-routing-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routing-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routing-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failover-config))
      (common-lisp:list
       (common-lisp:cons "FailoverConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routing-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rule common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or rule-name common-lisp:null) :accessor
                         struct-shape-rule-name :shape "RuleName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or rule-arn common-lisp:null) :accessor
                         struct-shape-rule-arn :shape "RuleArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor struct-shape-rule-event-pattern :shape
                         "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or rule-state common-lisp:null) :accessor
                         struct-shape-rule-state :shape "RuleState" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-description common-lisp:null)
                         :accessor struct-shape-rule-description :shape
                         "RuleDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-expression :initarg :schedule-expression
                         :initform common-lisp:nil :type
                         (common-lisp:or schedule-expression common-lisp:null)
                         :accessor struct-shape-rule-schedule-expression :shape
                         "ScheduleExpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor struct-shape-rule-role-arn :shape "RoleArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (managed-by :initarg :managed-by :initform
                         common-lisp:nil :type
                         (common-lisp:or managed-by common-lisp:null) :accessor
                         struct-shape-rule-managed-by :shape "ManagedBy"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bus-name :initarg :event-bus-name :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bus-name common-lisp:null)
                         :accessor struct-shape-rule-event-bus-name :shape
                         "EventBusName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rule (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'managed-by))
      (common-lisp:list
       (common-lisp:cons "ManagedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bus-name))
      (common-lisp:list
       (common-lisp:cons "EventBusName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule))
   common-lisp:nil))
(common-lisp:deftype rule-arn () 'common-lisp:string)
(common-lisp:deftype rule-description () 'common-lisp:string)
(common-lisp:deftype rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-name-list () '(trivial-types:proper-list rule-name))
 (common-lisp:defun make-rule-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype rule-response-list () '(trivial-types:proper-list rule))
 (common-lisp:defun make-rule-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass run-command-parameters common-lisp:nil
                       ((run-command-targets :initarg :run-command-targets
                         :initform
                         (common-lisp:error ":run-command-targets is required")
                         :type
                         (common-lisp:or run-command-targets common-lisp:null)
                         :accessor
                         struct-shape-run-command-parameters-run-command-targets
                         :shape "RunCommandTargets" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-run-command-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'run-command-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'run-command-parameters 'make-run-command-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          run-command-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          run-command-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-command-targets))
      (common-lisp:list
       (common-lisp:cons "RunCommandTargets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          run-command-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass run-command-target common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or run-command-target-key
                                         common-lisp:null)
                         :accessor struct-shape-run-command-target-key :shape
                         "RunCommandTargetKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or run-command-target-values
                                         common-lisp:null)
                         :accessor struct-shape-run-command-target-values
                         :shape "RunCommandTargetValues" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-run-command-target
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'run-command-target
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'run-command-target 'make-run-command-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input run-command-target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input run-command-target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input run-command-target))
   common-lisp:nil))
(common-lisp:deftype run-command-target-key () 'common-lisp:string)
(common-lisp:deftype run-command-target-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype run-command-target-values ()
   '(trivial-types:proper-list run-command-target-value))
 (common-lisp:defun make-run-command-target-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            run-command-target-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype run-command-targets ()
   '(trivial-types:proper-list run-command-target))
 (common-lisp:defun make-run-command-targets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list run-command-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sage-maker-pipeline-parameter common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or sage-maker-pipeline-parameter-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-sage-maker-pipeline-parameter-name :shape
                         "SageMakerPipelineParameterName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or sage-maker-pipeline-parameter-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-sage-maker-pipeline-parameter-value
                         :shape "SageMakerPipelineParameterValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sage-maker-pipeline-parameter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sage-maker-pipeline-parameter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sage-maker-pipeline-parameter
                    'make-sage-maker-pipeline-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sage-maker-pipeline-parameter-list ()
   '(trivial-types:proper-list sage-maker-pipeline-parameter))
 (common-lisp:defun make-sage-maker-pipeline-parameter-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sage-maker-pipeline-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sage-maker-pipeline-parameter-name () 'common-lisp:string)
(common-lisp:deftype sage-maker-pipeline-parameter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sage-maker-pipeline-parameters common-lisp:nil
                       ((pipeline-parameter-list :initarg
                         :pipeline-parameter-list :initform common-lisp:nil
                         :type
                         (common-lisp:or sage-maker-pipeline-parameter-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-sage-maker-pipeline-parameters-pipeline-parameter-list
                         :shape "SageMakerPipelineParameterList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sage-maker-pipeline-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'sage-maker-pipeline-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sage-maker-pipeline-parameters
                    'make-sage-maker-pipeline-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pipeline-parameter-list))
      (common-lisp:list
       (common-lisp:cons "PipelineParameterList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sage-maker-pipeline-parameters))
   common-lisp:nil))
(common-lisp:deftype schedule-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass secondary common-lisp:nil
                       ((route :initarg :route :initform
                         (common-lisp:error ":route is required") :type
                         (common-lisp:or route common-lisp:null) :accessor
                         struct-shape-secondary-route :shape "Route" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-secondary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'secondary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'secondary 'make-secondary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input secondary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input secondary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'route))
      (common-lisp:list
       (common-lisp:cons "Route"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input secondary))
   common-lisp:nil))
(common-lisp:deftype secrets-manager-secret-arn () 'common-lisp:string)
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:deftype sql () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype sqls () '(trivial-types:proper-list sql))
 (common-lisp:defun make-sqls
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sql))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass sqs-parameters common-lisp:nil
                       ((message-group-id :initarg :message-group-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-group-id common-lisp:null)
                         :accessor struct-shape-sqs-parameters-message-group-id
                         :shape "MessageGroupId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sqs-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sqs-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sqs-parameters 'make-sqs-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sqs-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sqs-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-group-id))
      (common-lisp:list
       (common-lisp:cons "MessageGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sqs-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-replay-request common-lisp:nil
                       ((replay-name :initarg :replay-name :initform
                         (common-lisp:error ":replay-name is required") :type
                         (common-lisp:or replay-name common-lisp:null)
                         :accessor
                         struct-shape-start-replay-request-replay-name :shape
                         "ReplayName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-description common-lisp:null)
                         :accessor
                         struct-shape-start-replay-request-description :shape
                         "ReplayDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-source-arn :initarg :event-source-arn :initform
                         (common-lisp:error ":event-source-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-start-replay-request-event-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-start-time :initarg :event-start-time :initform
                         (common-lisp:error ":event-start-time is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-start-replay-request-event-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-end-time :initarg :event-end-time :initform
                         (common-lisp:error ":event-end-time is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-start-replay-request-event-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or replay-destination common-lisp:null)
                         :accessor
                         struct-shape-start-replay-request-destination :shape
                         "ReplayDestination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-replay-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-replay-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-replay-request 'make-start-replay-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-replay-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-replay-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-name))
      (common-lisp:list
       (common-lisp:cons "ReplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-source-arn))
      (common-lisp:list
       (common-lisp:cons "EventSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-start-time))
      (common-lisp:list
       (common-lisp:cons "EventStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-end-time))
      (common-lisp:list
       (common-lisp:cons "EventEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-replay-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-replay-response common-lisp:nil
                       ((replay-arn :initarg :replay-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-arn common-lisp:null) :accessor
                         struct-shape-start-replay-response-replay-arn :shape
                         "ReplayArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or replay-state common-lisp:null)
                         :accessor struct-shape-start-replay-response-state
                         :shape "ReplayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or replay-state-reason common-lisp:null)
                         :accessor
                         struct-shape-start-replay-response-state-reason :shape
                         "ReplayStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replay-start-time :initarg :replay-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-start-replay-response-replay-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-replay-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-replay-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-replay-response 'make-start-replay-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-replay-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-replay-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-arn))
      (common-lisp:list
       (common-lisp:cons "ReplayArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replay-start-time))
      (common-lisp:list
       (common-lisp:cons "ReplayStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-replay-response))
   common-lisp:nil))
(common-lisp:deftype statement-id () 'common-lisp:string)
(common-lisp:deftype statement-name () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun make-string-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass target common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or target-id common-lisp:null) :accessor
                         struct-shape-target-id :shape "TargetId" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-target-arn :shape "TargetArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or role-arn common-lisp:null)
                         :accessor struct-shape-target-role-arn :shape
                         "RoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input :initarg :input :initform common-lisp:nil :type
                         (common-lisp:or target-input common-lisp:null)
                         :accessor struct-shape-target-input :shape
                         "TargetInput" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-path :initarg :input-path :initform
                         common-lisp:nil :type
                         (common-lisp:or target-input-path common-lisp:null)
                         :accessor struct-shape-target-input-path :shape
                         "TargetInputPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-transformer :initarg :input-transformer
                         :initform common-lisp:nil :type
                         (common-lisp:or input-transformer common-lisp:null)
                         :accessor struct-shape-target-input-transformer :shape
                         "InputTransformer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kinesis-parameters :initarg :kinesis-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or kinesis-parameters common-lisp:null)
                         :accessor struct-shape-target-kinesis-parameters
                         :shape "KinesisParameters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (run-command-parameters :initarg
                         :run-command-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or run-command-parameters
                                         common-lisp:null)
                         :accessor struct-shape-target-run-command-parameters
                         :shape "RunCommandParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ecs-parameters :initarg :ecs-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or ecs-parameters common-lisp:null)
                         :accessor struct-shape-target-ecs-parameters :shape
                         "EcsParameters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (batch-parameters :initarg :batch-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or batch-parameters common-lisp:null)
                         :accessor struct-shape-target-batch-parameters :shape
                         "BatchParameters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sqs-parameters :initarg :sqs-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or sqs-parameters common-lisp:null)
                         :accessor struct-shape-target-sqs-parameters :shape
                         "SqsParameters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-parameters :initarg :http-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or http-parameters common-lisp:null)
                         :accessor struct-shape-target-http-parameters :shape
                         "HttpParameters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (redshift-data-parameters :initarg
                         :redshift-data-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or redshift-data-parameters
                                         common-lisp:null)
                         :accessor struct-shape-target-redshift-data-parameters
                         :shape "RedshiftDataParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sage-maker-pipeline-parameters :initarg
                         :sage-maker-pipeline-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or sage-maker-pipeline-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-target-sage-maker-pipeline-parameters
                         :shape "SageMakerPipelineParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (dead-letter-config :initarg :dead-letter-config
                         :initform common-lisp:nil :type
                         (common-lisp:or dead-letter-config common-lisp:null)
                         :accessor struct-shape-target-dead-letter-config
                         :shape "DeadLetterConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retry-policy :initarg :retry-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or retry-policy common-lisp:null)
                         :accessor struct-shape-target-retry-policy :shape
                         "RetryPolicy" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-sync-parameters :initarg :app-sync-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or app-sync-parameters common-lisp:null)
                         :accessor struct-shape-target-app-sync-parameters
                         :shape "AppSyncParameters" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-target
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'target
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'target 'make-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input))
      (common-lisp:list
       (common-lisp:cons "Input"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-path))
      (common-lisp:list
       (common-lisp:cons "InputPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-transformer))
      (common-lisp:list
       (common-lisp:cons "InputTransformer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kinesis-parameters))
      (common-lisp:list
       (common-lisp:cons "KinesisParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'run-command-parameters))
      (common-lisp:list
       (common-lisp:cons "RunCommandParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ecs-parameters))
      (common-lisp:list
       (common-lisp:cons "EcsParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'batch-parameters))
      (common-lisp:list
       (common-lisp:cons "BatchParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs-parameters))
      (common-lisp:list
       (common-lisp:cons "SqsParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-parameters))
      (common-lisp:list
       (common-lisp:cons "HttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'redshift-data-parameters))
      (common-lisp:list
       (common-lisp:cons "RedshiftDataParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'sage-maker-pipeline-parameters))
      (common-lisp:list
       (common-lisp:cons "SageMakerPipelineParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dead-letter-config))
      (common-lisp:list
       (common-lisp:cons "DeadLetterConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retry-policy))
      (common-lisp:list
       (common-lisp:cons "RetryPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-sync-parameters))
      (common-lisp:list
       (common-lisp:cons "AppSyncParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input target))
   common-lisp:nil))
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-id-list () '(trivial-types:proper-list target-id))
 (common-lisp:defun make-target-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-input () 'common-lisp:string)
(common-lisp:deftype target-input-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-list () '(trivial-types:proper-list target))
 (common-lisp:defun make-target-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-partition-key-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass test-event-pattern-request common-lisp:nil
                       ((event-pattern :initarg :event-pattern :initform
                         (common-lisp:error ":event-pattern is required") :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor
                         struct-shape-test-event-pattern-request-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event :initarg :event :initform
                         (common-lisp:error ":event is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-event-pattern-request-event :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-event-pattern-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-event-pattern-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-event-pattern-request
                    'make-test-event-pattern-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-event-pattern-response common-lisp:nil
                       ((result :initarg :result :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-test-event-pattern-response-result :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-event-pattern-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-event-pattern-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-event-pattern-response
                    'make-test-event-pattern-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-event-pattern-response))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype trace-header () 'common-lisp:string)
(common-lisp:deftype transformer-input () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype transformer-paths () 'common-lisp:hash-table)
 (common-lisp:defun make-transformer-paths
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-destination-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or api-destination-name common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-name
                         :shape "ApiDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-description
                         :shape "ApiDestinationDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invocation-endpoint :initarg :invocation-endpoint
                         :initform common-lisp:nil :type
                         (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-invocation-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or api-destination-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-http-method
                         :shape "ApiDestinationHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (invocation-rate-limit-per-second :initarg
                         :invocation-rate-limit-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          api-destination-invocation-rate-limit-per-second
                          common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-request-invocation-rate-limit-per-second
                         :shape "ApiDestinationInvocationRateLimitPerSecond"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-api-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-destination-request
                    'make-update-api-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invocation-endpoint))
      (common-lisp:list
       (common-lisp:cons "InvocationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-rate-limit-per-second))
      (common-lisp:list
       (common-lisp:cons "InvocationRateLimitPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-destination-response common-lisp:nil
                       ((api-destination-arn :initarg :api-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-arn common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-response-api-destination-arn
                         :shape "ApiDestinationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-destination-state :initarg :api-destination-state
                         :initform common-lisp:nil :type
                         (common-lisp:or api-destination-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-destination-response-api-destination-state
                         :shape "ApiDestinationState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-api-destination-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-api-destination-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-api-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-destination-response
                    'make-update-api-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-destination-arn))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-destination-state))
      (common-lisp:list
       (common-lisp:cons "ApiDestinationState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-archive-request common-lisp:nil
                       ((archive-name :initarg :archive-name :initform
                         (common-lisp:error ":archive-name is required") :type
                         (common-lisp:or archive-name common-lisp:null)
                         :accessor
                         struct-shape-update-archive-request-archive-name
                         :shape "ArchiveName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-description common-lisp:null)
                         :accessor
                         struct-shape-update-archive-request-description :shape
                         "ArchiveDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-pattern :initarg :event-pattern :initform
                         common-lisp:nil :type
                         (common-lisp:or event-pattern common-lisp:null)
                         :accessor
                         struct-shape-update-archive-request-event-pattern
                         :shape "EventPattern" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-days :initarg :retention-days :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-days common-lisp:null)
                         :accessor
                         struct-shape-update-archive-request-retention-days
                         :shape "RetentionDays" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-archive-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-archive-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-archive-request 'make-update-archive-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-name))
      (common-lisp:list
       (common-lisp:cons "ArchiveName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-pattern))
      (common-lisp:list
       (common-lisp:cons "EventPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-days))
      (common-lisp:list
       (common-lisp:cons "RetentionDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-archive-response common-lisp:nil
                       ((archive-arn :initarg :archive-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-arn common-lisp:null)
                         :accessor
                         struct-shape-update-archive-response-archive-arn
                         :shape "ArchiveArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or archive-state common-lisp:null)
                         :accessor struct-shape-update-archive-response-state
                         :shape "ArchiveState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state-reason :initarg :state-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or archive-state-reason common-lisp:null)
                         :accessor
                         struct-shape-update-archive-response-state-reason
                         :shape "ArchiveStateReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-archive-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-archive-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-archive-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-archive-response 'make-update-archive-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'archive-arn))
      (common-lisp:list
       (common-lisp:cons "ArchiveArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-reason))
      (common-lisp:list
       (common-lisp:cons "StateReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-archive-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-api-key-auth-request-parameters
                       common-lisp:nil
                       ((api-key-name :initarg :api-key-name :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-api-key-auth-request-parameters-api-key-name
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (api-key-value :initarg :api-key-value :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-api-key-auth-request-parameters-api-key-value
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-api-key-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connection-api-key-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-api-key-auth-request-parameters
                    'make-update-connection-api-key-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-api-key-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-api-key-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-name))
      (common-lisp:list
       (common-lisp:cons "ApiKeyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-value))
      (common-lisp:list
       (common-lisp:cons "ApiKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-api-key-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-auth-request-parameters
                       common-lisp:nil
                       ((basic-auth-parameters :initarg :basic-auth-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-connection-basic-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-connection-auth-request-parameters-basic-auth-parameters
                         :shape "UpdateConnectionBasicAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (oauth-parameters :initarg :oauth-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          update-connection-oauth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-connection-auth-request-parameters-oauth-parameters
                         :shape "UpdateConnectionOAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-key-auth-parameters :initarg
                         :api-key-auth-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          update-connection-api-key-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-connection-auth-request-parameters-api-key-auth-parameters
                         :shape "UpdateConnectionApiKeyAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (invocation-http-parameters :initarg
                         :invocation-http-parameters :initform common-lisp:nil
                         :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-auth-request-parameters-invocation-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connection-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-auth-request-parameters
                    'make-update-connection-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'basic-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "BasicAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oauth-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'api-key-auth-parameters))
      (common-lisp:list
       (common-lisp:cons "ApiKeyAuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-http-parameters))
      (common-lisp:list
       (common-lisp:cons "InvocationHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-basic-auth-request-parameters
                       common-lisp:nil
                       ((username :initarg :username :initform common-lisp:nil
                         :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-basic-auth-request-parameters-username
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (password :initarg :password :initform common-lisp:nil
                         :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-basic-auth-request-parameters-password
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-basic-auth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connection-basic-auth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-basic-auth-request-parameters
                    'make-update-connection-basic-auth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-basic-auth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-basic-auth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-basic-auth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-oauth-client-request-parameters
                       common-lisp:nil
                       ((client-id :initarg :client-id :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-client-request-parameters-client-id
                         :shape "AuthHeaderParameters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-secret :initarg :client-secret :initform
                         common-lisp:nil :type
                         (common-lisp:or auth-header-parameters-sensitive
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-client-request-parameters-client-secret
                         :shape "AuthHeaderParametersSensitive" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-oauth-client-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connection-oauth-client-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-oauth-client-request-parameters
                    'make-update-connection-oauth-client-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-client-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-client-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "ClientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-client-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-oauth-request-parameters
                       common-lisp:nil
                       ((client-parameters :initarg :client-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          update-connection-oauth-client-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-request-parameters-client-parameters
                         :shape "UpdateConnectionOAuthClientRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorization-endpoint :initarg
                         :authorization-endpoint :initform common-lisp:nil
                         :type (common-lisp:or https-endpoint common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-request-parameters-authorization-endpoint
                         :shape "HttpsEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-oauth-http-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-request-parameters-http-method
                         :shape "ConnectionOAuthHttpMethod" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (oauth-http-parameters :initarg :oauth-http-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-http-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-oauth-request-parameters-oauth-http-parameters
                         :shape "ConnectionHttpParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-oauth-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-connection-oauth-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-oauth-request-parameters
                    'make-update-connection-oauth-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-parameters))
      (common-lisp:list
       (common-lisp:cons "ClientParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-endpoint))
      (common-lisp:list
       (common-lisp:cons "AuthorizationEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "HttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'oauth-http-parameters))
      (common-lisp:list
       (common-lisp:cons "OAuthHttpParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-oauth-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or connection-name common-lisp:null)
                         :accessor struct-shape-update-connection-request-name
                         :shape "ConnectionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-request-description
                         :shape "ConnectionDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or connection-authorization-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-connection-request-authorization-type
                         :shape "ConnectionAuthorizationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (auth-parameters :initarg :auth-parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          update-connection-auth-request-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-connection-request-auth-parameters
                         :shape "UpdateConnectionAuthRequestParameters"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-connection-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-request
                    'make-update-connection-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "AuthorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-parameters))
      (common-lisp:list
       (common-lisp:cons "AuthParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-connection-response common-lisp:nil
                       ((connection-arn :initarg :connection-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-arn common-lisp:null)
                         :accessor
                         struct-shape-update-connection-response-connection-arn
                         :shape "ConnectionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-state :initarg :connection-state :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-state common-lisp:null)
                         :accessor
                         struct-shape-update-connection-response-connection-state
                         :shape "ConnectionState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-connection-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-connection-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-authorized-time :initarg :last-authorized-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-connection-response-last-authorized-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-connection-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-connection-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-connection-response
                    'make-update-connection-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-state))
      (common-lisp:list
       (common-lisp:cons "ConnectionState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-authorized-time))
      (common-lisp:list
       (common-lisp:cons "LastAuthorizedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-connection-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-update-endpoint-request-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-description common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-description
                         :shape "EndpointDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-config common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-routing-config
                         :shape "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-event-buses
                         :shape "EndpointEventBusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-role-arn :shape
                         "IamRoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor struct-shape-update-endpoint-response-name
                         :shape "EndpointName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or endpoint-arn common-lisp:null)
                         :accessor struct-shape-update-endpoint-response-arn
                         :shape "EndpointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-config :initarg :routing-config :initform
                         common-lisp:nil :type
                         (common-lisp:or routing-config common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-routing-config
                         :shape "RoutingConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-config :initarg :replication-config
                         :initform common-lisp:nil :type
                         (common-lisp:or replication-config common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-replication-config
                         :shape "ReplicationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-buses :initarg :event-buses :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-event-bus-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-event-buses
                         :shape "EndpointEventBusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-role-arn :shape
                         "IamRoleArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-id :initarg :endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-id common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-endpoint-id
                         :shape "EndpointId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-url :initarg :endpoint-url :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-url common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-endpoint-url
                         :shape "EndpointUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or endpoint-state common-lisp:null)
                         :accessor struct-shape-update-endpoint-response-state
                         :shape "EndpointState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-config))
      (common-lisp:list
       (common-lisp:cons "RoutingConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-config))
      (common-lisp:list
       (common-lisp:cons "ReplicationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-buses))
      (common-lisp:list
       (common-lisp:cons "EventBuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-id))
      (common-lisp:list
       (common-lisp:cons "EndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-url))
      (common-lisp:list
       (common-lisp:cons "EndpointUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun activate-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-activate-event-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ActivateEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'activate-event-source))
(common-lisp:progn
 (common-lisp:defun cancel-replay
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replay-name)
   (common-lisp:declare (common-lisp:ignorable replay-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-replay-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelReplay"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-replay))
(common-lisp:progn
 (common-lisp:defun create-api-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description connection-arn
                     invocation-endpoint http-method
                     invocation-rate-limit-per-second)
   (common-lisp:declare
    (common-lisp:ignorable name description connection-arn invocation-endpoint
     http-method invocation-rate-limit-per-second))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateApiDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-api-destination))
(common-lisp:progn
 (common-lisp:defun create-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key archive-name event-source-arn description
                     event-pattern retention-days)
   (common-lisp:declare
    (common-lisp:ignorable archive-name event-source-arn description
     event-pattern retention-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-archive-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-archive))
(common-lisp:progn
 (common-lisp:defun create-connection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description authorization-type
                     auth-parameters)
   (common-lisp:declare
    (common-lisp:ignorable name description authorization-type
     auth-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-connection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateConnection"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-connection))
(common-lisp:progn
 (common-lisp:defun create-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description routing-config
                     replication-config event-buses role-arn)
   (common-lisp:declare
    (common-lisp:ignorable name description routing-config replication-config
     event-buses role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-endpoint))
(common-lisp:progn
 (common-lisp:defun create-event-bus
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name event-source-name tags)
   (common-lisp:declare (common-lisp:ignorable name event-source-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-event-bus-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateEventBus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-event-bus))
(common-lisp:progn
 (common-lisp:defun create-partner-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name account)
   (common-lisp:declare (common-lisp:ignorable name account))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-partner-event-source-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreatePartnerEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-partner-event-source))
(common-lisp:progn
 (common-lisp:defun deactivate-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deactivate-event-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeactivateEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'deactivate-event-source))
(common-lisp:progn
 (common-lisp:defun deauthorize-connection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deauthorize-connection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeauthorizeConnection"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'deauthorize-connection))
(common-lisp:progn
 (common-lisp:defun delete-api-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteApiDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-api-destination))
(common-lisp:progn
 (common-lisp:defun delete-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key archive-name)
   (common-lisp:declare (common-lisp:ignorable archive-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-archive-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-archive))
(common-lisp:progn
 (common-lisp:defun delete-connection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-connection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteConnection"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-connection))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-event-bus
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-bus-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteEventBus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-event-bus))
(common-lisp:progn
 (common-lisp:defun delete-partner-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name account)
   (common-lisp:declare (common-lisp:ignorable name account))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-partner-event-source-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeletePartnerEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-partner-event-source))
(common-lisp:progn
 (common-lisp:defun delete-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name event-bus-name force)
   (common-lisp:declare (common-lisp:ignorable name event-bus-name force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-rule))
(common-lisp:progn
 (common-lisp:defun describe-api-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-api-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeApiDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-api-destination))
(common-lisp:progn
 (common-lisp:defun describe-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key archive-name)
   (common-lisp:declare (common-lisp:ignorable archive-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-archive-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-archive))
(common-lisp:progn
 (common-lisp:defun describe-connection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-connection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeConnection"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-connection))
(common-lisp:progn
 (common-lisp:defun describe-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name home-region)
   (common-lisp:declare (common-lisp:ignorable name home-region))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-endpoint))
(common-lisp:progn
 (common-lisp:defun describe-event-bus
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-event-bus-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventBus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-bus))
(common-lisp:progn
 (common-lisp:defun describe-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-event-source-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-source))
(common-lisp:progn
 (common-lisp:defun describe-partner-event-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-partner-event-source-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribePartnerEventSource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-partner-event-source))
(common-lisp:progn
 (common-lisp:defun describe-replay
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replay-name)
   (common-lisp:declare (common-lisp:ignorable replay-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-replay-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeReplay"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-replay))
(common-lisp:progn
 (common-lisp:defun describe-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name event-bus-name)
   (common-lisp:declare (common-lisp:ignorable name event-bus-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-rule))
(common-lisp:progn
 (common-lisp:defun disable-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name event-bus-name)
   (common-lisp:declare (common-lisp:ignorable name event-bus-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disable-rule))
(common-lisp:progn
 (common-lisp:defun enable-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name event-bus-name)
   (common-lisp:declare (common-lisp:ignorable name event-bus-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "EnableRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'enable-rule))
(common-lisp:progn
 (common-lisp:defun list-api-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix connection-arn next-token
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix connection-arn next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-api-destinations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListApiDestinations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-api-destinations))
(common-lisp:progn
 (common-lisp:defun list-archives
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix event-source-arn state
                     next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix event-source-arn state next-token
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-archives-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListArchives"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-archives))
(common-lisp:progn
 (common-lisp:defun list-connections
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix connection-state next-token
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix connection-state next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-connections-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListConnections"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-connections))
(common-lisp:progn
 (common-lisp:defun list-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix home-region next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix home-region next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEndpoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-endpoints))
(common-lisp:progn
 (common-lisp:defun list-event-buses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix next-token limit)
   (common-lisp:declare (common-lisp:ignorable name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-buses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEventBuses"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-event-buses))
(common-lisp:progn
 (common-lisp:defun list-event-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix next-token limit)
   (common-lisp:declare (common-lisp:ignorable name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-sources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListEventSources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-event-sources))
(common-lisp:progn
 (common-lisp:defun list-partner-event-source-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-source-name next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable event-source-name next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-partner-event-source-accounts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPartnerEventSourceAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-partner-event-source-accounts))
(common-lisp:progn
 (common-lisp:defun list-partner-event-sources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix next-token limit)
   (common-lisp:declare (common-lisp:ignorable name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-partner-event-sources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListPartnerEventSources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-partner-event-sources))
(common-lisp:progn
 (common-lisp:defun list-replays
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix state event-source-arn
                     next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix state event-source-arn next-token
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-replays-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListReplays"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-replays))
(common-lisp:progn
 (common-lisp:defun list-rule-names-by-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn event-bus-name next-token
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable target-arn event-bus-name next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-rule-names-by-target-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListRuleNamesByTarget"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-rule-names-by-target))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix event-bus-name next-token
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable name-prefix event-bus-name next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-targets-by-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule event-bus-name next-token limit)
   (common-lisp:declare
    (common-lisp:ignorable rule event-bus-name next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-targets-by-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTargetsByRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-targets-by-rule))
(common-lisp:progn
 (common-lisp:defun put-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries endpoint-id)
   (common-lisp:declare (common-lisp:ignorable entries endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutEvents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-events))
(common-lisp:progn
 (common-lisp:defun put-partner-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries)
   (common-lisp:declare (common-lisp:ignorable entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-partner-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutPartnerEvents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-partner-events))
(common-lisp:progn
 (common-lisp:defun put-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-bus-name action principal
                     statement-id condition policy)
   (common-lisp:declare
    (common-lisp:ignorable event-bus-name action principal statement-id
     condition policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutPermission"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-permission))
(common-lisp:progn
 (common-lisp:defun put-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name schedule-expression event-pattern
                     state description role-arn tags event-bus-name)
   (common-lisp:declare
    (common-lisp:ignorable name schedule-expression event-pattern state
     description role-arn tags event-bus-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "PutRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-rule))
(common-lisp:progn
 (common-lisp:defun put-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule event-bus-name targets)
   (common-lisp:declare (common-lisp:ignorable rule event-bus-name targets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "PutTargets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-targets))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key statement-id remove-all-permissions
                     event-bus-name)
   (common-lisp:declare
    (common-lisp:ignorable statement-id remove-all-permissions event-bus-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemovePermission"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun remove-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule event-bus-name ids force)
   (common-lisp:declare (common-lisp:ignorable rule event-bus-name ids force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveTargets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'remove-targets))
(common-lisp:progn
 (common-lisp:defun start-replay
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key replay-name description event-source-arn
                     event-start-time event-end-time destination)
   (common-lisp:declare
    (common-lisp:ignorable replay-name description event-source-arn
     event-start-time event-end-time destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-replay-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartReplay"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-replay))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-event-pattern
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-pattern event)
   (common-lisp:declare (common-lisp:ignorable event-pattern event))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-event-pattern-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TestEventPattern"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'test-event-pattern))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-api-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description connection-arn
                     invocation-endpoint http-method
                     invocation-rate-limit-per-second)
   (common-lisp:declare
    (common-lisp:ignorable name description connection-arn invocation-endpoint
     http-method invocation-rate-limit-per-second))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-destination-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateApiDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-api-destination))
(common-lisp:progn
 (common-lisp:defun update-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key archive-name description event-pattern
                     retention-days)
   (common-lisp:declare
    (common-lisp:ignorable archive-name description event-pattern
     retention-days))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-archive-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-archive))
(common-lisp:progn
 (common-lisp:defun update-connection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description authorization-type
                     auth-parameters)
   (common-lisp:declare
    (common-lisp:ignorable name description authorization-type
     auth-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-connection-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateConnection"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-connection))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description routing-config
                     replication-config event-buses role-arn)
   (common-lisp:declare
    (common-lisp:ignorable name description routing-config replication-config
     event-buses role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'eventbridge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-endpoint))
